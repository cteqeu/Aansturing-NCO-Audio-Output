ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Stop, %function
  23              	PWM_Stop:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** 
  21:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM.c **** 
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM.c **** *
  28:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:.\Generated_Source\PSoC4/PWM.c **** *
  31:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** *
  34:.\Generated_Source\PSoC4/PWM.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM.c **** *  None
  36:.\Generated_Source\PSoC4/PWM.c **** *
  37:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:.\Generated_Source\PSoC4/PWM.c **** {
  40:.\Generated_Source\PSoC4/PWM.c **** 
  41:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM.c ****         
  45:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM.c **** 
  48:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM.c ****         
  51:.\Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM.c **** 
  57:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM.c ****         
  60:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM.c ****     
  63:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM.c ****         
  66:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM.c **** 
  69:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM.c ****         #else
  84:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM.c **** 
  88:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 3


  90:.\Generated_Source\PSoC4/PWM.c **** 
  91:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM.c ****         #else
  95:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/PWM.c ****             
  97:.\Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM.c **** 
 115:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM.c ****     
 118:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM.c **** 
 121:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else
 128:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM.c **** 
 140:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 4


 147:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM.c **** 
 149:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM.c **** 
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM.c ****     
 160:.\Generated_Source\PSoC4/PWM.c **** }
 161:.\Generated_Source\PSoC4/PWM.c **** 
 162:.\Generated_Source\PSoC4/PWM.c **** 
 163:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM.c **** *
 167:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:.\Generated_Source\PSoC4/PWM.c **** *
 170:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM.c **** *  None
 172:.\Generated_Source\PSoC4/PWM.c **** *
 173:.\Generated_Source\PSoC4/PWM.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM.c **** *  None
 175:.\Generated_Source\PSoC4/PWM.c **** *
 176:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:.\Generated_Source\PSoC4/PWM.c **** {
 179:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM.c **** 
 192:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM.c **** }
 198:.\Generated_Source\PSoC4/PWM.c **** 
 199:.\Generated_Source\PSoC4/PWM.c **** 
 200:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 202:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 5


 204:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 206:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 207:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM.c **** *
 210:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM.c **** *  None
 212:.\Generated_Source\PSoC4/PWM.c **** *
 213:.\Generated_Source\PSoC4/PWM.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM.c **** *  None
 215:.\Generated_Source\PSoC4/PWM.c **** *
 216:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 222:.\Generated_Source\PSoC4/PWM.c **** *
 223:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 225:.\Generated_Source\PSoC4/PWM.c **** {
 226:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 227:.\Generated_Source\PSoC4/PWM.c ****     {
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 229:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 230:.\Generated_Source\PSoC4/PWM.c ****     }
 231:.\Generated_Source\PSoC4/PWM.c **** 
 232:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 233:.\Generated_Source\PSoC4/PWM.c **** }
 234:.\Generated_Source\PSoC4/PWM.c **** 
 235:.\Generated_Source\PSoC4/PWM.c **** 
 236:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 238:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM.c **** *
 240:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 242:.\Generated_Source\PSoC4/PWM.c **** *
 243:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM.c **** *  None
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM.c **** *  None
 248:.\Generated_Source\PSoC4/PWM.c **** *
 249:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 251:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 251 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 252:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM.c **** 
 254:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 6


  32              		.loc 1 254 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 255:.\Generated_Source\PSoC4/PWM.c **** 
 256:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
  35              		.loc 1 256 0
  36 0006 044B     		ldr	r3, .L2
  37 0008 1A68     		ldr	r2, [r3]
  38 000a 0121     		mov	r1, #1
  39 000c 8A43     		bic	r2, r1
  40 000e 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/PWM.c **** 
 258:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 258 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 259:.\Generated_Source\PSoC4/PWM.c **** }
  44              		.loc 1 259 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00002040 		.word	1075838976
  51              		.cfi_endproc
  52              	.LFE4:
  53              		.size	PWM_Stop, .-PWM_Stop
  54              		.section	.text.PWM_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	PWM_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	PWM_SetMode, %function
  60              	PWM_SetMode:
  61              	.LFB5:
 260:.\Generated_Source\PSoC4/PWM.c **** 
 261:.\Generated_Source\PSoC4/PWM.c **** 
 262:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 264:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 268:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM.c **** *
 271:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 273:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 7


 282:.\Generated_Source\PSoC4/PWM.c **** *
 283:.\Generated_Source\PSoC4/PWM.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM.c **** *  None
 285:.\Generated_Source\PSoC4/PWM.c **** *
 286:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM.c **** {
  62              		.loc 1 288 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 289:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM.c **** 
 291:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 291 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 292:.\Generated_Source\PSoC4/PWM.c **** 
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
  73              		.loc 1 293 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
  79              		.loc 1 294 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 295:.\Generated_Source\PSoC4/PWM.c **** 
 296:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 296 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 297:.\Generated_Source\PSoC4/PWM.c **** }
  87              		.loc 1 297 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 00012040 		.word	1075839232
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE5:
  97              		.size	PWM_SetMode, .-PWM_SetMode
  98              		.section	.text.PWM_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	PWM_SetQDMode
 101              		.code	16
 102              		.thumb_func
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 8


 103              		.type	PWM_SetQDMode, %function
 104              	PWM_SetQDMode:
 105              	.LFB6:
 298:.\Generated_Source\PSoC4/PWM.c **** 
 299:.\Generated_Source\PSoC4/PWM.c **** 
 300:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 302:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM.c **** *
 304:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM.c **** *
 308:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM.c **** *
 316:.\Generated_Source\PSoC4/PWM.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM.c **** *  None
 318:.\Generated_Source\PSoC4/PWM.c **** *
 319:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM.c **** {
 106              		.loc 1 321 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 322:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM.c **** 
 324:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 324 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 325:.\Generated_Source\PSoC4/PWM.c **** 
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 117              		.loc 1 326 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 123              		.loc 1 327 0
 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 328:.\Generated_Source\PSoC4/PWM.c **** 
 329:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 9


 128              		.loc 1 329 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 330:.\Generated_Source\PSoC4/PWM.c **** }
 131              		.loc 1 330 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 00012040 		.word	1075839232
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE6:
 141              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 142              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	PWM_SetPrescaler, %function
 148              	PWM_SetPrescaler:
 149              	.LFB7:
 331:.\Generated_Source\PSoC4/PWM.c **** 
 332:.\Generated_Source\PSoC4/PWM.c **** 
 333:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM.c **** *
 337:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM.c **** *
 341:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM.c **** *
 353:.\Generated_Source\PSoC4/PWM.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM.c **** *  None
 355:.\Generated_Source\PSoC4/PWM.c **** *
 356:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM.c **** {
 150              		.loc 1 358 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 10


 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 359:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM.c **** 
 361:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 361 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 362:.\Generated_Source\PSoC4/PWM.c **** 
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 161              		.loc 1 363 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 167              		.loc 1 364 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 365:.\Generated_Source\PSoC4/PWM.c **** 
 366:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 366 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 367:.\Generated_Source\PSoC4/PWM.c **** }
 175              		.loc 1 367 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 00012040 		.word	1075839232
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE7:
 185              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 186              		.section	.text.PWM_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	PWM_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	PWM_SetOneShot, %function
 192              	PWM_SetOneShot:
 193              	.LFB8:
 368:.\Generated_Source\PSoC4/PWM.c **** 
 369:.\Generated_Source\PSoC4/PWM.c **** 
 370:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 372:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM.c **** *
 374:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 376:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 11


 378:.\Generated_Source\PSoC4/PWM.c **** *
 379:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM.c **** *
 385:.\Generated_Source\PSoC4/PWM.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM.c **** *  None
 387:.\Generated_Source\PSoC4/PWM.c **** *
 388:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM.c **** {
 194              		.loc 1 390 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 391:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM.c **** 
 393:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 393 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 394:.\Generated_Source\PSoC4/PWM.c **** 
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 205              		.loc 1 395 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 211              		.loc 1 396 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 397:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM.c **** 
 399:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 399 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 400:.\Generated_Source\PSoC4/PWM.c **** }
 222              		.loc 1 400 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 12


 228 0024 00012040 		.word	1075839232
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE8:
 232              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 233              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_SetPWMMode, %function
 239              	PWM_SetPWMMode:
 240              	.LFB9:
 401:.\Generated_Source\PSoC4/PWM.c **** 
 402:.\Generated_Source\PSoC4/PWM.c **** 
 403:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM.c **** *
 407:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM.c **** *
 414:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM.c **** *
 439:.\Generated_Source\PSoC4/PWM.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM.c **** *  None
 441:.\Generated_Source\PSoC4/PWM.c **** *
 442:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 13


 241              		.loc 1 444 0
 242              		.cfi_startproc
 243              	.LVL18:
 445:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 244              		.loc 1 445 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/PWM.c **** }
 250              		.loc 1 446 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c 28012040 		.word	1075839272
 257              		.cfi_endproc
 258              	.LFE9:
 259              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 260              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	PWM_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	PWM_SetPWMSyncKill, %function
 266              	PWM_SetPWMSyncKill:
 267              	.LFB10:
 447:.\Generated_Source\PSoC4/PWM.c **** 
 448:.\Generated_Source\PSoC4/PWM.c **** 
 449:.\Generated_Source\PSoC4/PWM.c **** 
 450:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM.c **** *
 454:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM.c **** *
 460:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM.c **** *
 463:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM.c **** 
 468:.\Generated_Source\PSoC4/PWM.c **** *
 469:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 14


 475:.\Generated_Source\PSoC4/PWM.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM.c **** *  None
 477:.\Generated_Source\PSoC4/PWM.c **** *
 478:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM.c **** {
 268              		.loc 1 480 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 481:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM.c **** 
 483:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 483 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 484:.\Generated_Source\PSoC4/PWM.c **** 
 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 279              		.loc 1 485 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 285              		.loc 1 486 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0121     		mov	r1, #1
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 487:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM.c **** 
 489:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 489 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 490:.\Generated_Source\PSoC4/PWM.c **** }
 296              		.loc 1 490 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 00012040 		.word	1075839232
 303              		.cfi_endproc
 304              	.LFE10:
 305              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 306              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_SetPWMStopOnKill
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 15


 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_SetPWMStopOnKill, %function
 312              	PWM_SetPWMStopOnKill:
 313              	.LFB11:
 491:.\Generated_Source\PSoC4/PWM.c **** 
 492:.\Generated_Source\PSoC4/PWM.c **** 
 493:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM.c **** *
 497:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM.c **** *
 502:.\Generated_Source\PSoC4/PWM.c **** *
 503:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM.c **** *
 509:.\Generated_Source\PSoC4/PWM.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM.c **** *  None
 511:.\Generated_Source\PSoC4/PWM.c **** *
 512:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM.c **** {
 314              		.loc 1 514 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 515:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM.c **** 
 517:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 517 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 518:.\Generated_Source\PSoC4/PWM.c **** 
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 325              		.loc 1 519 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 331              		.loc 1 520 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0121     		mov	r1, #1
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 16


 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 521:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM.c **** 
 523:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 523 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 524:.\Generated_Source\PSoC4/PWM.c **** }
 342              		.loc 1 524 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 00012040 		.word	1075839232
 349              		.cfi_endproc
 350              	.LFE11:
 351              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 352              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	PWM_SetPWMDeadTime, %function
 358              	PWM_SetPWMDeadTime:
 359              	.LFB12:
 525:.\Generated_Source\PSoC4/PWM.c **** 
 526:.\Generated_Source\PSoC4/PWM.c **** 
 527:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM.c **** *
 531:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM.c **** 
 537:.\Generated_Source\PSoC4/PWM.c **** *
 538:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM.c **** *
 542:.\Generated_Source\PSoC4/PWM.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM.c **** *  None
 544:.\Generated_Source\PSoC4/PWM.c **** *
 545:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM.c **** {
 360              		.loc 1 547 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 17


 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 548:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM.c **** 
 550:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 550 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 551:.\Generated_Source\PSoC4/PWM.c **** 
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 371              		.loc 1 552 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 377              		.loc 1 553 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 554:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM.c **** 
 556:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 556 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 557:.\Generated_Source\PSoC4/PWM.c **** }
 387              		.loc 1 557 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 00012040 		.word	1075839232
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE12:
 397              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 398              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	PWM_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	PWM_SetPWMInvert, %function
 404              	PWM_SetPWMInvert:
 405              	.LFB13:
 558:.\Generated_Source\PSoC4/PWM.c **** 
 559:.\Generated_Source\PSoC4/PWM.c **** 
 560:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM.c **** *
 564:.\Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 18


 565:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM.c **** *
 569:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM.c **** *
 575:.\Generated_Source\PSoC4/PWM.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM.c **** *  None
 577:.\Generated_Source\PSoC4/PWM.c **** *
 578:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM.c **** {
 406              		.loc 1 580 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 581:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM.c **** 
 583:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 583 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 584:.\Generated_Source\PSoC4/PWM.c **** 
 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 417              		.loc 1 585 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 423              		.loc 1 586 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 587:.\Generated_Source\PSoC4/PWM.c **** 
 588:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 588 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 589:.\Generated_Source\PSoC4/PWM.c **** }
 431              		.loc 1 589 0
 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 00012040 		.word	1075839232
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 19


 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE13:
 441              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 442              		.section	.text.PWM_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	PWM_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	PWM_WriteCounter, %function
 448              	PWM_WriteCounter:
 449              	.LFB14:
 590:.\Generated_Source\PSoC4/PWM.c **** 
 591:.\Generated_Source\PSoC4/PWM.c **** 
 592:.\Generated_Source\PSoC4/PWM.c **** 
 593:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 595:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM.c **** *
 597:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM.c **** *
 602:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM.c **** *
 605:.\Generated_Source\PSoC4/PWM.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM.c **** *  None
 607:.\Generated_Source\PSoC4/PWM.c **** *
 608:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM.c **** {
 450              		.loc 1 610 0
 451              		.cfi_startproc
 452              	.LVL36:
 611:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 453              		.loc 1 611 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/PWM.c **** }
 459              		.loc 1 612 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 08012040 		.word	1075839240
 466              		.cfi_endproc
 467              	.LFE14:
 468              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 469              		.section	.text.PWM_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	PWM_ReadCounter
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 20


 472              		.code	16
 473              		.thumb_func
 474              		.type	PWM_ReadCounter, %function
 475              	PWM_ReadCounter:
 476              	.LFB15:
 613:.\Generated_Source\PSoC4/PWM.c **** 
 614:.\Generated_Source\PSoC4/PWM.c **** 
 615:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 617:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM.c **** *
 619:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM.c **** *
 622:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM.c **** *  None
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM.c **** {
 477              		.loc 1 630 0
 478              		.cfi_startproc
 631:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 479              		.loc 1 631 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 632:.\Generated_Source\PSoC4/PWM.c **** }
 484              		.loc 1 632 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 08012040 		.word	1075839240
 491              		.cfi_endproc
 492              	.LFE15:
 493              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 494              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_SetCounterMode, %function
 500              	PWM_SetCounterMode:
 501              	.LFB16:
 633:.\Generated_Source\PSoC4/PWM.c **** 
 634:.\Generated_Source\PSoC4/PWM.c **** 
 635:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM.c **** *
 639:.\Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 21


 640:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM.c **** *
 643:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM.c **** *
 654:.\Generated_Source\PSoC4/PWM.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM.c **** *  None
 656:.\Generated_Source\PSoC4/PWM.c **** *
 657:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM.c **** {
 502              		.loc 1 659 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 660:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM.c **** 
 662:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 662 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 663:.\Generated_Source\PSoC4/PWM.c **** 
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 513              		.loc 1 664 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 519              		.loc 1 665 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 666:.\Generated_Source\PSoC4/PWM.c **** 
 667:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 667 0
 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 668:.\Generated_Source\PSoC4/PWM.c **** }
 527              		.loc 1 668 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 22


 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 00012040 		.word	1075839232
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE16:
 537              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 538              		.section	.text.PWM_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	PWM_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	PWM_WritePeriod, %function
 544              	PWM_WritePeriod:
 545              	.LFB17:
 669:.\Generated_Source\PSoC4/PWM.c **** 
 670:.\Generated_Source\PSoC4/PWM.c **** 
 671:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 673:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM.c **** *
 675:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM.c **** *
 680:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM.c **** *
 683:.\Generated_Source\PSoC4/PWM.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM.c **** *  None
 685:.\Generated_Source\PSoC4/PWM.c **** *
 686:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM.c **** {
 546              		.loc 1 688 0
 547              		.cfi_startproc
 548              	.LVL42:
 689:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 549              		.loc 1 689 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/PWM.c **** }
 555              		.loc 1 690 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
 559 000a C046     		.align	2
 560              	.L41:
 561 000c 14012040 		.word	1075839252
 562              		.cfi_endproc
 563              	.LFE17:
 564              		.size	PWM_WritePeriod, .-PWM_WritePeriod
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 23


 565              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	PWM_ReadPeriod, %function
 571              	PWM_ReadPeriod:
 572              	.LFB18:
 691:.\Generated_Source\PSoC4/PWM.c **** 
 692:.\Generated_Source\PSoC4/PWM.c **** 
 693:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM.c **** *
 697:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM.c **** *
 700:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM.c **** *  None
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM.c **** {
 573              		.loc 1 708 0
 574              		.cfi_startproc
 709:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 575              		.loc 1 709 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 710:.\Generated_Source\PSoC4/PWM.c **** }
 580              		.loc 1 710 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 14012040 		.word	1075839252
 587              		.cfi_endproc
 588              	.LFE18:
 589              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 590              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	PWM_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	PWM_SetCompareSwap, %function
 596              	PWM_SetCompareSwap:
 597              	.LFB19:
 711:.\Generated_Source\PSoC4/PWM.c **** 
 712:.\Generated_Source\PSoC4/PWM.c **** 
 713:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 24


 715:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM.c **** *
 717:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM.c **** *  None
 731:.\Generated_Source\PSoC4/PWM.c **** *
 732:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM.c **** {
 598              		.loc 1 734 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 735:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM.c **** 
 737:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 737 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 738:.\Generated_Source\PSoC4/PWM.c **** 
 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 609              		.loc 1 739 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1968     		ldr	r1, [r3]
 612 000c 0122     		mov	r2, #1
 613 000e 9143     		bic	r1, r2
 614 0010 1960     		str	r1, [r3]
 740:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 615              		.loc 1 740 0
 616 0012 1968     		ldr	r1, [r3]
 617 0014 2240     		and	r2, r4
 618 0016 0A43     		orr	r2, r1
 619 0018 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/PWM.c **** 
 742:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 620              		.loc 1 742 0
 621 001a FFF7FEFF 		bl	CyExitCriticalSection
 622              	.LVL46:
 743:.\Generated_Source\PSoC4/PWM.c **** }
 623              		.loc 1 743 0
 624              		@ sp needed
 625              	.LVL47:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 25


 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 00012040 		.word	1075839232
 631              		.cfi_endproc
 632              	.LFE19:
 633              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 634              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_WritePeriodBuf, %function
 640              	PWM_WritePeriodBuf:
 641              	.LFB20:
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c **** 
 746:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM.c **** *
 750:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM.c **** *
 753:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM.c **** *
 756:.\Generated_Source\PSoC4/PWM.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM.c **** *  None
 758:.\Generated_Source\PSoC4/PWM.c **** *
 759:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM.c **** {
 642              		.loc 1 761 0
 643              		.cfi_startproc
 644              	.LVL48:
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 645              		.loc 1 762 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/PWM.c **** }
 651              		.loc 1 763 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
 657 000c 18012040 		.word	1075839256
 658              		.cfi_endproc
 659              	.LFE20:
 660              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 661              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 26


 663              		.global	PWM_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	PWM_ReadPeriodBuf, %function
 667              	PWM_ReadPeriodBuf:
 668              	.LFB21:
 764:.\Generated_Source\PSoC4/PWM.c **** 
 765:.\Generated_Source\PSoC4/PWM.c **** 
 766:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM.c **** *
 770:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM.c **** *  None
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM.c **** {
 669              		.loc 1 781 0
 670              		.cfi_startproc
 782:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 671              		.loc 1 782 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 783:.\Generated_Source\PSoC4/PWM.c **** }
 676              		.loc 1 783 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 18012040 		.word	1075839256
 683              		.cfi_endproc
 684              	.LFE21:
 685              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 686              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	PWM_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	PWM_SetPeriodSwap, %function
 692              	PWM_SetPeriodSwap:
 693              	.LFB22:
 784:.\Generated_Source\PSoC4/PWM.c **** 
 785:.\Generated_Source\PSoC4/PWM.c **** 
 786:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 27


 790:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM.c **** *  None
 804:.\Generated_Source\PSoC4/PWM.c **** *
 805:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM.c **** {
 694              		.loc 1 807 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 808:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM.c **** 
 810:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 810 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 811:.\Generated_Source\PSoC4/PWM.c **** 
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 705              		.loc 1 812 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 711              		.loc 1 813 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0121     		mov	r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 814:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM.c **** 
 816:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 816 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 817:.\Generated_Source\PSoC4/PWM.c **** }
 722              		.loc 1 817 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 28


 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 00012040 		.word	1075839232
 729              		.cfi_endproc
 730              	.LFE22:
 731              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 732              		.section	.text.PWM_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	PWM_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	PWM_WriteCompare, %function
 738              	PWM_WriteCompare:
 739              	.LFB23:
 818:.\Generated_Source\PSoC4/PWM.c **** 
 819:.\Generated_Source\PSoC4/PWM.c **** 
 820:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 822:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM.c **** *
 824:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM.c **** *
 828:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM.c **** *
 831:.\Generated_Source\PSoC4/PWM.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM.c **** *  None
 833:.\Generated_Source\PSoC4/PWM.c **** *
 834:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM.c **** {
 740              		.loc 1 836 0
 741              		.cfi_startproc
 742              	.LVL54:
 837:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM.c **** 
 841:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM.c **** 
 844:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM.c ****         {
 846:.\Generated_Source\PSoC4/PWM.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM.c ****         }
 848:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM.c ****         {
 850:.\Generated_Source\PSoC4/PWM.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM.c ****         }
 852:.\Generated_Source\PSoC4/PWM.c ****         else
 853:.\Generated_Source\PSoC4/PWM.c ****         {
 854:.\Generated_Source\PSoC4/PWM.c ****         }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 29


 855:.\Generated_Source\PSoC4/PWM.c ****         
 856:.\Generated_Source\PSoC4/PWM.c ****     
 857:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM.c ****     
 859:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 743              		.loc 1 859 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/PWM.c **** }
 749              		.loc 1 860 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 0C012040 		.word	1075839244
 756              		.cfi_endproc
 757              	.LFE23:
 758              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 759              		.section	.text.PWM_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	PWM_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	PWM_ReadCompare, %function
 765              	PWM_ReadCompare:
 766              	.LFB24:
 861:.\Generated_Source\PSoC4/PWM.c **** 
 862:.\Generated_Source\PSoC4/PWM.c **** 
 863:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 865:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM.c **** *
 867:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM.c **** *
 871:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM.c **** *  None
 873:.\Generated_Source\PSoC4/PWM.c **** *
 874:.\Generated_Source\PSoC4/PWM.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM.c **** *
 877:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM.c **** {
 767              		.loc 1 879 0
 768              		.cfi_startproc
 880:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM.c **** 
 885:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 30


 886:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM.c ****         
 888:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM.c ****         
 890:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM.c ****         {
 892:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM.c ****         }
 894:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM.c ****         {
 896:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM.c ****         }
 898:.\Generated_Source\PSoC4/PWM.c ****         else
 899:.\Generated_Source\PSoC4/PWM.c ****         {
 900:.\Generated_Source\PSoC4/PWM.c ****         }
 901:.\Generated_Source\PSoC4/PWM.c **** 
 902:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM.c ****     #else
 904:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 769              		.loc 1 904 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM.c **** }
 774              		.loc 1 906 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 0C012040 		.word	1075839244
 781              		.cfi_endproc
 782              	.LFE24:
 783              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 784              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_WriteCompareBuf, %function
 790              	PWM_WriteCompareBuf:
 791              	.LFB25:
 907:.\Generated_Source\PSoC4/PWM.c **** 
 908:.\Generated_Source\PSoC4/PWM.c **** 
 909:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM.c **** *
 913:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM.c **** *
 917:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 31


 920:.\Generated_Source\PSoC4/PWM.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM.c **** *  None
 922:.\Generated_Source\PSoC4/PWM.c **** *
 923:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM.c **** {
 792              		.loc 1 925 0
 793              		.cfi_startproc
 794              	.LVL56:
 926:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM.c **** 
 930:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM.c **** 
 933:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM.c ****         {
 935:.\Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM.c ****         }
 937:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM.c ****         {
 939:.\Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM.c ****         }
 941:.\Generated_Source\PSoC4/PWM.c ****         else
 942:.\Generated_Source\PSoC4/PWM.c ****         {
 943:.\Generated_Source\PSoC4/PWM.c ****         }
 944:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM.c ****     
 946:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 795              		.loc 1 946 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/PWM.c **** }
 801              		.loc 1 947 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 10012040 		.word	1075839248
 808              		.cfi_endproc
 809              	.LFE25:
 810              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 811              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	PWM_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	PWM_ReadCompareBuf, %function
 817              	PWM_ReadCompareBuf:
 818              	.LFB26:
 948:.\Generated_Source\PSoC4/PWM.c **** 
 949:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 32


 950:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM.c **** *
 954:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM.c **** *
 958:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM.c **** *  None
 960:.\Generated_Source\PSoC4/PWM.c **** *
 961:.\Generated_Source\PSoC4/PWM.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM.c **** *
 964:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM.c **** {
 819              		.loc 1 966 0
 820              		.cfi_startproc
 967:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM.c **** 
 972:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM.c **** 
 975:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM.c ****         
 977:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM.c ****         {
 979:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM.c ****         }
 981:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM.c ****         {
 983:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM.c ****         }
 985:.\Generated_Source\PSoC4/PWM.c ****         else
 986:.\Generated_Source\PSoC4/PWM.c ****         {
 987:.\Generated_Source\PSoC4/PWM.c ****         }
 988:.\Generated_Source\PSoC4/PWM.c **** 
 989:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM.c ****     #else
 991:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 821              		.loc 1 991 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
 992:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM.c **** }
 826              		.loc 1 993 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 33


 832 000c 10012040 		.word	1075839248
 833              		.cfi_endproc
 834              	.LFE26:
 835              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 836              		.section	.text.PWM_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	PWM_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	PWM_ReadCapture, %function
 842              	PWM_ReadCapture:
 843              	.LFB27:
 994:.\Generated_Source\PSoC4/PWM.c **** 
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
 998:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM.c **** *
1000:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM.c **** *
1004:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM.c **** *  None
1006:.\Generated_Source\PSoC4/PWM.c **** *
1007:.\Generated_Source\PSoC4/PWM.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM.c **** *
1010:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM.c **** {
 844              		.loc 1 1012 0
 845              		.cfi_startproc
1013:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 846              		.loc 1 1013 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1014:.\Generated_Source\PSoC4/PWM.c **** }
 851              		.loc 1 1014 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 0C012040 		.word	1075839244
 858              		.cfi_endproc
 859              	.LFE27:
 860              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 861              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	PWM_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	PWM_ReadCaptureBuf, %function
 867              	PWM_ReadCaptureBuf:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 34


 868              	.LFB28:
1015:.\Generated_Source\PSoC4/PWM.c **** 
1016:.\Generated_Source\PSoC4/PWM.c **** 
1017:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM.c **** *
1021:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM.c **** *
1025:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM.c **** *  None
1027:.\Generated_Source\PSoC4/PWM.c **** *
1028:.\Generated_Source\PSoC4/PWM.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM.c **** *
1031:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM.c **** {
 869              		.loc 1 1033 0
 870              		.cfi_startproc
1034:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 871              		.loc 1 1034 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1035:.\Generated_Source\PSoC4/PWM.c **** }
 876              		.loc 1 1035 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 10012040 		.word	1075839248
 883              		.cfi_endproc
 884              	.LFE28:
 885              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 886              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	PWM_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	PWM_SetCaptureMode, %function
 892              	PWM_SetCaptureMode:
 893              	.LFB29:
1036:.\Generated_Source\PSoC4/PWM.c **** 
1037:.\Generated_Source\PSoC4/PWM.c **** 
1038:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM.c **** *
1042:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 35


1046:.\Generated_Source\PSoC4/PWM.c **** *
1047:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM.c **** *
1055:.\Generated_Source\PSoC4/PWM.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM.c **** *  None
1057:.\Generated_Source\PSoC4/PWM.c **** *
1058:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM.c **** {
 894              		.loc 1 1060 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
 901 0002 041C     		mov	r4, r0
1061:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM.c **** 
1063:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1063 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1064:.\Generated_Source\PSoC4/PWM.c **** 
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 905              		.loc 1 1065 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1066 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1067:.\Generated_Source\PSoC4/PWM.c **** 
1068:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1068 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1069:.\Generated_Source\PSoC4/PWM.c **** }
 919              		.loc 1 1069 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 24012040 		.word	1075839268
 926              		.cfi_endproc
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 36


 927              	.LFE29:
 928              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 929              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	PWM_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	PWM_SetReloadMode, %function
 935              	PWM_SetReloadMode:
 936              	.LFB30:
1070:.\Generated_Source\PSoC4/PWM.c **** 
1071:.\Generated_Source\PSoC4/PWM.c **** 
1072:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM.c **** *
1076:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM.c **** *
1080:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM.c **** *
1088:.\Generated_Source\PSoC4/PWM.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM.c **** *  None
1090:.\Generated_Source\PSoC4/PWM.c **** *
1091:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM.c **** {
 937              		.loc 1 1093 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1094:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM.c **** 
1096:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1096 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1097:.\Generated_Source\PSoC4/PWM.c **** 
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 948              		.loc 1 1098 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 37


 954              		.loc 1 1099 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1100:.\Generated_Source\PSoC4/PWM.c **** 
1101:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1101 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1102:.\Generated_Source\PSoC4/PWM.c **** }
 963              		.loc 1 1102 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 24012040 		.word	1075839268
 970              		.cfi_endproc
 971              	.LFE30:
 972              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 973              		.section	.text.PWM_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	PWM_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	PWM_SetStartMode, %function
 979              	PWM_SetStartMode:
 980              	.LFB31:
1103:.\Generated_Source\PSoC4/PWM.c **** 
1104:.\Generated_Source\PSoC4/PWM.c **** 
1105:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1107:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM.c **** *
1109:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM.c **** *
1113:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM.c **** *
1121:.\Generated_Source\PSoC4/PWM.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM.c **** *  None
1123:.\Generated_Source\PSoC4/PWM.c **** *
1124:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM.c **** {
 981              		.loc 1 1126 0
 982              		.cfi_startproc
 983              	.LVL66:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 38


 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1127:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM.c **** 
1129:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1129 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1130:.\Generated_Source\PSoC4/PWM.c **** 
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 992              		.loc 1 1131 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 998              		.loc 1 1132 0
 999 0012 1A68     		ldr	r2, [r3]
 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1133:.\Generated_Source\PSoC4/PWM.c **** 
1134:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1134 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1135:.\Generated_Source\PSoC4/PWM.c **** }
 1007              		.loc 1 1135 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 24012040 		.word	1075839268
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE31:
 1017              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1018              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	PWM_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	PWM_SetStopMode, %function
 1024              	PWM_SetStopMode:
 1025              	.LFB32:
1136:.\Generated_Source\PSoC4/PWM.c **** 
1137:.\Generated_Source\PSoC4/PWM.c **** 
1138:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1140:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 39


1142:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM.c **** *
1145:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM.c **** *
1153:.\Generated_Source\PSoC4/PWM.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM.c **** *  None
1155:.\Generated_Source\PSoC4/PWM.c **** *
1156:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM.c **** {
 1026              		.loc 1 1158 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1159:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM.c **** 
1161:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1161 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1162:.\Generated_Source\PSoC4/PWM.c **** 
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1037              		.loc 1 1163 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1043              		.loc 1 1164 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1166 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1167:.\Generated_Source\PSoC4/PWM.c **** }
 1052              		.loc 1 1167 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 40


 1057              	.L86:
 1058 0020 24012040 		.word	1075839268
 1059              		.cfi_endproc
 1060              	.LFE32:
 1061              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1062              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	PWM_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	PWM_SetCountMode, %function
 1068              	PWM_SetCountMode:
 1069              	.LFB33:
1168:.\Generated_Source\PSoC4/PWM.c **** 
1169:.\Generated_Source\PSoC4/PWM.c **** 
1170:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1172:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM.c **** *
1174:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM.c **** *
1178:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM.c **** *
1186:.\Generated_Source\PSoC4/PWM.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM.c **** *  None
1188:.\Generated_Source\PSoC4/PWM.c **** *
1189:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM.c **** {
 1070              		.loc 1 1191 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1192:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM.c **** 
1194:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1194 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1195:.\Generated_Source\PSoC4/PWM.c **** 
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1081              		.loc 1 1196 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 41


 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1087              		.loc 1 1197 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1198:.\Generated_Source\PSoC4/PWM.c **** 
1199:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1199 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1200:.\Generated_Source\PSoC4/PWM.c **** }
 1096              		.loc 1 1200 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 24012040 		.word	1075839268
 1103              		.cfi_endproc
 1104              	.LFE33:
 1105              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1106              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	PWM_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	PWM_TriggerCommand, %function
 1112              	PWM_TriggerCommand:
 1113              	.LFB34:
1201:.\Generated_Source\PSoC4/PWM.c **** 
1202:.\Generated_Source\PSoC4/PWM.c **** 
1203:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM.c **** *
1207:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM.c **** *
1212:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 42


1225:.\Generated_Source\PSoC4/PWM.c **** *
1226:.\Generated_Source\PSoC4/PWM.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM.c **** *  None
1228:.\Generated_Source\PSoC4/PWM.c **** *
1229:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM.c **** {
 1114              		.loc 1 1231 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 051C     		mov	r5, r0
 1124 0004 0C1C     		mov	r4, r1
1232:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM.c **** 
1234:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1234 0
 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1235:.\Generated_Source\PSoC4/PWM.c **** 
1236:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1236 0
 1129 000a A540     		lsl	r5, r5, r4
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1D60     		str	r5, [r3]
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1238 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1239:.\Generated_Source\PSoC4/PWM.c **** }
 1136              		.loc 1 1239 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08002040 		.word	1075838984
 1144              		.cfi_endproc
 1145              	.LFE34:
 1146              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1147              		.section	.text.PWM_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	PWM_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	PWM_Enable, %function
 1153              	PWM_Enable:
 1154              	.LFB2:
 178:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 43


 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 1164              		.loc 1 182 0
 1165 0006 064B     		ldr	r3, .L95
 1166 0008 1968     		ldr	r1, [r3]
 1167 000a 0122     		mov	r2, #1
 1168 000c 0A43     		orr	r2, r1
 1169 000e 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 1173              		.loc 1 188 0
 1174 0014 0120     		mov	r0, #1
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	PWM_TriggerCommand
 1177              	.LVL85:
 197:.\Generated_Source\PSoC4/PWM.c **** }
 1178              		.loc 1 197 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00002040 		.word	1075838976
 1185              		.cfi_endproc
 1186              	.LFE2:
 1187              		.size	PWM_Enable, .-PWM_Enable
 1188              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	PWM_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	PWM_ReadStatus, %function
 1194              	PWM_ReadStatus:
 1195              	.LFB35:
1240:.\Generated_Source\PSoC4/PWM.c **** 
1241:.\Generated_Source\PSoC4/PWM.c **** 
1242:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1244:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM.c **** *
1246:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1248:.\Generated_Source\PSoC4/PWM.c **** *
1249:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 44


1251:.\Generated_Source\PSoC4/PWM.c **** *
1252:.\Generated_Source\PSoC4/PWM.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM.c **** *
1258:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM.c **** {
 1196              		.loc 1 1260 0
 1197              		.cfi_startproc
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1261 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1A68     		ldr	r2, [r3]
 1201 0004 920F     		lsr	r2, r2, #30
1262:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1202              		.loc 1 1262 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1261 0
 1207 000c 1043     		orr	r0, r2
1263:.\Generated_Source\PSoC4/PWM.c **** }
 1208              		.loc 1 1263 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 04012040 		.word	1075839236
 1215              		.cfi_endproc
 1216              	.LFE35:
 1217              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1218              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	PWM_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	PWM_SetInterruptMode, %function
 1224              	PWM_SetInterruptMode:
 1225              	.LFB36:
1264:.\Generated_Source\PSoC4/PWM.c **** 
1265:.\Generated_Source\PSoC4/PWM.c **** 
1266:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM.c **** *
1270:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM.c **** *
1274:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 45


1277:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM.c **** *
1280:.\Generated_Source\PSoC4/PWM.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM.c **** *  None
1282:.\Generated_Source\PSoC4/PWM.c **** *
1283:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM.c **** {
 1226              		.loc 1 1285 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1286:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1286 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1287:.\Generated_Source\PSoC4/PWM.c **** }
 1232              		.loc 1 1287 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
 1237              	.L101:
 1238 0008 38012040 		.word	1075839288
 1239              		.cfi_endproc
 1240              	.LFE36:
 1241              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1242              		.section	.text.PWM_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	PWM_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	PWM_Init, %function
 1248              	PWM_Init:
 1249              	.LFB1:
  39:.\Generated_Source\PSoC4/PWM.c **** {
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
 1256              		.loc 1 89 0
 1257 0002 0D4C     		ldr	r4, .L104
 1258 0004 8023     		mov	r3, #128
 1259 0006 DB04     		lsl	r3, r3, #19
 1260 0008 2360     		str	r3, [r4]
  95:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
 1261              		.loc 1 95 0
 1262 000a 2368     		ldr	r3, [r4]
 1263 000c 2360     		str	r3, [r4]
 103:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 1264              		.loc 1 103 0
 1265 000e 0020     		mov	r0, #0
 1266 0010 FFF7FEFF 		bl	PWM_WriteCounter
 1267              	.LVL87:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 46


 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 1268              		.loc 1 112 0
 1269 0014 2368     		ldr	r3, [r4]
 1270 0016 2360     		str	r3, [r4]
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 1271              		.loc 1 116 0
 1272 0018 0C22     		mov	r2, #12
 1273 001a 084B     		ldr	r3, .L104+4
 1274 001c 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 1275              		.loc 1 119 0
 1276 001e 0120     		mov	r0, #1
 1277 0020 FFF7FEFF 		bl	PWM_SetInterruptMode
 1278              	.LVL88:
 129:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 1279              		.loc 1 129 0
 1280 0024 3122     		mov	r2, #49
 1281 0026 064B     		ldr	r3, .L104+8
 1282 0028 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
 1283              		.loc 1 146 0
 1284 002a 0C20     		mov	r0, #12
 1285 002c FFF7FEFF 		bl	PWM_WritePeriod
 1286              	.LVL89:
 147:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 1287              		.loc 1 147 0
 1288 0030 0020     		mov	r0, #0
 1289 0032 FFF7FEFF 		bl	PWM_WriteCompare
 1290              	.LVL90:
 160:.\Generated_Source\PSoC4/PWM.c **** }
 1291              		.loc 1 160 0
 1292              		@ sp needed
 1293 0036 10BD     		pop	{r4, pc}
 1294              	.L105:
 1295              		.align	2
 1296              	.L104:
 1297 0038 00012040 		.word	1075839232
 1298 003c 24012040 		.word	1075839268
 1299 0040 28012040 		.word	1075839272
 1300              		.cfi_endproc
 1301              	.LFE1:
 1302              		.size	PWM_Init, .-PWM_Init
 1303              		.section	.text.PWM_Start,"ax",%progbits
 1304              		.align	2
 1305              		.global	PWM_Start
 1306              		.code	16
 1307              		.thumb_func
 1308              		.type	PWM_Start, %function
 1309              	PWM_Start:
 1310              	.LFB3:
 225:.\Generated_Source\PSoC4/PWM.c **** {
 1311              		.loc 1 225 0
 1312              		.cfi_startproc
 1313 0000 08B5     		push	{r3, lr}
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 3, -8
 1316              		.cfi_offset 14, -4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 47


 226:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 1317              		.loc 1 226 0
 1318 0002 064B     		ldr	r3, .L108
 1319 0004 1B78     		ldrb	r3, [r3]
 1320 0006 002B     		cmp	r3, #0
 1321 0008 04D1     		bne	.L107
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 1322              		.loc 1 228 0
 1323 000a FFF7FEFF 		bl	PWM_Init
 1324              	.LVL91:
 229:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 1325              		.loc 1 229 0
 1326 000e 0122     		mov	r2, #1
 1327 0010 024B     		ldr	r3, .L108
 1328 0012 1A70     		strb	r2, [r3]
 1329              	.L107:
 232:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 1330              		.loc 1 232 0
 1331 0014 FFF7FEFF 		bl	PWM_Enable
 1332              	.LVL92:
 233:.\Generated_Source\PSoC4/PWM.c **** }
 1333              		.loc 1 233 0
 1334              		@ sp needed
 1335 0018 08BD     		pop	{r3, pc}
 1336              	.L109:
 1337 001a C046     		.align	2
 1338              	.L108:
 1339 001c 00000000 		.word	.LANCHOR0
 1340              		.cfi_endproc
 1341              	.LFE3:
 1342              		.size	PWM_Start, .-PWM_Start
 1343              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1344              		.align	2
 1345              		.global	PWM_GetInterruptSourceMasked
 1346              		.code	16
 1347              		.thumb_func
 1348              		.type	PWM_GetInterruptSourceMasked, %function
 1349              	PWM_GetInterruptSourceMasked:
 1350              	.LFB37:
1288:.\Generated_Source\PSoC4/PWM.c **** 
1289:.\Generated_Source\PSoC4/PWM.c **** 
1290:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM.c **** *
1294:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM.c **** *
1297:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM.c **** *   None
1299:.\Generated_Source\PSoC4/PWM.c **** *
1300:.\Generated_Source\PSoC4/PWM.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 48


1306:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM.c **** {
 1351              		.loc 1 1308 0
 1352              		.cfi_startproc
1309:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1353              		.loc 1 1309 0
 1354 0000 014B     		ldr	r3, .L111
 1355 0002 1868     		ldr	r0, [r3]
1310:.\Generated_Source\PSoC4/PWM.c **** }
 1356              		.loc 1 1310 0
 1357              		@ sp needed
 1358 0004 7047     		bx	lr
 1359              	.L112:
 1360 0006 C046     		.align	2
 1361              	.L111:
 1362 0008 3C012040 		.word	1075839292
 1363              		.cfi_endproc
 1364              	.LFE37:
 1365              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1366              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1367              		.align	2
 1368              		.global	PWM_GetInterruptSource
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	PWM_GetInterruptSource, %function
 1372              	PWM_GetInterruptSource:
 1373              	.LFB38:
1311:.\Generated_Source\PSoC4/PWM.c **** 
1312:.\Generated_Source\PSoC4/PWM.c **** 
1313:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM.c **** *
1317:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM.c **** *
1320:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM.c **** *  None
1322:.\Generated_Source\PSoC4/PWM.c **** *
1323:.\Generated_Source\PSoC4/PWM.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM.c **** *
1329:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM.c **** {
 1374              		.loc 1 1331 0
 1375              		.cfi_startproc
1332:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1376              		.loc 1 1332 0
 1377 0000 014B     		ldr	r3, .L114
 1378 0002 1868     		ldr	r0, [r3]
1333:.\Generated_Source\PSoC4/PWM.c **** }
 1379              		.loc 1 1333 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 49


 1380              		@ sp needed
 1381 0004 7047     		bx	lr
 1382              	.L115:
 1383 0006 C046     		.align	2
 1384              	.L114:
 1385 0008 30012040 		.word	1075839280
 1386              		.cfi_endproc
 1387              	.LFE38:
 1388              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1389              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1390              		.align	2
 1391              		.global	PWM_ClearInterrupt
 1392              		.code	16
 1393              		.thumb_func
 1394              		.type	PWM_ClearInterrupt, %function
 1395              	PWM_ClearInterrupt:
 1396              	.LFB39:
1334:.\Generated_Source\PSoC4/PWM.c **** 
1335:.\Generated_Source\PSoC4/PWM.c **** 
1336:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM.c **** *
1340:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM.c **** *
1343:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM.c **** *
1349:.\Generated_Source\PSoC4/PWM.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM.c **** *  None
1351:.\Generated_Source\PSoC4/PWM.c **** *
1352:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM.c **** {
 1397              		.loc 1 1354 0
 1398              		.cfi_startproc
 1399              	.LVL93:
1355:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1400              		.loc 1 1355 0
 1401 0000 014B     		ldr	r3, .L117
 1402 0002 1860     		str	r0, [r3]
1356:.\Generated_Source\PSoC4/PWM.c **** }
 1403              		.loc 1 1356 0
 1404              		@ sp needed
 1405 0004 7047     		bx	lr
 1406              	.L118:
 1407 0006 C046     		.align	2
 1408              	.L117:
 1409 0008 30012040 		.word	1075839280
 1410              		.cfi_endproc
 1411              	.LFE39:
 1412              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1413              		.section	.text.PWM_SetInterrupt,"ax",%progbits
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 50


 1414              		.align	2
 1415              		.global	PWM_SetInterrupt
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	PWM_SetInterrupt, %function
 1419              	PWM_SetInterrupt:
 1420              	.LFB40:
1357:.\Generated_Source\PSoC4/PWM.c **** 
1358:.\Generated_Source\PSoC4/PWM.c **** 
1359:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM.c **** *
1363:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM.c **** *
1366:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM.c **** *
1372:.\Generated_Source\PSoC4/PWM.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM.c **** *  None
1374:.\Generated_Source\PSoC4/PWM.c **** *
1375:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM.c **** {
 1421              		.loc 1 1377 0
 1422              		.cfi_startproc
 1423              	.LVL94:
1378:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1424              		.loc 1 1378 0
 1425 0000 014B     		ldr	r3, .L120
 1426 0002 1860     		str	r0, [r3]
1379:.\Generated_Source\PSoC4/PWM.c **** }
 1427              		.loc 1 1379 0
 1428              		@ sp needed
 1429 0004 7047     		bx	lr
 1430              	.L121:
 1431 0006 C046     		.align	2
 1432              	.L120:
 1433 0008 34012040 		.word	1075839284
 1434              		.cfi_endproc
 1435              	.LFE40:
 1436              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1437              		.global	PWM_initVar
 1438              		.bss
 1439              		.set	.LANCHOR0,. + 0
 1440              		.type	PWM_initVar, %object
 1441              		.size	PWM_initVar, 1
 1442              	PWM_initVar:
 1443 0000 00       		.space	1
 1444              		.text
 1445              	.Letext0:
 1446              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1447              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 51


 1448              		.section	.debug_info,"",%progbits
 1449              	.Ldebug_info0:
 1450 0000 FA080000 		.4byte	0x8fa
 1451 0004 0400     		.2byte	0x4
 1452 0006 00000000 		.4byte	.Ldebug_abbrev0
 1453 000a 04       		.byte	0x4
 1454 000b 01       		.uleb128 0x1
 1455 000c 41000000 		.4byte	.LASF76
 1456 0010 01       		.byte	0x1
 1457 0011 65010000 		.4byte	.LASF77
 1458 0015 2B020000 		.4byte	.LASF78
 1459 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1460 001d 00000000 		.4byte	0
 1461 0021 00000000 		.4byte	.Ldebug_line0
 1462 0025 02       		.uleb128 0x2
 1463 0026 01       		.byte	0x1
 1464 0027 06       		.byte	0x6
 1465 0028 1D010000 		.4byte	.LASF0
 1466 002c 02       		.uleb128 0x2
 1467 002d 01       		.byte	0x1
 1468 002e 08       		.byte	0x8
 1469 002f F2030000 		.4byte	.LASF1
 1470 0033 02       		.uleb128 0x2
 1471 0034 02       		.byte	0x2
 1472 0035 05       		.byte	0x5
 1473 0036 29040000 		.4byte	.LASF2
 1474 003a 02       		.uleb128 0x2
 1475 003b 02       		.byte	0x2
 1476 003c 07       		.byte	0x7
 1477 003d EE020000 		.4byte	.LASF3
 1478 0041 02       		.uleb128 0x2
 1479 0042 04       		.byte	0x4
 1480 0043 05       		.byte	0x5
 1481 0044 84010000 		.4byte	.LASF4
 1482 0048 02       		.uleb128 0x2
 1483 0049 04       		.byte	0x4
 1484 004a 07       		.byte	0x7
 1485 004b BC020000 		.4byte	.LASF5
 1486 004f 02       		.uleb128 0x2
 1487 0050 08       		.byte	0x8
 1488 0051 05       		.byte	0x5
 1489 0052 0F010000 		.4byte	.LASF6
 1490 0056 02       		.uleb128 0x2
 1491 0057 08       		.byte	0x8
 1492 0058 07       		.byte	0x7
 1493 0059 BD000000 		.4byte	.LASF7
 1494 005d 03       		.uleb128 0x3
 1495 005e 04       		.byte	0x4
 1496 005f 05       		.byte	0x5
 1497 0060 696E7400 		.ascii	"int\000"
 1498 0064 02       		.uleb128 0x2
 1499 0065 04       		.byte	0x4
 1500 0066 07       		.byte	0x7
 1501 0067 94020000 		.4byte	.LASF8
 1502 006b 04       		.uleb128 0x4
 1503 006c 8D010000 		.4byte	.LASF9
 1504 0070 02       		.byte	0x2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 52


 1505 0071 B3       		.byte	0xb3
 1506 0072 2C000000 		.4byte	0x2c
 1507 0076 04       		.uleb128 0x4
 1508 0077 DA010000 		.4byte	.LASF10
 1509 007b 02       		.byte	0x2
 1510 007c B5       		.byte	0xb5
 1511 007d 48000000 		.4byte	0x48
 1512 0081 02       		.uleb128 0x2
 1513 0082 04       		.byte	0x4
 1514 0083 04       		.byte	0x4
 1515 0084 C0030000 		.4byte	.LASF11
 1516 0088 02       		.uleb128 0x2
 1517 0089 08       		.byte	0x8
 1518 008a 04       		.byte	0x4
 1519 008b 93010000 		.4byte	.LASF12
 1520 008f 02       		.uleb128 0x2
 1521 0090 01       		.byte	0x1
 1522 0091 08       		.byte	0x8
 1523 0092 7F040000 		.4byte	.LASF13
 1524 0096 05       		.uleb128 0x5
 1525 0097 54030000 		.4byte	.LASF14
 1526 009b 02       		.byte	0x2
 1527 009c 5F01     		.2byte	0x15f
 1528 009e A2000000 		.4byte	0xa2
 1529 00a2 06       		.uleb128 0x6
 1530 00a3 76000000 		.4byte	0x76
 1531 00a7 02       		.uleb128 0x2
 1532 00a8 04       		.byte	0x4
 1533 00a9 07       		.byte	0x7
 1534 00aa 75030000 		.4byte	.LASF15
 1535 00ae 07       		.uleb128 0x7
 1536 00af C0010000 		.4byte	.LASF16
 1537 00b3 01       		.byte	0x1
 1538 00b4 FA       		.byte	0xfa
 1539 00b5 00000000 		.4byte	.LFB4
 1540 00b9 1C000000 		.4byte	.LFE4-.LFB4
 1541 00bd 01       		.uleb128 0x1
 1542 00be 9C       		.byte	0x9c
 1543 00bf E5000000 		.4byte	0xe5
 1544 00c3 08       		.uleb128 0x8
 1545 00c4 E0040000 		.4byte	.LASF18
 1546 00c8 01       		.byte	0x1
 1547 00c9 FC       		.byte	0xfc
 1548 00ca 6B000000 		.4byte	0x6b
 1549 00ce 00000000 		.4byte	.LLST0
 1550 00d2 09       		.uleb128 0x9
 1551 00d3 06000000 		.4byte	.LVL0
 1552 00d7 E5080000 		.4byte	0x8e5
 1553 00db 09       		.uleb128 0x9
 1554 00dc 14000000 		.4byte	.LVL1
 1555 00e0 F0080000 		.4byte	0x8f0
 1556 00e4 00       		.byte	0
 1557 00e5 0A       		.uleb128 0xa
 1558 00e6 02050000 		.4byte	.LASF17
 1559 00ea 01       		.byte	0x1
 1560 00eb 1F01     		.2byte	0x11f
 1561 00ed 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 53


 1562 00f1 28000000 		.4byte	.LFE5-.LFB5
 1563 00f5 01       		.uleb128 0x1
 1564 00f6 9C       		.byte	0x9c
 1565 00f7 2E010000 		.4byte	0x12e
 1566 00fb 0B       		.uleb128 0xb
 1567 00fc 84040000 		.4byte	.LASF20
 1568 0100 01       		.byte	0x1
 1569 0101 1F01     		.2byte	0x11f
 1570 0103 76000000 		.4byte	0x76
 1571 0107 13000000 		.4byte	.LLST1
 1572 010b 0C       		.uleb128 0xc
 1573 010c E0040000 		.4byte	.LASF18
 1574 0110 01       		.byte	0x1
 1575 0111 2101     		.2byte	0x121
 1576 0113 6B000000 		.4byte	0x6b
 1577 0117 3F000000 		.4byte	.LLST2
 1578 011b 09       		.uleb128 0x9
 1579 011c 08000000 		.4byte	.LVL3
 1580 0120 E5080000 		.4byte	0x8e5
 1581 0124 09       		.uleb128 0x9
 1582 0125 1C000000 		.4byte	.LVL5
 1583 0129 F0080000 		.4byte	0x8f0
 1584 012d 00       		.byte	0
 1585 012e 0A       		.uleb128 0xa
 1586 012f 71040000 		.4byte	.LASF19
 1587 0133 01       		.byte	0x1
 1588 0134 4001     		.2byte	0x140
 1589 0136 00000000 		.4byte	.LFB6
 1590 013a 28000000 		.4byte	.LFE6-.LFB6
 1591 013e 01       		.uleb128 0x1
 1592 013f 9C       		.byte	0x9c
 1593 0140 77010000 		.4byte	0x177
 1594 0144 0B       		.uleb128 0xb
 1595 0145 E7000000 		.4byte	.LASF21
 1596 0149 01       		.byte	0x1
 1597 014a 4001     		.2byte	0x140
 1598 014c 76000000 		.4byte	0x76
 1599 0150 52000000 		.4byte	.LLST3
 1600 0154 0C       		.uleb128 0xc
 1601 0155 E0040000 		.4byte	.LASF18
 1602 0159 01       		.byte	0x1
 1603 015a 4201     		.2byte	0x142
 1604 015c 6B000000 		.4byte	0x6b
 1605 0160 7E000000 		.4byte	.LLST4
 1606 0164 09       		.uleb128 0x9
 1607 0165 08000000 		.4byte	.LVL7
 1608 0169 E5080000 		.4byte	0x8e5
 1609 016d 09       		.uleb128 0x9
 1610 016e 1C000000 		.4byte	.LVL9
 1611 0172 F0080000 		.4byte	0x8f0
 1612 0176 00       		.byte	0
 1613 0177 0A       		.uleb128 0xa
 1614 0178 01030000 		.4byte	.LASF22
 1615 017c 01       		.byte	0x1
 1616 017d 6501     		.2byte	0x165
 1617 017f 00000000 		.4byte	.LFB7
 1618 0183 28000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 54


 1619 0187 01       		.uleb128 0x1
 1620 0188 9C       		.byte	0x9c
 1621 0189 C0010000 		.4byte	0x1c0
 1622 018d 0B       		.uleb128 0xb
 1623 018e C6030000 		.4byte	.LASF23
 1624 0192 01       		.byte	0x1
 1625 0193 6501     		.2byte	0x165
 1626 0195 76000000 		.4byte	0x76
 1627 0199 91000000 		.4byte	.LLST5
 1628 019d 0C       		.uleb128 0xc
 1629 019e E0040000 		.4byte	.LASF18
 1630 01a2 01       		.byte	0x1
 1631 01a3 6701     		.2byte	0x167
 1632 01a5 6B000000 		.4byte	0x6b
 1633 01a9 BD000000 		.4byte	.LLST6
 1634 01ad 09       		.uleb128 0x9
 1635 01ae 08000000 		.4byte	.LVL11
 1636 01b2 E5080000 		.4byte	0x8e5
 1637 01b6 09       		.uleb128 0x9
 1638 01b7 1C000000 		.4byte	.LVL13
 1639 01bb F0080000 		.4byte	0x8f0
 1640 01bf 00       		.byte	0
 1641 01c0 0A       		.uleb128 0xa
 1642 01c1 95030000 		.4byte	.LASF24
 1643 01c5 01       		.byte	0x1
 1644 01c6 8501     		.2byte	0x185
 1645 01c8 00000000 		.4byte	.LFB8
 1646 01cc 2C000000 		.4byte	.LFE8-.LFB8
 1647 01d0 01       		.uleb128 0x1
 1648 01d1 9C       		.byte	0x9c
 1649 01d2 09020000 		.4byte	0x209
 1650 01d6 0B       		.uleb128 0xb
 1651 01d7 12030000 		.4byte	.LASF25
 1652 01db 01       		.byte	0x1
 1653 01dc 8501     		.2byte	0x185
 1654 01de 76000000 		.4byte	0x76
 1655 01e2 D0000000 		.4byte	.LLST7
 1656 01e6 0C       		.uleb128 0xc
 1657 01e7 E0040000 		.4byte	.LASF18
 1658 01eb 01       		.byte	0x1
 1659 01ec 8701     		.2byte	0x187
 1660 01ee 6B000000 		.4byte	0x6b
 1661 01f2 FC000000 		.4byte	.LLST8
 1662 01f6 09       		.uleb128 0x9
 1663 01f7 08000000 		.4byte	.LVL15
 1664 01fb E5080000 		.4byte	0x8e5
 1665 01ff 09       		.uleb128 0x9
 1666 0200 22000000 		.4byte	.LVL17
 1667 0204 F0080000 		.4byte	0x8f0
 1668 0208 00       		.byte	0
 1669 0209 0A       		.uleb128 0xa
 1670 020a 1A040000 		.4byte	.LASF26
 1671 020e 01       		.byte	0x1
 1672 020f BB01     		.2byte	0x1bb
 1673 0211 00000000 		.4byte	.LFB9
 1674 0215 10000000 		.4byte	.LFE9-.LFB9
 1675 0219 01       		.uleb128 0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 55


 1676 021a 9C       		.byte	0x9c
 1677 021b 30020000 		.4byte	0x230
 1678 021f 0B       		.uleb128 0xb
 1679 0220 CE020000 		.4byte	.LASF27
 1680 0224 01       		.byte	0x1
 1681 0225 BB01     		.2byte	0x1bb
 1682 0227 76000000 		.4byte	0x76
 1683 022b 0F010000 		.4byte	.LLST9
 1684 022f 00       		.byte	0
 1685 0230 0A       		.uleb128 0xa
 1686 0231 27000000 		.4byte	.LASF28
 1687 0235 01       		.byte	0x1
 1688 0236 DF01     		.2byte	0x1df
 1689 0238 00000000 		.4byte	.LFB10
 1690 023c 28000000 		.4byte	.LFE10-.LFB10
 1691 0240 01       		.uleb128 0x1
 1692 0241 9C       		.byte	0x9c
 1693 0242 79020000 		.4byte	0x279
 1694 0246 0B       		.uleb128 0xb
 1695 0247 7E030000 		.4byte	.LASF29
 1696 024b 01       		.byte	0x1
 1697 024c DF01     		.2byte	0x1df
 1698 024e 76000000 		.4byte	0x76
 1699 0252 30010000 		.4byte	.LLST10
 1700 0256 0C       		.uleb128 0xc
 1701 0257 E0040000 		.4byte	.LASF18
 1702 025b 01       		.byte	0x1
 1703 025c E101     		.2byte	0x1e1
 1704 025e 6B000000 		.4byte	0x6b
 1705 0262 5C010000 		.4byte	.LLST11
 1706 0266 09       		.uleb128 0x9
 1707 0267 08000000 		.4byte	.LVL21
 1708 026b E5080000 		.4byte	0x8e5
 1709 026f 09       		.uleb128 0x9
 1710 0270 22000000 		.4byte	.LVL23
 1711 0274 F0080000 		.4byte	0x8f0
 1712 0278 00       		.byte	0
 1713 0279 0A       		.uleb128 0xa
 1714 027a 0E050000 		.4byte	.LASF30
 1715 027e 01       		.byte	0x1
 1716 027f 0102     		.2byte	0x201
 1717 0281 00000000 		.4byte	.LFB11
 1718 0285 28000000 		.4byte	.LFE11-.LFB11
 1719 0289 01       		.uleb128 0x1
 1720 028a 9C       		.byte	0x9c
 1721 028b C2020000 		.4byte	0x2c2
 1722 028f 0B       		.uleb128 0xb
 1723 0290 09040000 		.4byte	.LASF31
 1724 0294 01       		.byte	0x1
 1725 0295 0102     		.2byte	0x201
 1726 0297 76000000 		.4byte	0x76
 1727 029b 6F010000 		.4byte	.LLST12
 1728 029f 0C       		.uleb128 0xc
 1729 02a0 E0040000 		.4byte	.LASF18
 1730 02a4 01       		.byte	0x1
 1731 02a5 0302     		.2byte	0x203
 1732 02a7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 56


 1733 02ab 9B010000 		.4byte	.LLST13
 1734 02af 09       		.uleb128 0x9
 1735 02b0 08000000 		.4byte	.LVL25
 1736 02b4 E5080000 		.4byte	0x8e5
 1737 02b8 09       		.uleb128 0x9
 1738 02b9 22000000 		.4byte	.LVL27
 1739 02bd F0080000 		.4byte	0x8f0
 1740 02c1 00       		.byte	0
 1741 02c2 0A       		.uleb128 0xa
 1742 02c3 A1020000 		.4byte	.LASF32
 1743 02c7 01       		.byte	0x1
 1744 02c8 2202     		.2byte	0x222
 1745 02ca 00000000 		.4byte	.LFB12
 1746 02ce 2C000000 		.4byte	.LFE12-.LFB12
 1747 02d2 01       		.uleb128 0x1
 1748 02d3 9C       		.byte	0x9c
 1749 02d4 0B030000 		.4byte	0x30b
 1750 02d8 0B       		.uleb128 0xb
 1751 02d9 12020000 		.4byte	.LASF33
 1752 02dd 01       		.byte	0x1
 1753 02de 2202     		.2byte	0x222
 1754 02e0 76000000 		.4byte	0x76
 1755 02e4 AE010000 		.4byte	.LLST14
 1756 02e8 0C       		.uleb128 0xc
 1757 02e9 E0040000 		.4byte	.LASF18
 1758 02ed 01       		.byte	0x1
 1759 02ee 2402     		.2byte	0x224
 1760 02f0 6B000000 		.4byte	0x6b
 1761 02f4 DA010000 		.4byte	.LLST15
 1762 02f8 09       		.uleb128 0x9
 1763 02f9 08000000 		.4byte	.LVL29
 1764 02fd E5080000 		.4byte	0x8e5
 1765 0301 09       		.uleb128 0x9
 1766 0302 20000000 		.4byte	.LVL31
 1767 0306 F0080000 		.4byte	0x8f0
 1768 030a 00       		.byte	0
 1769 030b 0A       		.uleb128 0xa
 1770 030c C9010000 		.4byte	.LASF34
 1771 0310 01       		.byte	0x1
 1772 0311 4302     		.2byte	0x243
 1773 0313 00000000 		.4byte	.LFB13
 1774 0317 28000000 		.4byte	.LFE13-.LFB13
 1775 031b 01       		.uleb128 0x1
 1776 031c 9C       		.byte	0x9c
 1777 031d 54030000 		.4byte	0x354
 1778 0321 0B       		.uleb128 0xb
 1779 0322 FE010000 		.4byte	.LASF35
 1780 0326 01       		.byte	0x1
 1781 0327 4302     		.2byte	0x243
 1782 0329 76000000 		.4byte	0x76
 1783 032d ED010000 		.4byte	.LLST16
 1784 0331 0C       		.uleb128 0xc
 1785 0332 E0040000 		.4byte	.LASF18
 1786 0336 01       		.byte	0x1
 1787 0337 4502     		.2byte	0x245
 1788 0339 6B000000 		.4byte	0x6b
 1789 033d 19020000 		.4byte	.LLST17
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 57


 1790 0341 09       		.uleb128 0x9
 1791 0342 08000000 		.4byte	.LVL33
 1792 0346 E5080000 		.4byte	0x8e5
 1793 034a 09       		.uleb128 0x9
 1794 034b 1C000000 		.4byte	.LVL35
 1795 034f F0080000 		.4byte	0x8f0
 1796 0353 00       		.byte	0
 1797 0354 0A       		.uleb128 0xa
 1798 0355 EE000000 		.4byte	.LASF36
 1799 0359 01       		.byte	0x1
 1800 035a 6102     		.2byte	0x261
 1801 035c 00000000 		.4byte	.LFB14
 1802 0360 10000000 		.4byte	.LFE14-.LFB14
 1803 0364 01       		.uleb128 0x1
 1804 0365 9C       		.byte	0x9c
 1805 0366 7B030000 		.4byte	0x37b
 1806 036a 0B       		.uleb128 0xb
 1807 036b 00000000 		.4byte	.LASF37
 1808 036f 01       		.byte	0x1
 1809 0370 6102     		.2byte	0x261
 1810 0372 76000000 		.4byte	0x76
 1811 0376 2C020000 		.4byte	.LLST18
 1812 037a 00       		.byte	0
 1813 037b 0D       		.uleb128 0xd
 1814 037c FF000000 		.4byte	.LASF42
 1815 0380 01       		.byte	0x1
 1816 0381 7502     		.2byte	0x275
 1817 0383 76000000 		.4byte	0x76
 1818 0387 00000000 		.4byte	.LFB15
 1819 038b 10000000 		.4byte	.LFE15-.LFB15
 1820 038f 01       		.uleb128 0x1
 1821 0390 9C       		.byte	0x9c
 1822 0391 0A       		.uleb128 0xa
 1823 0392 45050000 		.4byte	.LASF38
 1824 0396 01       		.byte	0x1
 1825 0397 9202     		.2byte	0x292
 1826 0399 00000000 		.4byte	.LFB16
 1827 039d 28000000 		.4byte	.LFE16-.LFB16
 1828 03a1 01       		.uleb128 0x1
 1829 03a2 9C       		.byte	0x9c
 1830 03a3 DA030000 		.4byte	0x3da
 1831 03a7 0B       		.uleb128 0xb
 1832 03a8 AC040000 		.4byte	.LASF39
 1833 03ac 01       		.byte	0x1
 1834 03ad 9202     		.2byte	0x292
 1835 03af 76000000 		.4byte	0x76
 1836 03b3 4D020000 		.4byte	.LLST19
 1837 03b7 0C       		.uleb128 0xc
 1838 03b8 E0040000 		.4byte	.LASF18
 1839 03bc 01       		.byte	0x1
 1840 03bd 9402     		.2byte	0x294
 1841 03bf 6B000000 		.4byte	0x6b
 1842 03c3 79020000 		.4byte	.LLST20
 1843 03c7 09       		.uleb128 0x9
 1844 03c8 08000000 		.4byte	.LVL39
 1845 03cc E5080000 		.4byte	0x8e5
 1846 03d0 09       		.uleb128 0x9
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 58


 1847 03d1 1C000000 		.4byte	.LVL41
 1848 03d5 F0080000 		.4byte	0x8f0
 1849 03d9 00       		.byte	0
 1850 03da 0A       		.uleb128 0xa
 1851 03db 44030000 		.4byte	.LASF40
 1852 03df 01       		.byte	0x1
 1853 03e0 AF02     		.2byte	0x2af
 1854 03e2 00000000 		.4byte	.LFB17
 1855 03e6 10000000 		.4byte	.LFE17-.LFB17
 1856 03ea 01       		.uleb128 0x1
 1857 03eb 9C       		.byte	0x9c
 1858 03ec 01040000 		.4byte	0x401
 1859 03f0 0B       		.uleb128 0xb
 1860 03f1 3A000000 		.4byte	.LASF41
 1861 03f5 01       		.byte	0x1
 1862 03f6 AF02     		.2byte	0x2af
 1863 03f8 76000000 		.4byte	0x76
 1864 03fc 8C020000 		.4byte	.LLST21
 1865 0400 00       		.byte	0
 1866 0401 0D       		.uleb128 0xd
 1867 0402 66030000 		.4byte	.LASF43
 1868 0406 01       		.byte	0x1
 1869 0407 C302     		.2byte	0x2c3
 1870 0409 76000000 		.4byte	0x76
 1871 040d 00000000 		.4byte	.LFB18
 1872 0411 10000000 		.4byte	.LFE18-.LFB18
 1873 0415 01       		.uleb128 0x1
 1874 0416 9C       		.byte	0x9c
 1875 0417 0A       		.uleb128 0xa
 1876 0418 AD010000 		.4byte	.LASF44
 1877 041c 01       		.byte	0x1
 1878 041d DD02     		.2byte	0x2dd
 1879 041f 00000000 		.4byte	.LFB19
 1880 0423 24000000 		.4byte	.LFE19-.LFB19
 1881 0427 01       		.uleb128 0x1
 1882 0428 9C       		.byte	0x9c
 1883 0429 60040000 		.4byte	0x460
 1884 042d 0B       		.uleb128 0xb
 1885 042e 23050000 		.4byte	.LASF45
 1886 0432 01       		.byte	0x1
 1887 0433 DD02     		.2byte	0x2dd
 1888 0435 76000000 		.4byte	0x76
 1889 0439 AD020000 		.4byte	.LLST22
 1890 043d 0C       		.uleb128 0xc
 1891 043e E0040000 		.4byte	.LASF18
 1892 0442 01       		.byte	0x1
 1893 0443 DF02     		.2byte	0x2df
 1894 0445 6B000000 		.4byte	0x6b
 1895 0449 D9020000 		.4byte	.LLST23
 1896 044d 09       		.uleb128 0x9
 1897 044e 08000000 		.4byte	.LVL45
 1898 0452 E5080000 		.4byte	0x8e5
 1899 0456 09       		.uleb128 0x9
 1900 0457 1E000000 		.4byte	.LVL46
 1901 045b F0080000 		.4byte	0x8f0
 1902 045f 00       		.byte	0
 1903 0460 0A       		.uleb128 0xa
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 59


 1904 0461 5E040000 		.4byte	.LASF46
 1905 0465 01       		.byte	0x1
 1906 0466 F802     		.2byte	0x2f8
 1907 0468 00000000 		.4byte	.LFB20
 1908 046c 10000000 		.4byte	.LFE20-.LFB20
 1909 0470 01       		.uleb128 0x1
 1910 0471 9C       		.byte	0x9c
 1911 0472 87040000 		.4byte	0x487
 1912 0476 0B       		.uleb128 0xb
 1913 0477 C3040000 		.4byte	.LASF47
 1914 047b 01       		.byte	0x1
 1915 047c F802     		.2byte	0x2f8
 1916 047e 76000000 		.4byte	0x76
 1917 0482 EC020000 		.4byte	.LLST24
 1918 0486 00       		.byte	0
 1919 0487 0D       		.uleb128 0xd
 1920 0488 A4030000 		.4byte	.LASF48
 1921 048c 01       		.byte	0x1
 1922 048d 0C03     		.2byte	0x30c
 1923 048f 76000000 		.4byte	0x76
 1924 0493 00000000 		.4byte	.LFB21
 1925 0497 10000000 		.4byte	.LFE21-.LFB21
 1926 049b 01       		.uleb128 0x1
 1927 049c 9C       		.byte	0x9c
 1928 049d 0A       		.uleb128 0xa
 1929 049e E0030000 		.4byte	.LASF49
 1930 04a2 01       		.byte	0x1
 1931 04a3 2603     		.2byte	0x326
 1932 04a5 00000000 		.4byte	.LFB22
 1933 04a9 28000000 		.4byte	.LFE22-.LFB22
 1934 04ad 01       		.uleb128 0x1
 1935 04ae 9C       		.byte	0x9c
 1936 04af E6040000 		.4byte	0x4e6
 1937 04b3 0B       		.uleb128 0xb
 1938 04b4 23050000 		.4byte	.LASF45
 1939 04b8 01       		.byte	0x1
 1940 04b9 2603     		.2byte	0x326
 1941 04bb 76000000 		.4byte	0x76
 1942 04bf 0D030000 		.4byte	.LLST25
 1943 04c3 0C       		.uleb128 0xc
 1944 04c4 E0040000 		.4byte	.LASF18
 1945 04c8 01       		.byte	0x1
 1946 04c9 2803     		.2byte	0x328
 1947 04cb 6B000000 		.4byte	0x6b
 1948 04cf 39030000 		.4byte	.LLST26
 1949 04d3 09       		.uleb128 0x9
 1950 04d4 08000000 		.4byte	.LVL51
 1951 04d8 E5080000 		.4byte	0x8e5
 1952 04dc 09       		.uleb128 0x9
 1953 04dd 22000000 		.4byte	.LVL53
 1954 04e1 F0080000 		.4byte	0x8f0
 1955 04e5 00       		.byte	0
 1956 04e6 0A       		.uleb128 0xa
 1957 04e7 33030000 		.4byte	.LASF50
 1958 04eb 01       		.byte	0x1
 1959 04ec 4303     		.2byte	0x343
 1960 04ee 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 60


 1961 04f2 10000000 		.4byte	.LFE23-.LFB23
 1962 04f6 01       		.uleb128 0x1
 1963 04f7 9C       		.byte	0x9c
 1964 04f8 0D050000 		.4byte	0x50d
 1965 04fc 0B       		.uleb128 0xb
 1966 04fd 8D030000 		.4byte	.LASF51
 1967 0501 01       		.byte	0x1
 1968 0502 4303     		.2byte	0x343
 1969 0504 76000000 		.4byte	0x76
 1970 0508 4C030000 		.4byte	.LLST27
 1971 050c 00       		.byte	0
 1972 050d 0D       		.uleb128 0xd
 1973 050e 58050000 		.4byte	.LASF52
 1974 0512 01       		.byte	0x1
 1975 0513 6E03     		.2byte	0x36e
 1976 0515 76000000 		.4byte	0x76
 1977 0519 00000000 		.4byte	.LFB24
 1978 051d 10000000 		.4byte	.LFE24-.LFB24
 1979 0521 01       		.uleb128 0x1
 1980 0522 9C       		.byte	0x9c
 1981 0523 0A       		.uleb128 0xa
 1982 0524 29010000 		.4byte	.LASF53
 1983 0528 01       		.byte	0x1
 1984 0529 9C03     		.2byte	0x39c
 1985 052b 00000000 		.4byte	.LFB25
 1986 052f 10000000 		.4byte	.LFE25-.LFB25
 1987 0533 01       		.uleb128 0x1
 1988 0534 9C       		.byte	0x9c
 1989 0535 4A050000 		.4byte	0x54a
 1990 0539 0B       		.uleb128 0xb
 1991 053a B8040000 		.4byte	.LASF54
 1992 053e 01       		.byte	0x1
 1993 053f 9C03     		.2byte	0x39c
 1994 0541 76000000 		.4byte	0x76
 1995 0545 6D030000 		.4byte	.LLST28
 1996 0549 00       		.byte	0
 1997 054a 0D       		.uleb128 0xd
 1998 054b 9A010000 		.4byte	.LASF55
 1999 054f 01       		.byte	0x1
 2000 0550 C503     		.2byte	0x3c5
 2001 0552 76000000 		.4byte	0x76
 2002 0556 00000000 		.4byte	.LFB26
 2003 055a 10000000 		.4byte	.LFE26-.LFB26
 2004 055e 01       		.uleb128 0x1
 2005 055f 9C       		.byte	0x9c
 2006 0560 0D       		.uleb128 0xd
 2007 0561 D0030000 		.4byte	.LASF56
 2008 0565 01       		.byte	0x1
 2009 0566 F303     		.2byte	0x3f3
 2010 0568 76000000 		.4byte	0x76
 2011 056c 00000000 		.4byte	.LFB27
 2012 0570 10000000 		.4byte	.LFE27-.LFB27
 2013 0574 01       		.uleb128 0x1
 2014 0575 9C       		.byte	0x9c
 2015 0576 0D       		.uleb128 0xd
 2016 0577 CD040000 		.4byte	.LASF57
 2017 057b 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 61


 2018 057c 0804     		.2byte	0x408
 2019 057e 76000000 		.4byte	0x76
 2020 0582 00000000 		.4byte	.LFB28
 2021 0586 10000000 		.4byte	.LFE28-.LFB28
 2022 058a 01       		.uleb128 0x1
 2023 058b 9C       		.byte	0x9c
 2024 058c 0A       		.uleb128 0xa
 2025 058d D4000000 		.4byte	.LASF58
 2026 0591 01       		.byte	0x1
 2027 0592 2304     		.2byte	0x423
 2028 0594 00000000 		.4byte	.LFB29
 2029 0598 24000000 		.4byte	.LFE29-.LFB29
 2030 059c 01       		.uleb128 0x1
 2031 059d 9C       		.byte	0x9c
 2032 059e D5050000 		.4byte	0x5d5
 2033 05a2 0B       		.uleb128 0xb
 2034 05a3 F2010000 		.4byte	.LASF59
 2035 05a7 01       		.byte	0x1
 2036 05a8 2304     		.2byte	0x423
 2037 05aa 76000000 		.4byte	0x76
 2038 05ae 8E030000 		.4byte	.LLST29
 2039 05b2 0C       		.uleb128 0xc
 2040 05b3 E0040000 		.4byte	.LASF18
 2041 05b7 01       		.byte	0x1
 2042 05b8 2504     		.2byte	0x425
 2043 05ba 6B000000 		.4byte	0x6b
 2044 05be BA030000 		.4byte	.LLST30
 2045 05c2 09       		.uleb128 0x9
 2046 05c3 08000000 		.4byte	.LVL59
 2047 05c7 E5080000 		.4byte	0x8e5
 2048 05cb 09       		.uleb128 0x9
 2049 05cc 1C000000 		.4byte	.LVL61
 2050 05d0 F0080000 		.4byte	0x8f0
 2051 05d4 00       		.byte	0
 2052 05d5 0A       		.uleb128 0xa
 2053 05d6 9A040000 		.4byte	.LASF60
 2054 05da 01       		.byte	0x1
 2055 05db 4404     		.2byte	0x444
 2056 05dd 00000000 		.4byte	.LFB30
 2057 05e1 24000000 		.4byte	.LFE30-.LFB30
 2058 05e5 01       		.uleb128 0x1
 2059 05e6 9C       		.byte	0x9c
 2060 05e7 1E060000 		.4byte	0x61e
 2061 05eb 0B       		.uleb128 0xb
 2062 05ec F2010000 		.4byte	.LASF59
 2063 05f0 01       		.byte	0x1
 2064 05f1 4404     		.2byte	0x444
 2065 05f3 76000000 		.4byte	0x76
 2066 05f7 CD030000 		.4byte	.LLST31
 2067 05fb 0C       		.uleb128 0xc
 2068 05fc E0040000 		.4byte	.LASF18
 2069 0600 01       		.byte	0x1
 2070 0601 4604     		.2byte	0x446
 2071 0603 6B000000 		.4byte	0x6b
 2072 0607 F9030000 		.4byte	.LLST32
 2073 060b 09       		.uleb128 0x9
 2074 060c 08000000 		.4byte	.LVL63
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 62


 2075 0610 E5080000 		.4byte	0x8e5
 2076 0614 09       		.uleb128 0x9
 2077 0615 1E000000 		.4byte	.LVL65
 2078 0619 F0080000 		.4byte	0x8f0
 2079 061d 00       		.byte	0
 2080 061e 0A       		.uleb128 0xa
 2081 061f E1010000 		.4byte	.LASF61
 2082 0623 01       		.byte	0x1
 2083 0624 6504     		.2byte	0x465
 2084 0626 00000000 		.4byte	.LFB31
 2085 062a 28000000 		.4byte	.LFE31-.LFB31
 2086 062e 01       		.uleb128 0x1
 2087 062f 9C       		.byte	0x9c
 2088 0630 67060000 		.4byte	0x667
 2089 0634 0B       		.uleb128 0xb
 2090 0635 F2010000 		.4byte	.LASF59
 2091 0639 01       		.byte	0x1
 2092 063a 6504     		.2byte	0x465
 2093 063c 76000000 		.4byte	0x76
 2094 0640 0C040000 		.4byte	.LLST33
 2095 0644 0C       		.uleb128 0xc
 2096 0645 E0040000 		.4byte	.LASF18
 2097 0649 01       		.byte	0x1
 2098 064a 6704     		.2byte	0x467
 2099 064c 6B000000 		.4byte	0x6b
 2100 0650 38040000 		.4byte	.LLST34
 2101 0654 09       		.uleb128 0x9
 2102 0655 08000000 		.4byte	.LVL67
 2103 0659 E5080000 		.4byte	0x8e5
 2104 065d 09       		.uleb128 0x9
 2105 065e 1E000000 		.4byte	.LVL69
 2106 0662 F0080000 		.4byte	0x8f0
 2107 0666 00       		.byte	0
 2108 0667 0A       		.uleb128 0xa
 2109 0668 1B020000 		.4byte	.LASF62
 2110 066c 01       		.byte	0x1
 2111 066d 8504     		.2byte	0x485
 2112 066f 00000000 		.4byte	.LFB32
 2113 0673 24000000 		.4byte	.LFE32-.LFB32
 2114 0677 01       		.uleb128 0x1
 2115 0678 9C       		.byte	0x9c
 2116 0679 B0060000 		.4byte	0x6b0
 2117 067d 0B       		.uleb128 0xb
 2118 067e F2010000 		.4byte	.LASF59
 2119 0682 01       		.byte	0x1
 2120 0683 8504     		.2byte	0x485
 2121 0685 76000000 		.4byte	0x76
 2122 0689 4B040000 		.4byte	.LLST35
 2123 068d 0C       		.uleb128 0xc
 2124 068e E0040000 		.4byte	.LASF18
 2125 0692 01       		.byte	0x1
 2126 0693 8704     		.2byte	0x487
 2127 0695 6B000000 		.4byte	0x6b
 2128 0699 77040000 		.4byte	.LLST36
 2129 069d 09       		.uleb128 0x9
 2130 069e 08000000 		.4byte	.LVL71
 2131 06a2 E5080000 		.4byte	0x8e5
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 63


 2132 06a6 09       		.uleb128 0x9
 2133 06a7 1E000000 		.4byte	.LVL73
 2134 06ab F0080000 		.4byte	0x8f0
 2135 06af 00       		.byte	0
 2136 06b0 0A       		.uleb128 0xa
 2137 06b1 F1040000 		.4byte	.LASF63
 2138 06b5 01       		.byte	0x1
 2139 06b6 A604     		.2byte	0x4a6
 2140 06b8 00000000 		.4byte	.LFB33
 2141 06bc 24000000 		.4byte	.LFE33-.LFB33
 2142 06c0 01       		.uleb128 0x1
 2143 06c1 9C       		.byte	0x9c
 2144 06c2 F9060000 		.4byte	0x6f9
 2145 06c6 0B       		.uleb128 0xb
 2146 06c7 F2010000 		.4byte	.LASF59
 2147 06cb 01       		.byte	0x1
 2148 06cc A604     		.2byte	0x4a6
 2149 06ce 76000000 		.4byte	0x76
 2150 06d2 8A040000 		.4byte	.LLST37
 2151 06d6 0C       		.uleb128 0xc
 2152 06d7 E0040000 		.4byte	.LASF18
 2153 06db 01       		.byte	0x1
 2154 06dc A804     		.2byte	0x4a8
 2155 06de 6B000000 		.4byte	0x6b
 2156 06e2 B6040000 		.4byte	.LLST38
 2157 06e6 09       		.uleb128 0x9
 2158 06e7 08000000 		.4byte	.LVL75
 2159 06eb E5080000 		.4byte	0x8e5
 2160 06ef 09       		.uleb128 0x9
 2161 06f0 1E000000 		.4byte	.LVL77
 2162 06f4 F0080000 		.4byte	0x8f0
 2163 06f8 00       		.byte	0
 2164 06f9 0A       		.uleb128 0xa
 2165 06fa 20030000 		.4byte	.LASF64
 2166 06fe 01       		.byte	0x1
 2167 06ff CE04     		.2byte	0x4ce
 2168 0701 00000000 		.4byte	.LFB34
 2169 0705 1C000000 		.4byte	.LFE34-.LFB34
 2170 0709 01       		.uleb128 0x1
 2171 070a 9C       		.byte	0x9c
 2172 070b 52070000 		.4byte	0x752
 2173 070f 0B       		.uleb128 0xb
 2174 0710 FE010000 		.4byte	.LASF35
 2175 0714 01       		.byte	0x1
 2176 0715 CE04     		.2byte	0x4ce
 2177 0717 76000000 		.4byte	0x76
 2178 071b C9040000 		.4byte	.LLST39
 2179 071f 0B       		.uleb128 0xb
 2180 0720 B4020000 		.4byte	.LASF65
 2181 0724 01       		.byte	0x1
 2182 0725 CE04     		.2byte	0x4ce
 2183 0727 76000000 		.4byte	0x76
 2184 072b F5040000 		.4byte	.LLST40
 2185 072f 0C       		.uleb128 0xc
 2186 0730 E0040000 		.4byte	.LASF18
 2187 0734 01       		.byte	0x1
 2188 0735 D004     		.2byte	0x4d0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 64


 2189 0737 6B000000 		.4byte	0x6b
 2190 073b 21050000 		.4byte	.LLST41
 2191 073f 09       		.uleb128 0x9
 2192 0740 0A000000 		.4byte	.LVL79
 2193 0744 E5080000 		.4byte	0x8e5
 2194 0748 09       		.uleb128 0x9
 2195 0749 14000000 		.4byte	.LVL81
 2196 074d F0080000 		.4byte	0x8f0
 2197 0751 00       		.byte	0
 2198 0752 07       		.uleb128 0x7
 2199 0753 06000000 		.4byte	.LASF66
 2200 0757 01       		.byte	0x1
 2201 0758 B1       		.byte	0xb1
 2202 0759 00000000 		.4byte	.LFB2
 2203 075d 24000000 		.4byte	.LFE2-.LFB2
 2204 0761 01       		.uleb128 0x1
 2205 0762 9C       		.byte	0x9c
 2206 0763 9D070000 		.4byte	0x79d
 2207 0767 08       		.uleb128 0x8
 2208 0768 E0040000 		.4byte	.LASF18
 2209 076c 01       		.byte	0x1
 2210 076d B3       		.byte	0xb3
 2211 076e 6B000000 		.4byte	0x6b
 2212 0772 34050000 		.4byte	.LLST42
 2213 0776 09       		.uleb128 0x9
 2214 0777 06000000 		.4byte	.LVL83
 2215 077b E5080000 		.4byte	0x8e5
 2216 077f 09       		.uleb128 0x9
 2217 0780 14000000 		.4byte	.LVL84
 2218 0784 F0080000 		.4byte	0x8f0
 2219 0788 0E       		.uleb128 0xe
 2220 0789 1C000000 		.4byte	.LVL85
 2221 078d F9060000 		.4byte	0x6f9
 2222 0791 0F       		.uleb128 0xf
 2223 0792 01       		.uleb128 0x1
 2224 0793 51       		.byte	0x51
 2225 0794 01       		.uleb128 0x1
 2226 0795 48       		.byte	0x48
 2227 0796 0F       		.uleb128 0xf
 2228 0797 01       		.uleb128 0x1
 2229 0798 50       		.byte	0x50
 2230 0799 01       		.uleb128 0x1
 2231 079a 31       		.byte	0x31
 2232 079b 00       		.byte	0
 2233 079c 00       		.byte	0
 2234 079d 0D       		.uleb128 0xd
 2235 079e 03020000 		.4byte	.LASF67
 2236 07a2 01       		.byte	0x1
 2237 07a3 EB04     		.2byte	0x4eb
 2238 07a5 76000000 		.4byte	0x76
 2239 07a9 00000000 		.4byte	.LFB35
 2240 07ad 14000000 		.4byte	.LFE35-.LFB35
 2241 07b1 01       		.uleb128 0x1
 2242 07b2 9C       		.byte	0x9c
 2243 07b3 0A       		.uleb128 0xa
 2244 07b4 3D010000 		.4byte	.LASF68
 2245 07b8 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 65


 2246 07b9 0405     		.2byte	0x504
 2247 07bb 00000000 		.4byte	.LFB36
 2248 07bf 0C000000 		.4byte	.LFE36-.LFB36
 2249 07c3 01       		.uleb128 0x1
 2250 07c4 9C       		.byte	0x9c
 2251 07c5 D8070000 		.4byte	0x7d8
 2252 07c9 10       		.uleb128 0x10
 2253 07ca 50040000 		.4byte	.LASF69
 2254 07ce 01       		.byte	0x1
 2255 07cf 0405     		.2byte	0x504
 2256 07d1 76000000 		.4byte	0x76
 2257 07d5 01       		.uleb128 0x1
 2258 07d6 50       		.byte	0x50
 2259 07d7 00       		.byte	0
 2260 07d8 07       		.uleb128 0x7
 2261 07d9 00040000 		.4byte	.LASF70
 2262 07dd 01       		.byte	0x1
 2263 07de 26       		.byte	0x26
 2264 07df 00000000 		.4byte	.LFB1
 2265 07e3 44000000 		.4byte	.LFE1-.LFB1
 2266 07e7 01       		.uleb128 0x1
 2267 07e8 9C       		.byte	0x9c
 2268 07e9 36080000 		.4byte	0x836
 2269 07ed 11       		.uleb128 0x11
 2270 07ee 14000000 		.4byte	.LVL87
 2271 07f2 54030000 		.4byte	0x354
 2272 07f6 00080000 		.4byte	0x800
 2273 07fa 0F       		.uleb128 0xf
 2274 07fb 01       		.uleb128 0x1
 2275 07fc 50       		.byte	0x50
 2276 07fd 01       		.uleb128 0x1
 2277 07fe 30       		.byte	0x30
 2278 07ff 00       		.byte	0
 2279 0800 11       		.uleb128 0x11
 2280 0801 24000000 		.4byte	.LVL88
 2281 0805 B3070000 		.4byte	0x7b3
 2282 0809 13080000 		.4byte	0x813
 2283 080d 0F       		.uleb128 0xf
 2284 080e 01       		.uleb128 0x1
 2285 080f 50       		.byte	0x50
 2286 0810 01       		.uleb128 0x1
 2287 0811 31       		.byte	0x31
 2288 0812 00       		.byte	0
 2289 0813 11       		.uleb128 0x11
 2290 0814 30000000 		.4byte	.LVL89
 2291 0818 DA030000 		.4byte	0x3da
 2292 081c 26080000 		.4byte	0x826
 2293 0820 0F       		.uleb128 0xf
 2294 0821 01       		.uleb128 0x1
 2295 0822 50       		.byte	0x50
 2296 0823 01       		.uleb128 0x1
 2297 0824 3C       		.byte	0x3c
 2298 0825 00       		.byte	0
 2299 0826 0E       		.uleb128 0xe
 2300 0827 36000000 		.4byte	.LVL90
 2301 082b E6040000 		.4byte	0x4e6
 2302 082f 0F       		.uleb128 0xf
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 66


 2303 0830 01       		.uleb128 0x1
 2304 0831 50       		.byte	0x50
 2305 0832 01       		.uleb128 0x1
 2306 0833 30       		.byte	0x30
 2307 0834 00       		.byte	0
 2308 0835 00       		.byte	0
 2309 0836 07       		.uleb128 0x7
 2310 0837 B6030000 		.4byte	.LASF71
 2311 083b 01       		.byte	0x1
 2312 083c E0       		.byte	0xe0
 2313 083d 00000000 		.4byte	.LFB3
 2314 0841 20000000 		.4byte	.LFE3-.LFB3
 2315 0845 01       		.uleb128 0x1
 2316 0846 9C       		.byte	0x9c
 2317 0847 5E080000 		.4byte	0x85e
 2318 084b 09       		.uleb128 0x9
 2319 084c 0E000000 		.4byte	.LVL91
 2320 0850 D8070000 		.4byte	0x7d8
 2321 0854 09       		.uleb128 0x9
 2322 0855 18000000 		.4byte	.LVL92
 2323 0859 52070000 		.4byte	0x752
 2324 085d 00       		.byte	0
 2325 085e 0D       		.uleb128 0xd
 2326 085f 33040000 		.4byte	.LASF72
 2327 0863 01       		.byte	0x1
 2328 0864 1B05     		.2byte	0x51b
 2329 0866 76000000 		.4byte	0x76
 2330 086a 00000000 		.4byte	.LFB37
 2331 086e 0C000000 		.4byte	.LFE37-.LFB37
 2332 0872 01       		.uleb128 0x1
 2333 0873 9C       		.byte	0x9c
 2334 0874 0D       		.uleb128 0xd
 2335 0875 2E050000 		.4byte	.LASF73
 2336 0879 01       		.byte	0x1
 2337 087a 3205     		.2byte	0x532
 2338 087c 76000000 		.4byte	0x76
 2339 0880 00000000 		.4byte	.LFB38
 2340 0884 0C000000 		.4byte	.LFE38-.LFB38
 2341 0888 01       		.uleb128 0x1
 2342 0889 9C       		.byte	0x9c
 2343 088a 0A       		.uleb128 0xa
 2344 088b 52010000 		.4byte	.LASF74
 2345 088f 01       		.byte	0x1
 2346 0890 4905     		.2byte	0x549
 2347 0892 00000000 		.4byte	.LFB39
 2348 0896 0C000000 		.4byte	.LFE39-.LFB39
 2349 089a 01       		.uleb128 0x1
 2350 089b 9C       		.byte	0x9c
 2351 089c AF080000 		.4byte	0x8af
 2352 08a0 10       		.uleb128 0x10
 2353 08a1 50040000 		.4byte	.LASF69
 2354 08a5 01       		.byte	0x1
 2355 08a6 4905     		.2byte	0x549
 2356 08a8 76000000 		.4byte	0x76
 2357 08ac 01       		.uleb128 0x1
 2358 08ad 50       		.byte	0x50
 2359 08ae 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 67


 2360 08af 0A       		.uleb128 0xa
 2361 08b0 89040000 		.4byte	.LASF75
 2362 08b4 01       		.byte	0x1
 2363 08b5 6005     		.2byte	0x560
 2364 08b7 00000000 		.4byte	.LFB40
 2365 08bb 0C000000 		.4byte	.LFE40-.LFB40
 2366 08bf 01       		.uleb128 0x1
 2367 08c0 9C       		.byte	0x9c
 2368 08c1 D4080000 		.4byte	0x8d4
 2369 08c5 10       		.uleb128 0x10
 2370 08c6 50040000 		.4byte	.LASF69
 2371 08ca 01       		.byte	0x1
 2372 08cb 6005     		.2byte	0x560
 2373 08cd 76000000 		.4byte	0x76
 2374 08d1 01       		.uleb128 0x1
 2375 08d2 50       		.byte	0x50
 2376 08d3 00       		.byte	0
 2377 08d4 12       		.uleb128 0x12
 2378 08d5 5A030000 		.4byte	.LASF79
 2379 08d9 01       		.byte	0x1
 2380 08da 15       		.byte	0x15
 2381 08db 6B000000 		.4byte	0x6b
 2382 08df 05       		.uleb128 0x5
 2383 08e0 03       		.byte	0x3
 2384 08e1 00000000 		.4byte	PWM_initVar
 2385 08e5 13       		.uleb128 0x13
 2386 08e6 D7020000 		.4byte	.LASF80
 2387 08ea 03       		.byte	0x3
 2388 08eb 5E       		.byte	0x5e
 2389 08ec 6B000000 		.4byte	0x6b
 2390 08f0 14       		.uleb128 0x14
 2391 08f1 11000000 		.4byte	.LASF81
 2392 08f5 03       		.byte	0x3
 2393 08f6 5F       		.byte	0x5f
 2394 08f7 15       		.uleb128 0x15
 2395 08f8 6B000000 		.4byte	0x6b
 2396 08fc 00       		.byte	0
 2397 08fd 00       		.byte	0
 2398              		.section	.debug_abbrev,"",%progbits
 2399              	.Ldebug_abbrev0:
 2400 0000 01       		.uleb128 0x1
 2401 0001 11       		.uleb128 0x11
 2402 0002 01       		.byte	0x1
 2403 0003 25       		.uleb128 0x25
 2404 0004 0E       		.uleb128 0xe
 2405 0005 13       		.uleb128 0x13
 2406 0006 0B       		.uleb128 0xb
 2407 0007 03       		.uleb128 0x3
 2408 0008 0E       		.uleb128 0xe
 2409 0009 1B       		.uleb128 0x1b
 2410 000a 0E       		.uleb128 0xe
 2411 000b 55       		.uleb128 0x55
 2412 000c 17       		.uleb128 0x17
 2413 000d 11       		.uleb128 0x11
 2414 000e 01       		.uleb128 0x1
 2415 000f 10       		.uleb128 0x10
 2416 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 68


 2417 0011 00       		.byte	0
 2418 0012 00       		.byte	0
 2419 0013 02       		.uleb128 0x2
 2420 0014 24       		.uleb128 0x24
 2421 0015 00       		.byte	0
 2422 0016 0B       		.uleb128 0xb
 2423 0017 0B       		.uleb128 0xb
 2424 0018 3E       		.uleb128 0x3e
 2425 0019 0B       		.uleb128 0xb
 2426 001a 03       		.uleb128 0x3
 2427 001b 0E       		.uleb128 0xe
 2428 001c 00       		.byte	0
 2429 001d 00       		.byte	0
 2430 001e 03       		.uleb128 0x3
 2431 001f 24       		.uleb128 0x24
 2432 0020 00       		.byte	0
 2433 0021 0B       		.uleb128 0xb
 2434 0022 0B       		.uleb128 0xb
 2435 0023 3E       		.uleb128 0x3e
 2436 0024 0B       		.uleb128 0xb
 2437 0025 03       		.uleb128 0x3
 2438 0026 08       		.uleb128 0x8
 2439 0027 00       		.byte	0
 2440 0028 00       		.byte	0
 2441 0029 04       		.uleb128 0x4
 2442 002a 16       		.uleb128 0x16
 2443 002b 00       		.byte	0
 2444 002c 03       		.uleb128 0x3
 2445 002d 0E       		.uleb128 0xe
 2446 002e 3A       		.uleb128 0x3a
 2447 002f 0B       		.uleb128 0xb
 2448 0030 3B       		.uleb128 0x3b
 2449 0031 0B       		.uleb128 0xb
 2450 0032 49       		.uleb128 0x49
 2451 0033 13       		.uleb128 0x13
 2452 0034 00       		.byte	0
 2453 0035 00       		.byte	0
 2454 0036 05       		.uleb128 0x5
 2455 0037 16       		.uleb128 0x16
 2456 0038 00       		.byte	0
 2457 0039 03       		.uleb128 0x3
 2458 003a 0E       		.uleb128 0xe
 2459 003b 3A       		.uleb128 0x3a
 2460 003c 0B       		.uleb128 0xb
 2461 003d 3B       		.uleb128 0x3b
 2462 003e 05       		.uleb128 0x5
 2463 003f 49       		.uleb128 0x49
 2464 0040 13       		.uleb128 0x13
 2465 0041 00       		.byte	0
 2466 0042 00       		.byte	0
 2467 0043 06       		.uleb128 0x6
 2468 0044 35       		.uleb128 0x35
 2469 0045 00       		.byte	0
 2470 0046 49       		.uleb128 0x49
 2471 0047 13       		.uleb128 0x13
 2472 0048 00       		.byte	0
 2473 0049 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 69


 2474 004a 07       		.uleb128 0x7
 2475 004b 2E       		.uleb128 0x2e
 2476 004c 01       		.byte	0x1
 2477 004d 3F       		.uleb128 0x3f
 2478 004e 19       		.uleb128 0x19
 2479 004f 03       		.uleb128 0x3
 2480 0050 0E       		.uleb128 0xe
 2481 0051 3A       		.uleb128 0x3a
 2482 0052 0B       		.uleb128 0xb
 2483 0053 3B       		.uleb128 0x3b
 2484 0054 0B       		.uleb128 0xb
 2485 0055 27       		.uleb128 0x27
 2486 0056 19       		.uleb128 0x19
 2487 0057 11       		.uleb128 0x11
 2488 0058 01       		.uleb128 0x1
 2489 0059 12       		.uleb128 0x12
 2490 005a 06       		.uleb128 0x6
 2491 005b 40       		.uleb128 0x40
 2492 005c 18       		.uleb128 0x18
 2493 005d 9742     		.uleb128 0x2117
 2494 005f 19       		.uleb128 0x19
 2495 0060 01       		.uleb128 0x1
 2496 0061 13       		.uleb128 0x13
 2497 0062 00       		.byte	0
 2498 0063 00       		.byte	0
 2499 0064 08       		.uleb128 0x8
 2500 0065 34       		.uleb128 0x34
 2501 0066 00       		.byte	0
 2502 0067 03       		.uleb128 0x3
 2503 0068 0E       		.uleb128 0xe
 2504 0069 3A       		.uleb128 0x3a
 2505 006a 0B       		.uleb128 0xb
 2506 006b 3B       		.uleb128 0x3b
 2507 006c 0B       		.uleb128 0xb
 2508 006d 49       		.uleb128 0x49
 2509 006e 13       		.uleb128 0x13
 2510 006f 02       		.uleb128 0x2
 2511 0070 17       		.uleb128 0x17
 2512 0071 00       		.byte	0
 2513 0072 00       		.byte	0
 2514 0073 09       		.uleb128 0x9
 2515 0074 898201   		.uleb128 0x4109
 2516 0077 00       		.byte	0
 2517 0078 11       		.uleb128 0x11
 2518 0079 01       		.uleb128 0x1
 2519 007a 31       		.uleb128 0x31
 2520 007b 13       		.uleb128 0x13
 2521 007c 00       		.byte	0
 2522 007d 00       		.byte	0
 2523 007e 0A       		.uleb128 0xa
 2524 007f 2E       		.uleb128 0x2e
 2525 0080 01       		.byte	0x1
 2526 0081 3F       		.uleb128 0x3f
 2527 0082 19       		.uleb128 0x19
 2528 0083 03       		.uleb128 0x3
 2529 0084 0E       		.uleb128 0xe
 2530 0085 3A       		.uleb128 0x3a
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 70


 2531 0086 0B       		.uleb128 0xb
 2532 0087 3B       		.uleb128 0x3b
 2533 0088 05       		.uleb128 0x5
 2534 0089 27       		.uleb128 0x27
 2535 008a 19       		.uleb128 0x19
 2536 008b 11       		.uleb128 0x11
 2537 008c 01       		.uleb128 0x1
 2538 008d 12       		.uleb128 0x12
 2539 008e 06       		.uleb128 0x6
 2540 008f 40       		.uleb128 0x40
 2541 0090 18       		.uleb128 0x18
 2542 0091 9742     		.uleb128 0x2117
 2543 0093 19       		.uleb128 0x19
 2544 0094 01       		.uleb128 0x1
 2545 0095 13       		.uleb128 0x13
 2546 0096 00       		.byte	0
 2547 0097 00       		.byte	0
 2548 0098 0B       		.uleb128 0xb
 2549 0099 05       		.uleb128 0x5
 2550 009a 00       		.byte	0
 2551 009b 03       		.uleb128 0x3
 2552 009c 0E       		.uleb128 0xe
 2553 009d 3A       		.uleb128 0x3a
 2554 009e 0B       		.uleb128 0xb
 2555 009f 3B       		.uleb128 0x3b
 2556 00a0 05       		.uleb128 0x5
 2557 00a1 49       		.uleb128 0x49
 2558 00a2 13       		.uleb128 0x13
 2559 00a3 02       		.uleb128 0x2
 2560 00a4 17       		.uleb128 0x17
 2561 00a5 00       		.byte	0
 2562 00a6 00       		.byte	0
 2563 00a7 0C       		.uleb128 0xc
 2564 00a8 34       		.uleb128 0x34
 2565 00a9 00       		.byte	0
 2566 00aa 03       		.uleb128 0x3
 2567 00ab 0E       		.uleb128 0xe
 2568 00ac 3A       		.uleb128 0x3a
 2569 00ad 0B       		.uleb128 0xb
 2570 00ae 3B       		.uleb128 0x3b
 2571 00af 05       		.uleb128 0x5
 2572 00b0 49       		.uleb128 0x49
 2573 00b1 13       		.uleb128 0x13
 2574 00b2 02       		.uleb128 0x2
 2575 00b3 17       		.uleb128 0x17
 2576 00b4 00       		.byte	0
 2577 00b5 00       		.byte	0
 2578 00b6 0D       		.uleb128 0xd
 2579 00b7 2E       		.uleb128 0x2e
 2580 00b8 00       		.byte	0
 2581 00b9 3F       		.uleb128 0x3f
 2582 00ba 19       		.uleb128 0x19
 2583 00bb 03       		.uleb128 0x3
 2584 00bc 0E       		.uleb128 0xe
 2585 00bd 3A       		.uleb128 0x3a
 2586 00be 0B       		.uleb128 0xb
 2587 00bf 3B       		.uleb128 0x3b
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 71


 2588 00c0 05       		.uleb128 0x5
 2589 00c1 27       		.uleb128 0x27
 2590 00c2 19       		.uleb128 0x19
 2591 00c3 49       		.uleb128 0x49
 2592 00c4 13       		.uleb128 0x13
 2593 00c5 11       		.uleb128 0x11
 2594 00c6 01       		.uleb128 0x1
 2595 00c7 12       		.uleb128 0x12
 2596 00c8 06       		.uleb128 0x6
 2597 00c9 40       		.uleb128 0x40
 2598 00ca 18       		.uleb128 0x18
 2599 00cb 9742     		.uleb128 0x2117
 2600 00cd 19       		.uleb128 0x19
 2601 00ce 00       		.byte	0
 2602 00cf 00       		.byte	0
 2603 00d0 0E       		.uleb128 0xe
 2604 00d1 898201   		.uleb128 0x4109
 2605 00d4 01       		.byte	0x1
 2606 00d5 11       		.uleb128 0x11
 2607 00d6 01       		.uleb128 0x1
 2608 00d7 31       		.uleb128 0x31
 2609 00d8 13       		.uleb128 0x13
 2610 00d9 00       		.byte	0
 2611 00da 00       		.byte	0
 2612 00db 0F       		.uleb128 0xf
 2613 00dc 8A8201   		.uleb128 0x410a
 2614 00df 00       		.byte	0
 2615 00e0 02       		.uleb128 0x2
 2616 00e1 18       		.uleb128 0x18
 2617 00e2 9142     		.uleb128 0x2111
 2618 00e4 18       		.uleb128 0x18
 2619 00e5 00       		.byte	0
 2620 00e6 00       		.byte	0
 2621 00e7 10       		.uleb128 0x10
 2622 00e8 05       		.uleb128 0x5
 2623 00e9 00       		.byte	0
 2624 00ea 03       		.uleb128 0x3
 2625 00eb 0E       		.uleb128 0xe
 2626 00ec 3A       		.uleb128 0x3a
 2627 00ed 0B       		.uleb128 0xb
 2628 00ee 3B       		.uleb128 0x3b
 2629 00ef 05       		.uleb128 0x5
 2630 00f0 49       		.uleb128 0x49
 2631 00f1 13       		.uleb128 0x13
 2632 00f2 02       		.uleb128 0x2
 2633 00f3 18       		.uleb128 0x18
 2634 00f4 00       		.byte	0
 2635 00f5 00       		.byte	0
 2636 00f6 11       		.uleb128 0x11
 2637 00f7 898201   		.uleb128 0x4109
 2638 00fa 01       		.byte	0x1
 2639 00fb 11       		.uleb128 0x11
 2640 00fc 01       		.uleb128 0x1
 2641 00fd 31       		.uleb128 0x31
 2642 00fe 13       		.uleb128 0x13
 2643 00ff 01       		.uleb128 0x1
 2644 0100 13       		.uleb128 0x13
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 72


 2645 0101 00       		.byte	0
 2646 0102 00       		.byte	0
 2647 0103 12       		.uleb128 0x12
 2648 0104 34       		.uleb128 0x34
 2649 0105 00       		.byte	0
 2650 0106 03       		.uleb128 0x3
 2651 0107 0E       		.uleb128 0xe
 2652 0108 3A       		.uleb128 0x3a
 2653 0109 0B       		.uleb128 0xb
 2654 010a 3B       		.uleb128 0x3b
 2655 010b 0B       		.uleb128 0xb
 2656 010c 49       		.uleb128 0x49
 2657 010d 13       		.uleb128 0x13
 2658 010e 3F       		.uleb128 0x3f
 2659 010f 19       		.uleb128 0x19
 2660 0110 02       		.uleb128 0x2
 2661 0111 18       		.uleb128 0x18
 2662 0112 00       		.byte	0
 2663 0113 00       		.byte	0
 2664 0114 13       		.uleb128 0x13
 2665 0115 2E       		.uleb128 0x2e
 2666 0116 00       		.byte	0
 2667 0117 3F       		.uleb128 0x3f
 2668 0118 19       		.uleb128 0x19
 2669 0119 03       		.uleb128 0x3
 2670 011a 0E       		.uleb128 0xe
 2671 011b 3A       		.uleb128 0x3a
 2672 011c 0B       		.uleb128 0xb
 2673 011d 3B       		.uleb128 0x3b
 2674 011e 0B       		.uleb128 0xb
 2675 011f 27       		.uleb128 0x27
 2676 0120 19       		.uleb128 0x19
 2677 0121 49       		.uleb128 0x49
 2678 0122 13       		.uleb128 0x13
 2679 0123 3C       		.uleb128 0x3c
 2680 0124 19       		.uleb128 0x19
 2681 0125 00       		.byte	0
 2682 0126 00       		.byte	0
 2683 0127 14       		.uleb128 0x14
 2684 0128 2E       		.uleb128 0x2e
 2685 0129 01       		.byte	0x1
 2686 012a 3F       		.uleb128 0x3f
 2687 012b 19       		.uleb128 0x19
 2688 012c 03       		.uleb128 0x3
 2689 012d 0E       		.uleb128 0xe
 2690 012e 3A       		.uleb128 0x3a
 2691 012f 0B       		.uleb128 0xb
 2692 0130 3B       		.uleb128 0x3b
 2693 0131 0B       		.uleb128 0xb
 2694 0132 27       		.uleb128 0x27
 2695 0133 19       		.uleb128 0x19
 2696 0134 3C       		.uleb128 0x3c
 2697 0135 19       		.uleb128 0x19
 2698 0136 00       		.byte	0
 2699 0137 00       		.byte	0
 2700 0138 15       		.uleb128 0x15
 2701 0139 05       		.uleb128 0x5
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 73


 2702 013a 00       		.byte	0
 2703 013b 49       		.uleb128 0x49
 2704 013c 13       		.uleb128 0x13
 2705 013d 00       		.byte	0
 2706 013e 00       		.byte	0
 2707 013f 00       		.byte	0
 2708              		.section	.debug_loc,"",%progbits
 2709              	.Ldebug_loc0:
 2710              	.LLST0:
 2711 0000 06000000 		.4byte	.LVL0
 2712 0004 13000000 		.4byte	.LVL1-1
 2713 0008 0100     		.2byte	0x1
 2714 000a 50       		.byte	0x50
 2715 000b 00000000 		.4byte	0
 2716 000f 00000000 		.4byte	0
 2717              	.LLST1:
 2718 0013 00000000 		.4byte	.LVL2
 2719 0017 07000000 		.4byte	.LVL3-1
 2720 001b 0100     		.2byte	0x1
 2721 001d 50       		.byte	0x50
 2722 001e 07000000 		.4byte	.LVL3-1
 2723 0022 16000000 		.4byte	.LVL4
 2724 0026 0100     		.2byte	0x1
 2725 0028 54       		.byte	0x54
 2726 0029 16000000 		.4byte	.LVL4
 2727 002d 28000000 		.4byte	.LFE5
 2728 0031 0400     		.2byte	0x4
 2729 0033 F3       		.byte	0xf3
 2730 0034 01       		.uleb128 0x1
 2731 0035 50       		.byte	0x50
 2732 0036 9F       		.byte	0x9f
 2733 0037 00000000 		.4byte	0
 2734 003b 00000000 		.4byte	0
 2735              	.LLST2:
 2736 003f 08000000 		.4byte	.LVL3
 2737 0043 1B000000 		.4byte	.LVL5-1
 2738 0047 0100     		.2byte	0x1
 2739 0049 50       		.byte	0x50
 2740 004a 00000000 		.4byte	0
 2741 004e 00000000 		.4byte	0
 2742              	.LLST3:
 2743 0052 00000000 		.4byte	.LVL6
 2744 0056 07000000 		.4byte	.LVL7-1
 2745 005a 0100     		.2byte	0x1
 2746 005c 50       		.byte	0x50
 2747 005d 07000000 		.4byte	.LVL7-1
 2748 0061 16000000 		.4byte	.LVL8
 2749 0065 0100     		.2byte	0x1
 2750 0067 54       		.byte	0x54
 2751 0068 16000000 		.4byte	.LVL8
 2752 006c 28000000 		.4byte	.LFE6
 2753 0070 0400     		.2byte	0x4
 2754 0072 F3       		.byte	0xf3
 2755 0073 01       		.uleb128 0x1
 2756 0074 50       		.byte	0x50
 2757 0075 9F       		.byte	0x9f
 2758 0076 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 74


 2759 007a 00000000 		.4byte	0
 2760              	.LLST4:
 2761 007e 08000000 		.4byte	.LVL7
 2762 0082 1B000000 		.4byte	.LVL9-1
 2763 0086 0100     		.2byte	0x1
 2764 0088 50       		.byte	0x50
 2765 0089 00000000 		.4byte	0
 2766 008d 00000000 		.4byte	0
 2767              	.LLST5:
 2768 0091 00000000 		.4byte	.LVL10
 2769 0095 07000000 		.4byte	.LVL11-1
 2770 0099 0100     		.2byte	0x1
 2771 009b 50       		.byte	0x50
 2772 009c 07000000 		.4byte	.LVL11-1
 2773 00a0 16000000 		.4byte	.LVL12
 2774 00a4 0100     		.2byte	0x1
 2775 00a6 54       		.byte	0x54
 2776 00a7 16000000 		.4byte	.LVL12
 2777 00ab 28000000 		.4byte	.LFE7
 2778 00af 0400     		.2byte	0x4
 2779 00b1 F3       		.byte	0xf3
 2780 00b2 01       		.uleb128 0x1
 2781 00b3 50       		.byte	0x50
 2782 00b4 9F       		.byte	0x9f
 2783 00b5 00000000 		.4byte	0
 2784 00b9 00000000 		.4byte	0
 2785              	.LLST6:
 2786 00bd 08000000 		.4byte	.LVL11
 2787 00c1 1B000000 		.4byte	.LVL13-1
 2788 00c5 0100     		.2byte	0x1
 2789 00c7 50       		.byte	0x50
 2790 00c8 00000000 		.4byte	0
 2791 00cc 00000000 		.4byte	0
 2792              	.LLST7:
 2793 00d0 00000000 		.4byte	.LVL14
 2794 00d4 07000000 		.4byte	.LVL15-1
 2795 00d8 0100     		.2byte	0x1
 2796 00da 50       		.byte	0x50
 2797 00db 07000000 		.4byte	.LVL15-1
 2798 00df 18000000 		.4byte	.LVL16
 2799 00e3 0100     		.2byte	0x1
 2800 00e5 54       		.byte	0x54
 2801 00e6 18000000 		.4byte	.LVL16
 2802 00ea 2C000000 		.4byte	.LFE8
 2803 00ee 0400     		.2byte	0x4
 2804 00f0 F3       		.byte	0xf3
 2805 00f1 01       		.uleb128 0x1
 2806 00f2 50       		.byte	0x50
 2807 00f3 9F       		.byte	0x9f
 2808 00f4 00000000 		.4byte	0
 2809 00f8 00000000 		.4byte	0
 2810              	.LLST8:
 2811 00fc 08000000 		.4byte	.LVL15
 2812 0100 21000000 		.4byte	.LVL17-1
 2813 0104 0100     		.2byte	0x1
 2814 0106 50       		.byte	0x50
 2815 0107 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 75


 2816 010b 00000000 		.4byte	0
 2817              	.LLST9:
 2818 010f 00000000 		.4byte	.LVL18
 2819 0113 04000000 		.4byte	.LVL19
 2820 0117 0100     		.2byte	0x1
 2821 0119 50       		.byte	0x50
 2822 011a 04000000 		.4byte	.LVL19
 2823 011e 10000000 		.4byte	.LFE9
 2824 0122 0400     		.2byte	0x4
 2825 0124 F3       		.byte	0xf3
 2826 0125 01       		.uleb128 0x1
 2827 0126 50       		.byte	0x50
 2828 0127 9F       		.byte	0x9f
 2829 0128 00000000 		.4byte	0
 2830 012c 00000000 		.4byte	0
 2831              	.LLST10:
 2832 0130 00000000 		.4byte	.LVL20
 2833 0134 07000000 		.4byte	.LVL21-1
 2834 0138 0100     		.2byte	0x1
 2835 013a 50       		.byte	0x50
 2836 013b 07000000 		.4byte	.LVL21-1
 2837 013f 18000000 		.4byte	.LVL22
 2838 0143 0100     		.2byte	0x1
 2839 0145 54       		.byte	0x54
 2840 0146 18000000 		.4byte	.LVL22
 2841 014a 28000000 		.4byte	.LFE10
 2842 014e 0400     		.2byte	0x4
 2843 0150 F3       		.byte	0xf3
 2844 0151 01       		.uleb128 0x1
 2845 0152 50       		.byte	0x50
 2846 0153 9F       		.byte	0x9f
 2847 0154 00000000 		.4byte	0
 2848 0158 00000000 		.4byte	0
 2849              	.LLST11:
 2850 015c 08000000 		.4byte	.LVL21
 2851 0160 21000000 		.4byte	.LVL23-1
 2852 0164 0100     		.2byte	0x1
 2853 0166 50       		.byte	0x50
 2854 0167 00000000 		.4byte	0
 2855 016b 00000000 		.4byte	0
 2856              	.LLST12:
 2857 016f 00000000 		.4byte	.LVL24
 2858 0173 07000000 		.4byte	.LVL25-1
 2859 0177 0100     		.2byte	0x1
 2860 0179 50       		.byte	0x50
 2861 017a 07000000 		.4byte	.LVL25-1
 2862 017e 18000000 		.4byte	.LVL26
 2863 0182 0100     		.2byte	0x1
 2864 0184 54       		.byte	0x54
 2865 0185 18000000 		.4byte	.LVL26
 2866 0189 28000000 		.4byte	.LFE11
 2867 018d 0400     		.2byte	0x4
 2868 018f F3       		.byte	0xf3
 2869 0190 01       		.uleb128 0x1
 2870 0191 50       		.byte	0x50
 2871 0192 9F       		.byte	0x9f
 2872 0193 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 76


 2873 0197 00000000 		.4byte	0
 2874              	.LLST13:
 2875 019b 08000000 		.4byte	.LVL25
 2876 019f 21000000 		.4byte	.LVL27-1
 2877 01a3 0100     		.2byte	0x1
 2878 01a5 50       		.byte	0x50
 2879 01a6 00000000 		.4byte	0
 2880 01aa 00000000 		.4byte	0
 2881              	.LLST14:
 2882 01ae 00000000 		.4byte	.LVL28
 2883 01b2 07000000 		.4byte	.LVL29-1
 2884 01b6 0100     		.2byte	0x1
 2885 01b8 50       		.byte	0x50
 2886 01b9 07000000 		.4byte	.LVL29-1
 2887 01bd 16000000 		.4byte	.LVL30
 2888 01c1 0100     		.2byte	0x1
 2889 01c3 54       		.byte	0x54
 2890 01c4 16000000 		.4byte	.LVL30
 2891 01c8 2C000000 		.4byte	.LFE12
 2892 01cc 0400     		.2byte	0x4
 2893 01ce F3       		.byte	0xf3
 2894 01cf 01       		.uleb128 0x1
 2895 01d0 50       		.byte	0x50
 2896 01d1 9F       		.byte	0x9f
 2897 01d2 00000000 		.4byte	0
 2898 01d6 00000000 		.4byte	0
 2899              	.LLST15:
 2900 01da 08000000 		.4byte	.LVL29
 2901 01de 1F000000 		.4byte	.LVL31-1
 2902 01e2 0100     		.2byte	0x1
 2903 01e4 50       		.byte	0x50
 2904 01e5 00000000 		.4byte	0
 2905 01e9 00000000 		.4byte	0
 2906              	.LLST16:
 2907 01ed 00000000 		.4byte	.LVL32
 2908 01f1 07000000 		.4byte	.LVL33-1
 2909 01f5 0100     		.2byte	0x1
 2910 01f7 50       		.byte	0x50
 2911 01f8 07000000 		.4byte	.LVL33-1
 2912 01fc 16000000 		.4byte	.LVL34
 2913 0200 0100     		.2byte	0x1
 2914 0202 54       		.byte	0x54
 2915 0203 16000000 		.4byte	.LVL34
 2916 0207 28000000 		.4byte	.LFE13
 2917 020b 0400     		.2byte	0x4
 2918 020d F3       		.byte	0xf3
 2919 020e 01       		.uleb128 0x1
 2920 020f 50       		.byte	0x50
 2921 0210 9F       		.byte	0x9f
 2922 0211 00000000 		.4byte	0
 2923 0215 00000000 		.4byte	0
 2924              	.LLST17:
 2925 0219 08000000 		.4byte	.LVL33
 2926 021d 1B000000 		.4byte	.LVL35-1
 2927 0221 0100     		.2byte	0x1
 2928 0223 50       		.byte	0x50
 2929 0224 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 77


 2930 0228 00000000 		.4byte	0
 2931              	.LLST18:
 2932 022c 00000000 		.4byte	.LVL36
 2933 0230 02000000 		.4byte	.LVL37
 2934 0234 0100     		.2byte	0x1
 2935 0236 50       		.byte	0x50
 2936 0237 02000000 		.4byte	.LVL37
 2937 023b 10000000 		.4byte	.LFE14
 2938 023f 0400     		.2byte	0x4
 2939 0241 F3       		.byte	0xf3
 2940 0242 01       		.uleb128 0x1
 2941 0243 50       		.byte	0x50
 2942 0244 9F       		.byte	0x9f
 2943 0245 00000000 		.4byte	0
 2944 0249 00000000 		.4byte	0
 2945              	.LLST19:
 2946 024d 00000000 		.4byte	.LVL38
 2947 0251 07000000 		.4byte	.LVL39-1
 2948 0255 0100     		.2byte	0x1
 2949 0257 50       		.byte	0x50
 2950 0258 07000000 		.4byte	.LVL39-1
 2951 025c 16000000 		.4byte	.LVL40
 2952 0260 0100     		.2byte	0x1
 2953 0262 54       		.byte	0x54
 2954 0263 16000000 		.4byte	.LVL40
 2955 0267 28000000 		.4byte	.LFE16
 2956 026b 0400     		.2byte	0x4
 2957 026d F3       		.byte	0xf3
 2958 026e 01       		.uleb128 0x1
 2959 026f 50       		.byte	0x50
 2960 0270 9F       		.byte	0x9f
 2961 0271 00000000 		.4byte	0
 2962 0275 00000000 		.4byte	0
 2963              	.LLST20:
 2964 0279 08000000 		.4byte	.LVL39
 2965 027d 1B000000 		.4byte	.LVL41-1
 2966 0281 0100     		.2byte	0x1
 2967 0283 50       		.byte	0x50
 2968 0284 00000000 		.4byte	0
 2969 0288 00000000 		.4byte	0
 2970              	.LLST21:
 2971 028c 00000000 		.4byte	.LVL42
 2972 0290 02000000 		.4byte	.LVL43
 2973 0294 0100     		.2byte	0x1
 2974 0296 50       		.byte	0x50
 2975 0297 02000000 		.4byte	.LVL43
 2976 029b 10000000 		.4byte	.LFE17
 2977 029f 0400     		.2byte	0x4
 2978 02a1 F3       		.byte	0xf3
 2979 02a2 01       		.uleb128 0x1
 2980 02a3 50       		.byte	0x50
 2981 02a4 9F       		.byte	0x9f
 2982 02a5 00000000 		.4byte	0
 2983 02a9 00000000 		.4byte	0
 2984              	.LLST22:
 2985 02ad 00000000 		.4byte	.LVL44
 2986 02b1 07000000 		.4byte	.LVL45-1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 78


 2987 02b5 0100     		.2byte	0x1
 2988 02b7 50       		.byte	0x50
 2989 02b8 07000000 		.4byte	.LVL45-1
 2990 02bc 1E000000 		.4byte	.LVL47
 2991 02c0 0100     		.2byte	0x1
 2992 02c2 54       		.byte	0x54
 2993 02c3 1E000000 		.4byte	.LVL47
 2994 02c7 24000000 		.4byte	.LFE19
 2995 02cb 0400     		.2byte	0x4
 2996 02cd F3       		.byte	0xf3
 2997 02ce 01       		.uleb128 0x1
 2998 02cf 50       		.byte	0x50
 2999 02d0 9F       		.byte	0x9f
 3000 02d1 00000000 		.4byte	0
 3001 02d5 00000000 		.4byte	0
 3002              	.LLST23:
 3003 02d9 08000000 		.4byte	.LVL45
 3004 02dd 1D000000 		.4byte	.LVL46-1
 3005 02e1 0100     		.2byte	0x1
 3006 02e3 50       		.byte	0x50
 3007 02e4 00000000 		.4byte	0
 3008 02e8 00000000 		.4byte	0
 3009              	.LLST24:
 3010 02ec 00000000 		.4byte	.LVL48
 3011 02f0 02000000 		.4byte	.LVL49
 3012 02f4 0100     		.2byte	0x1
 3013 02f6 50       		.byte	0x50
 3014 02f7 02000000 		.4byte	.LVL49
 3015 02fb 10000000 		.4byte	.LFE20
 3016 02ff 0400     		.2byte	0x4
 3017 0301 F3       		.byte	0xf3
 3018 0302 01       		.uleb128 0x1
 3019 0303 50       		.byte	0x50
 3020 0304 9F       		.byte	0x9f
 3021 0305 00000000 		.4byte	0
 3022 0309 00000000 		.4byte	0
 3023              	.LLST25:
 3024 030d 00000000 		.4byte	.LVL50
 3025 0311 07000000 		.4byte	.LVL51-1
 3026 0315 0100     		.2byte	0x1
 3027 0317 50       		.byte	0x50
 3028 0318 07000000 		.4byte	.LVL51-1
 3029 031c 18000000 		.4byte	.LVL52
 3030 0320 0100     		.2byte	0x1
 3031 0322 54       		.byte	0x54
 3032 0323 18000000 		.4byte	.LVL52
 3033 0327 28000000 		.4byte	.LFE22
 3034 032b 0400     		.2byte	0x4
 3035 032d F3       		.byte	0xf3
 3036 032e 01       		.uleb128 0x1
 3037 032f 50       		.byte	0x50
 3038 0330 9F       		.byte	0x9f
 3039 0331 00000000 		.4byte	0
 3040 0335 00000000 		.4byte	0
 3041              	.LLST26:
 3042 0339 08000000 		.4byte	.LVL51
 3043 033d 21000000 		.4byte	.LVL53-1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 79


 3044 0341 0100     		.2byte	0x1
 3045 0343 50       		.byte	0x50
 3046 0344 00000000 		.4byte	0
 3047 0348 00000000 		.4byte	0
 3048              	.LLST27:
 3049 034c 00000000 		.4byte	.LVL54
 3050 0350 02000000 		.4byte	.LVL55
 3051 0354 0100     		.2byte	0x1
 3052 0356 50       		.byte	0x50
 3053 0357 02000000 		.4byte	.LVL55
 3054 035b 10000000 		.4byte	.LFE23
 3055 035f 0400     		.2byte	0x4
 3056 0361 F3       		.byte	0xf3
 3057 0362 01       		.uleb128 0x1
 3058 0363 50       		.byte	0x50
 3059 0364 9F       		.byte	0x9f
 3060 0365 00000000 		.4byte	0
 3061 0369 00000000 		.4byte	0
 3062              	.LLST28:
 3063 036d 00000000 		.4byte	.LVL56
 3064 0371 02000000 		.4byte	.LVL57
 3065 0375 0100     		.2byte	0x1
 3066 0377 50       		.byte	0x50
 3067 0378 02000000 		.4byte	.LVL57
 3068 037c 10000000 		.4byte	.LFE25
 3069 0380 0400     		.2byte	0x4
 3070 0382 F3       		.byte	0xf3
 3071 0383 01       		.uleb128 0x1
 3072 0384 50       		.byte	0x50
 3073 0385 9F       		.byte	0x9f
 3074 0386 00000000 		.4byte	0
 3075 038a 00000000 		.4byte	0
 3076              	.LLST29:
 3077 038e 00000000 		.4byte	.LVL58
 3078 0392 07000000 		.4byte	.LVL59-1
 3079 0396 0100     		.2byte	0x1
 3080 0398 50       		.byte	0x50
 3081 0399 07000000 		.4byte	.LVL59-1
 3082 039d 16000000 		.4byte	.LVL60
 3083 03a1 0100     		.2byte	0x1
 3084 03a3 54       		.byte	0x54
 3085 03a4 16000000 		.4byte	.LVL60
 3086 03a8 24000000 		.4byte	.LFE29
 3087 03ac 0400     		.2byte	0x4
 3088 03ae F3       		.byte	0xf3
 3089 03af 01       		.uleb128 0x1
 3090 03b0 50       		.byte	0x50
 3091 03b1 9F       		.byte	0x9f
 3092 03b2 00000000 		.4byte	0
 3093 03b6 00000000 		.4byte	0
 3094              	.LLST30:
 3095 03ba 08000000 		.4byte	.LVL59
 3096 03be 1B000000 		.4byte	.LVL61-1
 3097 03c2 0100     		.2byte	0x1
 3098 03c4 50       		.byte	0x50
 3099 03c5 00000000 		.4byte	0
 3100 03c9 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 80


 3101              	.LLST31:
 3102 03cd 00000000 		.4byte	.LVL62
 3103 03d1 07000000 		.4byte	.LVL63-1
 3104 03d5 0100     		.2byte	0x1
 3105 03d7 50       		.byte	0x50
 3106 03d8 07000000 		.4byte	.LVL63-1
 3107 03dc 16000000 		.4byte	.LVL64
 3108 03e0 0100     		.2byte	0x1
 3109 03e2 54       		.byte	0x54
 3110 03e3 16000000 		.4byte	.LVL64
 3111 03e7 24000000 		.4byte	.LFE30
 3112 03eb 0400     		.2byte	0x4
 3113 03ed F3       		.byte	0xf3
 3114 03ee 01       		.uleb128 0x1
 3115 03ef 50       		.byte	0x50
 3116 03f0 9F       		.byte	0x9f
 3117 03f1 00000000 		.4byte	0
 3118 03f5 00000000 		.4byte	0
 3119              	.LLST32:
 3120 03f9 08000000 		.4byte	.LVL63
 3121 03fd 1D000000 		.4byte	.LVL65-1
 3122 0401 0100     		.2byte	0x1
 3123 0403 50       		.byte	0x50
 3124 0404 00000000 		.4byte	0
 3125 0408 00000000 		.4byte	0
 3126              	.LLST33:
 3127 040c 00000000 		.4byte	.LVL66
 3128 0410 07000000 		.4byte	.LVL67-1
 3129 0414 0100     		.2byte	0x1
 3130 0416 50       		.byte	0x50
 3131 0417 07000000 		.4byte	.LVL67-1
 3132 041b 16000000 		.4byte	.LVL68
 3133 041f 0100     		.2byte	0x1
 3134 0421 54       		.byte	0x54
 3135 0422 16000000 		.4byte	.LVL68
 3136 0426 28000000 		.4byte	.LFE31
 3137 042a 0400     		.2byte	0x4
 3138 042c F3       		.byte	0xf3
 3139 042d 01       		.uleb128 0x1
 3140 042e 50       		.byte	0x50
 3141 042f 9F       		.byte	0x9f
 3142 0430 00000000 		.4byte	0
 3143 0434 00000000 		.4byte	0
 3144              	.LLST34:
 3145 0438 08000000 		.4byte	.LVL67
 3146 043c 1D000000 		.4byte	.LVL69-1
 3147 0440 0100     		.2byte	0x1
 3148 0442 50       		.byte	0x50
 3149 0443 00000000 		.4byte	0
 3150 0447 00000000 		.4byte	0
 3151              	.LLST35:
 3152 044b 00000000 		.4byte	.LVL70
 3153 044f 07000000 		.4byte	.LVL71-1
 3154 0453 0100     		.2byte	0x1
 3155 0455 50       		.byte	0x50
 3156 0456 07000000 		.4byte	.LVL71-1
 3157 045a 16000000 		.4byte	.LVL72
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 81


 3158 045e 0100     		.2byte	0x1
 3159 0460 54       		.byte	0x54
 3160 0461 16000000 		.4byte	.LVL72
 3161 0465 24000000 		.4byte	.LFE32
 3162 0469 0400     		.2byte	0x4
 3163 046b F3       		.byte	0xf3
 3164 046c 01       		.uleb128 0x1
 3165 046d 50       		.byte	0x50
 3166 046e 9F       		.byte	0x9f
 3167 046f 00000000 		.4byte	0
 3168 0473 00000000 		.4byte	0
 3169              	.LLST36:
 3170 0477 08000000 		.4byte	.LVL71
 3171 047b 1D000000 		.4byte	.LVL73-1
 3172 047f 0100     		.2byte	0x1
 3173 0481 50       		.byte	0x50
 3174 0482 00000000 		.4byte	0
 3175 0486 00000000 		.4byte	0
 3176              	.LLST37:
 3177 048a 00000000 		.4byte	.LVL74
 3178 048e 07000000 		.4byte	.LVL75-1
 3179 0492 0100     		.2byte	0x1
 3180 0494 50       		.byte	0x50
 3181 0495 07000000 		.4byte	.LVL75-1
 3182 0499 16000000 		.4byte	.LVL76
 3183 049d 0100     		.2byte	0x1
 3184 049f 54       		.byte	0x54
 3185 04a0 16000000 		.4byte	.LVL76
 3186 04a4 24000000 		.4byte	.LFE33
 3187 04a8 0400     		.2byte	0x4
 3188 04aa F3       		.byte	0xf3
 3189 04ab 01       		.uleb128 0x1
 3190 04ac 50       		.byte	0x50
 3191 04ad 9F       		.byte	0x9f
 3192 04ae 00000000 		.4byte	0
 3193 04b2 00000000 		.4byte	0
 3194              	.LLST38:
 3195 04b6 08000000 		.4byte	.LVL75
 3196 04ba 1D000000 		.4byte	.LVL77-1
 3197 04be 0100     		.2byte	0x1
 3198 04c0 50       		.byte	0x50
 3199 04c1 00000000 		.4byte	0
 3200 04c5 00000000 		.4byte	0
 3201              	.LLST39:
 3202 04c9 00000000 		.4byte	.LVL78
 3203 04cd 09000000 		.4byte	.LVL79-1
 3204 04d1 0100     		.2byte	0x1
 3205 04d3 50       		.byte	0x50
 3206 04d4 09000000 		.4byte	.LVL79-1
 3207 04d8 0C000000 		.4byte	.LVL80
 3208 04dc 0100     		.2byte	0x1
 3209 04de 55       		.byte	0x55
 3210 04df 0C000000 		.4byte	.LVL80
 3211 04e3 1C000000 		.4byte	.LFE34
 3212 04e7 0400     		.2byte	0x4
 3213 04e9 F3       		.byte	0xf3
 3214 04ea 01       		.uleb128 0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 82


 3215 04eb 50       		.byte	0x50
 3216 04ec 9F       		.byte	0x9f
 3217 04ed 00000000 		.4byte	0
 3218 04f1 00000000 		.4byte	0
 3219              	.LLST40:
 3220 04f5 00000000 		.4byte	.LVL78
 3221 04f9 09000000 		.4byte	.LVL79-1
 3222 04fd 0100     		.2byte	0x1
 3223 04ff 51       		.byte	0x51
 3224 0500 09000000 		.4byte	.LVL79-1
 3225 0504 14000000 		.4byte	.LVL82
 3226 0508 0100     		.2byte	0x1
 3227 050a 54       		.byte	0x54
 3228 050b 14000000 		.4byte	.LVL82
 3229 050f 1C000000 		.4byte	.LFE34
 3230 0513 0400     		.2byte	0x4
 3231 0515 F3       		.byte	0xf3
 3232 0516 01       		.uleb128 0x1
 3233 0517 51       		.byte	0x51
 3234 0518 9F       		.byte	0x9f
 3235 0519 00000000 		.4byte	0
 3236 051d 00000000 		.4byte	0
 3237              	.LLST41:
 3238 0521 0A000000 		.4byte	.LVL79
 3239 0525 13000000 		.4byte	.LVL81-1
 3240 0529 0100     		.2byte	0x1
 3241 052b 50       		.byte	0x50
 3242 052c 00000000 		.4byte	0
 3243 0530 00000000 		.4byte	0
 3244              	.LLST42:
 3245 0534 06000000 		.4byte	.LVL83
 3246 0538 13000000 		.4byte	.LVL84-1
 3247 053c 0100     		.2byte	0x1
 3248 053e 50       		.byte	0x50
 3249 053f 00000000 		.4byte	0
 3250 0543 00000000 		.4byte	0
 3251              		.section	.debug_aranges,"",%progbits
 3252 0000 54010000 		.4byte	0x154
 3253 0004 0200     		.2byte	0x2
 3254 0006 00000000 		.4byte	.Ldebug_info0
 3255 000a 04       		.byte	0x4
 3256 000b 00       		.byte	0
 3257 000c 0000     		.2byte	0
 3258 000e 0000     		.2byte	0
 3259 0010 00000000 		.4byte	.LFB4
 3260 0014 1C000000 		.4byte	.LFE4-.LFB4
 3261 0018 00000000 		.4byte	.LFB5
 3262 001c 28000000 		.4byte	.LFE5-.LFB5
 3263 0020 00000000 		.4byte	.LFB6
 3264 0024 28000000 		.4byte	.LFE6-.LFB6
 3265 0028 00000000 		.4byte	.LFB7
 3266 002c 28000000 		.4byte	.LFE7-.LFB7
 3267 0030 00000000 		.4byte	.LFB8
 3268 0034 2C000000 		.4byte	.LFE8-.LFB8
 3269 0038 00000000 		.4byte	.LFB9
 3270 003c 10000000 		.4byte	.LFE9-.LFB9
 3271 0040 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 83


 3272 0044 28000000 		.4byte	.LFE10-.LFB10
 3273 0048 00000000 		.4byte	.LFB11
 3274 004c 28000000 		.4byte	.LFE11-.LFB11
 3275 0050 00000000 		.4byte	.LFB12
 3276 0054 2C000000 		.4byte	.LFE12-.LFB12
 3277 0058 00000000 		.4byte	.LFB13
 3278 005c 28000000 		.4byte	.LFE13-.LFB13
 3279 0060 00000000 		.4byte	.LFB14
 3280 0064 10000000 		.4byte	.LFE14-.LFB14
 3281 0068 00000000 		.4byte	.LFB15
 3282 006c 10000000 		.4byte	.LFE15-.LFB15
 3283 0070 00000000 		.4byte	.LFB16
 3284 0074 28000000 		.4byte	.LFE16-.LFB16
 3285 0078 00000000 		.4byte	.LFB17
 3286 007c 10000000 		.4byte	.LFE17-.LFB17
 3287 0080 00000000 		.4byte	.LFB18
 3288 0084 10000000 		.4byte	.LFE18-.LFB18
 3289 0088 00000000 		.4byte	.LFB19
 3290 008c 24000000 		.4byte	.LFE19-.LFB19
 3291 0090 00000000 		.4byte	.LFB20
 3292 0094 10000000 		.4byte	.LFE20-.LFB20
 3293 0098 00000000 		.4byte	.LFB21
 3294 009c 10000000 		.4byte	.LFE21-.LFB21
 3295 00a0 00000000 		.4byte	.LFB22
 3296 00a4 28000000 		.4byte	.LFE22-.LFB22
 3297 00a8 00000000 		.4byte	.LFB23
 3298 00ac 10000000 		.4byte	.LFE23-.LFB23
 3299 00b0 00000000 		.4byte	.LFB24
 3300 00b4 10000000 		.4byte	.LFE24-.LFB24
 3301 00b8 00000000 		.4byte	.LFB25
 3302 00bc 10000000 		.4byte	.LFE25-.LFB25
 3303 00c0 00000000 		.4byte	.LFB26
 3304 00c4 10000000 		.4byte	.LFE26-.LFB26
 3305 00c8 00000000 		.4byte	.LFB27
 3306 00cc 10000000 		.4byte	.LFE27-.LFB27
 3307 00d0 00000000 		.4byte	.LFB28
 3308 00d4 10000000 		.4byte	.LFE28-.LFB28
 3309 00d8 00000000 		.4byte	.LFB29
 3310 00dc 24000000 		.4byte	.LFE29-.LFB29
 3311 00e0 00000000 		.4byte	.LFB30
 3312 00e4 24000000 		.4byte	.LFE30-.LFB30
 3313 00e8 00000000 		.4byte	.LFB31
 3314 00ec 28000000 		.4byte	.LFE31-.LFB31
 3315 00f0 00000000 		.4byte	.LFB32
 3316 00f4 24000000 		.4byte	.LFE32-.LFB32
 3317 00f8 00000000 		.4byte	.LFB33
 3318 00fc 24000000 		.4byte	.LFE33-.LFB33
 3319 0100 00000000 		.4byte	.LFB34
 3320 0104 1C000000 		.4byte	.LFE34-.LFB34
 3321 0108 00000000 		.4byte	.LFB2
 3322 010c 24000000 		.4byte	.LFE2-.LFB2
 3323 0110 00000000 		.4byte	.LFB35
 3324 0114 14000000 		.4byte	.LFE35-.LFB35
 3325 0118 00000000 		.4byte	.LFB36
 3326 011c 0C000000 		.4byte	.LFE36-.LFB36
 3327 0120 00000000 		.4byte	.LFB1
 3328 0124 44000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 84


 3329 0128 00000000 		.4byte	.LFB3
 3330 012c 20000000 		.4byte	.LFE3-.LFB3
 3331 0130 00000000 		.4byte	.LFB37
 3332 0134 0C000000 		.4byte	.LFE37-.LFB37
 3333 0138 00000000 		.4byte	.LFB38
 3334 013c 0C000000 		.4byte	.LFE38-.LFB38
 3335 0140 00000000 		.4byte	.LFB39
 3336 0144 0C000000 		.4byte	.LFE39-.LFB39
 3337 0148 00000000 		.4byte	.LFB40
 3338 014c 0C000000 		.4byte	.LFE40-.LFB40
 3339 0150 00000000 		.4byte	0
 3340 0154 00000000 		.4byte	0
 3341              		.section	.debug_ranges,"",%progbits
 3342              	.Ldebug_ranges0:
 3343 0000 00000000 		.4byte	.LFB4
 3344 0004 1C000000 		.4byte	.LFE4
 3345 0008 00000000 		.4byte	.LFB5
 3346 000c 28000000 		.4byte	.LFE5
 3347 0010 00000000 		.4byte	.LFB6
 3348 0014 28000000 		.4byte	.LFE6
 3349 0018 00000000 		.4byte	.LFB7
 3350 001c 28000000 		.4byte	.LFE7
 3351 0020 00000000 		.4byte	.LFB8
 3352 0024 2C000000 		.4byte	.LFE8
 3353 0028 00000000 		.4byte	.LFB9
 3354 002c 10000000 		.4byte	.LFE9
 3355 0030 00000000 		.4byte	.LFB10
 3356 0034 28000000 		.4byte	.LFE10
 3357 0038 00000000 		.4byte	.LFB11
 3358 003c 28000000 		.4byte	.LFE11
 3359 0040 00000000 		.4byte	.LFB12
 3360 0044 2C000000 		.4byte	.LFE12
 3361 0048 00000000 		.4byte	.LFB13
 3362 004c 28000000 		.4byte	.LFE13
 3363 0050 00000000 		.4byte	.LFB14
 3364 0054 10000000 		.4byte	.LFE14
 3365 0058 00000000 		.4byte	.LFB15
 3366 005c 10000000 		.4byte	.LFE15
 3367 0060 00000000 		.4byte	.LFB16
 3368 0064 28000000 		.4byte	.LFE16
 3369 0068 00000000 		.4byte	.LFB17
 3370 006c 10000000 		.4byte	.LFE17
 3371 0070 00000000 		.4byte	.LFB18
 3372 0074 10000000 		.4byte	.LFE18
 3373 0078 00000000 		.4byte	.LFB19
 3374 007c 24000000 		.4byte	.LFE19
 3375 0080 00000000 		.4byte	.LFB20
 3376 0084 10000000 		.4byte	.LFE20
 3377 0088 00000000 		.4byte	.LFB21
 3378 008c 10000000 		.4byte	.LFE21
 3379 0090 00000000 		.4byte	.LFB22
 3380 0094 28000000 		.4byte	.LFE22
 3381 0098 00000000 		.4byte	.LFB23
 3382 009c 10000000 		.4byte	.LFE23
 3383 00a0 00000000 		.4byte	.LFB24
 3384 00a4 10000000 		.4byte	.LFE24
 3385 00a8 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 85


 3386 00ac 10000000 		.4byte	.LFE25
 3387 00b0 00000000 		.4byte	.LFB26
 3388 00b4 10000000 		.4byte	.LFE26
 3389 00b8 00000000 		.4byte	.LFB27
 3390 00bc 10000000 		.4byte	.LFE27
 3391 00c0 00000000 		.4byte	.LFB28
 3392 00c4 10000000 		.4byte	.LFE28
 3393 00c8 00000000 		.4byte	.LFB29
 3394 00cc 24000000 		.4byte	.LFE29
 3395 00d0 00000000 		.4byte	.LFB30
 3396 00d4 24000000 		.4byte	.LFE30
 3397 00d8 00000000 		.4byte	.LFB31
 3398 00dc 28000000 		.4byte	.LFE31
 3399 00e0 00000000 		.4byte	.LFB32
 3400 00e4 24000000 		.4byte	.LFE32
 3401 00e8 00000000 		.4byte	.LFB33
 3402 00ec 24000000 		.4byte	.LFE33
 3403 00f0 00000000 		.4byte	.LFB34
 3404 00f4 1C000000 		.4byte	.LFE34
 3405 00f8 00000000 		.4byte	.LFB2
 3406 00fc 24000000 		.4byte	.LFE2
 3407 0100 00000000 		.4byte	.LFB35
 3408 0104 14000000 		.4byte	.LFE35
 3409 0108 00000000 		.4byte	.LFB36
 3410 010c 0C000000 		.4byte	.LFE36
 3411 0110 00000000 		.4byte	.LFB1
 3412 0114 44000000 		.4byte	.LFE1
 3413 0118 00000000 		.4byte	.LFB3
 3414 011c 20000000 		.4byte	.LFE3
 3415 0120 00000000 		.4byte	.LFB37
 3416 0124 0C000000 		.4byte	.LFE37
 3417 0128 00000000 		.4byte	.LFB38
 3418 012c 0C000000 		.4byte	.LFE38
 3419 0130 00000000 		.4byte	.LFB39
 3420 0134 0C000000 		.4byte	.LFE39
 3421 0138 00000000 		.4byte	.LFB40
 3422 013c 0C000000 		.4byte	.LFE40
 3423 0140 00000000 		.4byte	0
 3424 0144 00000000 		.4byte	0
 3425              		.section	.debug_line,"",%progbits
 3426              	.Ldebug_line0:
 3427 0000 7A030000 		.section	.debug_str,"MS",%progbits,1
 3427      02004D00 
 3427      00000201 
 3427      FB0E0D00 
 3427      01010101 
 3428              	.LASF37:
 3429 0000 636F756E 		.ascii	"count\000"
 3429      7400
 3430              	.LASF66:
 3431 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3431      456E6162 
 3431      6C6500
 3432              	.LASF81:
 3433 0011 43794578 		.ascii	"CyExitCriticalSection\000"
 3433      69744372 
 3433      69746963 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 86


 3433      616C5365 
 3433      6374696F 
 3434              	.LASF28:
 3435 0027 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3435      53657450 
 3435      574D5379 
 3435      6E634B69 
 3435      6C6C00
 3436              	.LASF41:
 3437 003a 70657269 		.ascii	"period\000"
 3437      6F6400
 3438              	.LASF76:
 3439 0041 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3439      4320342E 
 3439      382E3420 
 3439      32303134 
 3439      30353236 
 3440 0074 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3440      20726576 
 3440      6973696F 
 3440      6E203231 
 3440      31333538 
 3441 00a7 67202D66 		.ascii	"g -ffunction-sections\000"
 3441      66756E63 
 3441      74696F6E 
 3441      2D736563 
 3441      74696F6E 
 3442              	.LASF7:
 3443 00bd 6C6F6E67 		.ascii	"long long unsigned int\000"
 3443      206C6F6E 
 3443      6720756E 
 3443      7369676E 
 3443      65642069 
 3444              	.LASF58:
 3445 00d4 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3445      53657443 
 3445      61707475 
 3445      72654D6F 
 3445      646500
 3446              	.LASF21:
 3447 00e7 71644D6F 		.ascii	"qdMode\000"
 3447      646500
 3448              	.LASF36:
 3449 00ee 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3449      57726974 
 3449      65436F75 
 3449      6E746572 
 3449      00
 3450              	.LASF42:
 3451 00ff 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3451      52656164 
 3451      436F756E 
 3451      74657200 
 3452              	.LASF6:
 3453 010f 6C6F6E67 		.ascii	"long long int\000"
 3453      206C6F6E 
 3453      6720696E 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 87


 3453      7400
 3454              	.LASF0:
 3455 011d 7369676E 		.ascii	"signed char\000"
 3455      65642063 
 3455      68617200 
 3456              	.LASF53:
 3457 0129 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3457      57726974 
 3457      65436F6D 
 3457      70617265 
 3457      42756600 
 3458              	.LASF68:
 3459 013d 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3459      53657449 
 3459      6E746572 
 3459      72757074 
 3459      4D6F6465 
 3460              	.LASF74:
 3461 0152 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3461      436C6561 
 3461      72496E74 
 3461      65727275 
 3461      707400
 3462              	.LASF77:
 3463 0165 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 3463      6E657261 
 3463      7465645F 
 3463      536F7572 
 3463      63655C50 
 3464              	.LASF4:
 3465 0184 6C6F6E67 		.ascii	"long int\000"
 3465      20696E74 
 3465      00
 3466              	.LASF9:
 3467 018d 75696E74 		.ascii	"uint8\000"
 3467      3800
 3468              	.LASF12:
 3469 0193 646F7562 		.ascii	"double\000"
 3469      6C6500
 3470              	.LASF55:
 3471 019a 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3471      52656164 
 3471      436F6D70 
 3471      61726542 
 3471      756600
 3472              	.LASF44:
 3473 01ad 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3473      53657443 
 3473      6F6D7061 
 3473      72655377 
 3473      617000
 3474              	.LASF16:
 3475 01c0 50574D5F 		.ascii	"PWM_Stop\000"
 3475      53746F70 
 3475      00
 3476              	.LASF34:
 3477 01c9 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 88


 3477      53657450 
 3477      574D496E 
 3477      76657274 
 3477      00
 3478              	.LASF10:
 3479 01da 75696E74 		.ascii	"uint32\000"
 3479      333200
 3480              	.LASF61:
 3481 01e1 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3481      53657453 
 3481      74617274 
 3481      4D6F6465 
 3481      00
 3482              	.LASF59:
 3483 01f2 74726967 		.ascii	"triggerMode\000"
 3483      6765724D 
 3483      6F646500 
 3484              	.LASF35:
 3485 01fe 6D61736B 		.ascii	"mask\000"
 3485      00
 3486              	.LASF67:
 3487 0203 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3487      52656164 
 3487      53746174 
 3487      757300
 3488              	.LASF33:
 3489 0212 64656164 		.ascii	"deadTime\000"
 3489      54696D65 
 3489      00
 3490              	.LASF62:
 3491 021b 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3491      53657453 
 3491      746F704D 
 3491      6F646500 
 3492              	.LASF78:
 3493 022b 433A5C55 		.ascii	"C:\\Users\\11401393\\Documents\\PSoC Creator\\CE976"
 3493      73657273 
 3493      5C313134 
 3493      30313339 
 3493      335C446F 
 3494 0259 33342050 		.ascii	"34 PSoC 4 Breathing LED\\CE97634 PSoC 4 Breathing L"
 3494      536F4320 
 3494      34204272 
 3494      65617468 
 3494      696E6720 
 3495 028b 45442E63 		.ascii	"ED.cydsn\000"
 3495      7964736E 
 3495      00
 3496              	.LASF8:
 3497 0294 756E7369 		.ascii	"unsigned int\000"
 3497      676E6564 
 3497      20696E74 
 3497      00
 3498              	.LASF32:
 3499 02a1 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3499      53657450 
 3499      574D4465 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 89


 3499      61645469 
 3499      6D6500
 3500              	.LASF65:
 3501 02b4 636F6D6D 		.ascii	"command\000"
 3501      616E6400 
 3502              	.LASF5:
 3503 02bc 6C6F6E67 		.ascii	"long unsigned int\000"
 3503      20756E73 
 3503      69676E65 
 3503      6420696E 
 3503      7400
 3504              	.LASF27:
 3505 02ce 6D6F6465 		.ascii	"modeMask\000"
 3505      4D61736B 
 3505      00
 3506              	.LASF80:
 3507 02d7 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3507      74657243 
 3507      72697469 
 3507      63616C53 
 3507      65637469 
 3508              	.LASF3:
 3509 02ee 73686F72 		.ascii	"short unsigned int\000"
 3509      7420756E 
 3509      7369676E 
 3509      65642069 
 3509      6E7400
 3510              	.LASF22:
 3511 0301 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3511      53657450 
 3511      72657363 
 3511      616C6572 
 3511      00
 3512              	.LASF25:
 3513 0312 6F6E6553 		.ascii	"oneShotEnable\000"
 3513      686F7445 
 3513      6E61626C 
 3513      6500
 3514              	.LASF64:
 3515 0320 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3515      54726967 
 3515      67657243 
 3515      6F6D6D61 
 3515      6E6400
 3516              	.LASF50:
 3517 0333 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3517      57726974 
 3517      65436F6D 
 3517      70617265 
 3517      00
 3518              	.LASF40:
 3519 0344 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3519      57726974 
 3519      65506572 
 3519      696F6400 
 3520              	.LASF14:
 3521 0354 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 90


 3521      3200
 3522              	.LASF79:
 3523 035a 50574D5F 		.ascii	"PWM_initVar\000"
 3523      696E6974 
 3523      56617200 
 3524              	.LASF43:
 3525 0366 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3525      52656164 
 3525      50657269 
 3525      6F6400
 3526              	.LASF15:
 3527 0375 73697A65 		.ascii	"sizetype\000"
 3527      74797065 
 3527      00
 3528              	.LASF29:
 3529 037e 73796E63 		.ascii	"syncKillEnable\000"
 3529      4B696C6C 
 3529      456E6162 
 3529      6C6500
 3530              	.LASF51:
 3531 038d 636F6D70 		.ascii	"compare\000"
 3531      61726500 
 3532              	.LASF24:
 3533 0395 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3533      5365744F 
 3533      6E655368 
 3533      6F7400
 3534              	.LASF48:
 3535 03a4 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3535      52656164 
 3535      50657269 
 3535      6F644275 
 3535      6600
 3536              	.LASF71:
 3537 03b6 50574D5F 		.ascii	"PWM_Start\000"
 3537      53746172 
 3537      7400
 3538              	.LASF11:
 3539 03c0 666C6F61 		.ascii	"float\000"
 3539      7400
 3540              	.LASF23:
 3541 03c6 70726573 		.ascii	"prescaler\000"
 3541      63616C65 
 3541      7200
 3542              	.LASF56:
 3543 03d0 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3543      52656164 
 3543      43617074 
 3543      75726500 
 3544              	.LASF49:
 3545 03e0 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3545      53657450 
 3545      6572696F 
 3545      64537761 
 3545      7000
 3546              	.LASF1:
 3547 03f2 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 91


 3547      676E6564 
 3547      20636861 
 3547      7200
 3548              	.LASF70:
 3549 0400 50574D5F 		.ascii	"PWM_Init\000"
 3549      496E6974 
 3549      00
 3550              	.LASF31:
 3551 0409 73746F70 		.ascii	"stopOnKillEnable\000"
 3551      4F6E4B69 
 3551      6C6C456E 
 3551      61626C65 
 3551      00
 3552              	.LASF26:
 3553 041a 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3553      53657450 
 3553      574D4D6F 
 3553      646500
 3554              	.LASF2:
 3555 0429 73686F72 		.ascii	"short int\000"
 3555      7420696E 
 3555      7400
 3556              	.LASF72:
 3557 0433 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3557      47657449 
 3557      6E746572 
 3557      72757074 
 3557      536F7572 
 3558              	.LASF69:
 3559 0450 696E7465 		.ascii	"interruptMask\000"
 3559      72727570 
 3559      744D6173 
 3559      6B00
 3560              	.LASF46:
 3561 045e 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3561      57726974 
 3561      65506572 
 3561      696F6442 
 3561      756600
 3562              	.LASF19:
 3563 0471 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3563      53657451 
 3563      444D6F64 
 3563      6500
 3564              	.LASF13:
 3565 047f 63686172 		.ascii	"char\000"
 3565      00
 3566              	.LASF20:
 3567 0484 6D6F6465 		.ascii	"mode\000"
 3567      00
 3568              	.LASF75:
 3569 0489 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3569      53657449 
 3569      6E746572 
 3569      72757074 
 3569      00
 3570              	.LASF60:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 92


 3571 049a 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3571      53657452 
 3571      656C6F61 
 3571      644D6F64 
 3571      6500
 3572              	.LASF39:
 3573 04ac 636F756E 		.ascii	"counterMode\000"
 3573      7465724D 
 3573      6F646500 
 3574              	.LASF54:
 3575 04b8 636F6D70 		.ascii	"compareBuf\000"
 3575      61726542 
 3575      756600
 3576              	.LASF47:
 3577 04c3 70657269 		.ascii	"periodBuf\000"
 3577      6F644275 
 3577      6600
 3578              	.LASF57:
 3579 04cd 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3579      52656164 
 3579      43617074 
 3579      75726542 
 3579      756600
 3580              	.LASF18:
 3581 04e0 656E6162 		.ascii	"enableInterrupts\000"
 3581      6C65496E 
 3581      74657272 
 3581      75707473 
 3581      00
 3582              	.LASF63:
 3583 04f1 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3583      53657443 
 3583      6F756E74 
 3583      4D6F6465 
 3583      00
 3584              	.LASF17:
 3585 0502 50574D5F 		.ascii	"PWM_SetMode\000"
 3585      5365744D 
 3585      6F646500 
 3586              	.LASF30:
 3587 050e 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3587      53657450 
 3587      574D5374 
 3587      6F704F6E 
 3587      4B696C6C 
 3588              	.LASF45:
 3589 0523 73776170 		.ascii	"swapEnable\000"
 3589      456E6162 
 3589      6C6500
 3590              	.LASF73:
 3591 052e 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3591      47657449 
 3591      6E746572 
 3591      72757074 
 3591      536F7572 
 3592              	.LASF38:
 3593 0545 50574D5F 		.ascii	"PWM_SetCounterMode\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccoc06OP.s 			page 93


 3593      53657443 
 3593      6F756E74 
 3593      65724D6F 
 3593      646500
 3594              	.LASF52:
 3595 0558 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3595      52656164 
 3595      436F6D70 
 3595      61726500 
 3596              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB34:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_20 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     220u, 220u, 220u, 220u, 220u, 220u, 220u, 220u, 220u, 220u, 220u, 220u, 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button1__BTN */
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Button3__BTN */
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Button4__BTN */
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     4u, /* Button5__BTN */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* Button6__BTN */
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6u, /* Button7__BTN */
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     7u, /* Button8__BTN */
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     8u, /* Button9__BTN */
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     9u, /* Button10__BTN */
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     10u, /* Button11__BTN */
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     11u, /* Button12__BTN */
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button3__BTN */
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button4__BTN */
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button5__BTN */
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button6__BTN */
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button7__BTN */
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button8__BTN */
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button9__BTN */
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button10__BTN */
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button11__BTN */
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button12__BTN */
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 4


 147:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 159 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 70B5     		push	{r4, r5, r6, lr}
  30              		.cfi_def_cfa_offset 16
  31              		.cfi_offset 4, -16
  32              		.cfi_offset 5, -12
  33              		.cfi_offset 6, -8
  34              		.cfi_offset 14, -4
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  35              		.loc 1 162 0
  36 0002 0A4B     		ldr	r3, .L2
  37 0004 1C5C     		ldrb	r4, [r3, r0]
  38              	.LVL1:
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  39              		.loc 1 176 0
  40 0006 4200     		lsl	r2, r0, #1
  41 0008 094B     		ldr	r3, .L2+4
  42              	.LVL2:
  43 000a D15A     		ldrh	r1, [r2, r3]
  44 000c 094B     		ldr	r3, .L2+8
  45 000e D152     		strh	r1, [r2, r3]
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  46              		.loc 1 177 0
  47 0010 1E18     		add	r6, r3, r0
  48 0012 0025     		mov	r5, #0
  49 0014 3576     		strb	r5, [r6, #24]
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  50              		.loc 1 178 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 5


  51 0016 1E1C     		mov	r6, r3
  52 0018 2436     		add	r6, r6, #36
  53 001a 3554     		strb	r5, [r6, r0]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  54              		.loc 1 180 0
  55 001c 0648     		ldr	r0, .L2+12
  56              	.LVL3:
  57 001e 005D     		ldrb	r0, [r0, r4]
  58 0020 3033     		add	r3, r3, #48
  59 0022 1855     		strb	r0, [r3, r4]
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  60              		.loc 1 195 0
  61 0024 054B     		ldr	r3, .L2+16
  62 0026 D152     		strh	r1, [r2, r3]
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  63              		.loc 1 207 0
  64              		@ sp needed
  65              	.LVL4:
  66 0028 70BD     		pop	{r4, r5, r6, pc}
  67              	.L3:
  68 002a C046     		.align	2
  69              	.L2:
  70 002c 00000000 		.word	CapSense_widgetNumber
  71 0030 00000000 		.word	CapSense_sensorRaw
  72 0034 00000000 		.word	.LANCHOR0
  73 0038 00000000 		.word	.LANCHOR1
  74 003c 00000000 		.word	CapSense_rawFilterData1
  75              		.cfi_endproc
  76              	.LFE34:
  77              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  78              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 6


  79              		.align	2
  80              		.global	CapSense_InitializeSensorBaseline
  81              		.code	16
  82              		.thumb_func
  83              		.type	CapSense_InitializeSensorBaseline, %function
  84              	CapSense_InitializeSensorBaseline:
  85              	.LFB35:
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  86              		.loc 1 235 0
  87              		.cfi_startproc
  88              	.LVL5:
  89 0000 10B5     		push	{r4, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
  93 0002 041C     		mov	r4, r0
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  94              		.loc 1 237 0
  95 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  96              	.LVL6:
  97              	.L5:
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  98              		.loc 1 238 0 discriminator 1
  99 0008 FFF7FEFF 		bl	CapSense_IsBusy
 100              	.LVL7:
 101 000c 0028     		cmp	r0, #0
 102 000e FBD1     		bne	.L5
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 7


 241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 103              		.loc 1 244 0
 104 0010 201C     		mov	r0, r4
 105 0012 FFF7FEFF 		bl	CapSense_BaseInit
 106              	.LVL8:
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 107              		.loc 1 245 0
 108              		@ sp needed
 109              	.LVL9:
 110 0016 10BD     		pop	{r4, pc}
 111              		.cfi_endproc
 112              	.LFE35:
 113              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 114              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 115              		.align	2
 116              		.global	CapSense_InitializeAllBaselines
 117              		.code	16
 118              		.thumb_func
 119              		.type	CapSense_InitializeAllBaselines, %function
 120              	CapSense_InitializeAllBaselines:
 121              	.LFB36:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 122              		.loc 1 272 0
 123              		.cfi_startproc
 124 0000 10B5     		push	{r4, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 8


 128              	.LVL10:
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 129              		.loc 1 275 0
 130 0002 0024     		mov	r4, #0
 131 0004 03E0     		b	.L8
 132              	.LVL11:
 133              	.L9:
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 134              		.loc 1 277 0 discriminator 2
 135 0006 201C     		mov	r0, r4
 136 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 137              	.LVL12:
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 138              		.loc 1 275 0 discriminator 2
 139 000c 0134     		add	r4, r4, #1
 140              	.LVL13:
 141              	.L8:
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 142              		.loc 1 275 0 is_stmt 0 discriminator 1
 143 000e 0B2C     		cmp	r4, #11
 144 0010 F9D9     		bls	.L9
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 145              		.loc 1 279 0 is_stmt 1
 146              		@ sp needed
 147              	.LVL14:
 148 0012 10BD     		pop	{r4, pc}
 149              		.cfi_endproc
 150              	.LFE36:
 151              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 152              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 153              		.align	2
 154              		.global	CapSense_InitializeEnabledBaselines
 155              		.code	16
 156              		.thumb_func
 157              		.type	CapSense_InitializeEnabledBaselines, %function
 158              	CapSense_InitializeEnabledBaselines:
 159              	.LFB37:
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 9


 296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 160              		.loc 1 307 0
 161              		.cfi_startproc
 162 0000 38B5     		push	{r3, r4, r5, lr}
 163              		.cfi_def_cfa_offset 16
 164              		.cfi_offset 3, -16
 165              		.cfi_offset 4, -12
 166              		.cfi_offset 5, -8
 167              		.cfi_offset 14, -4
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 168              		.loc 1 311 0
 169 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 170              	.LVL15:
 171              	.L11:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 172              		.loc 1 312 0 discriminator 1
 173 0006 FFF7FEFF 		bl	CapSense_IsBusy
 174              	.LVL16:
 175 000a 0028     		cmp	r0, #0
 176 000c FBD1     		bne	.L11
 177 000e 0024     		mov	r4, #0
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 178              		.loc 1 319 0
 179 0010 074D     		ldr	r5, .L16
 180 0012 09E0     		b	.L12
 181              	.LVL17:
 182              	.L14:
 183 0014 281C     		mov	r0, r5
 184 0016 211C     		mov	r1, r4
 185 0018 FFF7FEFF 		bl	CapSense_GetBitValue
 186              	.LVL18:
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 187              		.loc 1 322 0
 188 001c 0028     		cmp	r0, #0
 189 001e 02D0     		beq	.L13
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 10


 323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 190              		.loc 1 325 0
 191 0020 201C     		mov	r0, r4
 192              	.LVL19:
 193 0022 FFF7FEFF 		bl	CapSense_BaseInit
 194              	.LVL20:
 195              	.L13:
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 196              		.loc 1 317 0
 197 0026 0134     		add	r4, r4, #1
 198              	.LVL21:
 199              	.L12:
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 200              		.loc 1 317 0 is_stmt 0 discriminator 1
 201 0028 0B2C     		cmp	r4, #11
 202 002a F3D9     		bls	.L14
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 203              		.loc 1 328 0 is_stmt 1
 204              		@ sp needed
 205              	.LVL22:
 206 002c 38BD     		pop	{r3, r4, r5, pc}
 207              	.L17:
 208 002e C046     		.align	2
 209              	.L16:
 210 0030 00000000 		.word	CapSense_sensorEnableMask
 211              		.cfi_endproc
 212              	.LFE37:
 213              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 214              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 215              		.align	2
 216              		.global	CapSense_GetBaselineData
 217              		.code	16
 218              		.thumb_func
 219              		.type	CapSense_GetBaselineData, %function
 220              	CapSense_GetBaselineData:
 221              	.LFB42:
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 11


 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 12


 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 13


 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 14


 517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 15


 574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 16


 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 17


 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 222              		.loc 1 711 0
 223              		.cfi_startproc
 224              	.LVL23:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 225              		.loc 1 712 0
 226 0000 4000     		lsl	r0, r0, #1
 227              	.LVL24:
 228 0002 014B     		ldr	r3, .L19
 229 0004 185A     		ldrh	r0, [r3, r0]
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 230              		.loc 1 713 0
 231              		@ sp needed
 232 0006 7047     		bx	lr
 233              	.L20:
 234              		.align	2
 235              	.L19:
 236 0008 00000000 		.word	.LANCHOR0
 237              		.cfi_endproc
 238              	.LFE42:
 239              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 240              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 241              		.align	2
 242              		.global	CapSense_SetBaselineData
 243              		.code	16
 244              		.thumb_func
 245              		.type	CapSense_SetBaselineData, %function
 246              	CapSense_SetBaselineData:
 247              	.LFB43:
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 18


 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 248              		.loc 1 738 0
 249              		.cfi_startproc
 250              	.LVL25:
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 251              		.loc 1 739 0
 252 0000 4000     		lsl	r0, r0, #1
 253              	.LVL26:
 254 0002 014B     		ldr	r3, .L22
 255 0004 C152     		strh	r1, [r0, r3]
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 256              		.loc 1 740 0
 257              		@ sp needed
 258 0006 7047     		bx	lr
 259              	.L23:
 260              		.align	2
 261              	.L22:
 262 0008 00000000 		.word	.LANCHOR0
 263              		.cfi_endproc
 264              	.LFE43:
 265              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 266              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 267              		.align	2
 268              		.global	CapSense_GetDiffCountData
 269              		.code	16
 270              		.thumb_func
 271              		.type	CapSense_GetDiffCountData, %function
 272              	CapSense_GetDiffCountData:
 273              	.LFB44:
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 19


 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 274              		.loc 1 765 0
 275              		.cfi_startproc
 276              	.LVL27:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 277              		.loc 1 766 0
 278 0000 014B     		ldr	r3, .L25
 279 0002 2433     		add	r3, r3, #36
 280 0004 185C     		ldrb	r0, [r3, r0]
 281              	.LVL28:
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 282              		.loc 1 767 0
 283              		@ sp needed
 284 0006 7047     		bx	lr
 285              	.L26:
 286              		.align	2
 287              	.L25:
 288 0008 00000000 		.word	.LANCHOR0
 289              		.cfi_endproc
 290              	.LFE44:
 291              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 292              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 293              		.align	2
 294              		.global	CapSense_SetDiffCountData
 295              		.code	16
 296              		.thumb_func
 297              		.type	CapSense_SetDiffCountData, %function
 298              	CapSense_SetDiffCountData:
 299              	.LFB45:
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 20


 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 300              		.loc 1 792 0
 301              		.cfi_startproc
 302              	.LVL29:
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 303              		.loc 1 793 0
 304 0000 014B     		ldr	r3, .L28
 305 0002 2433     		add	r3, r3, #36
 306 0004 1954     		strb	r1, [r3, r0]
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 307              		.loc 1 794 0
 308              		@ sp needed
 309 0006 7047     		bx	lr
 310              	.L29:
 311              		.align	2
 312              	.L28:
 313 0008 00000000 		.word	.LANCHOR0
 314              		.cfi_endproc
 315              	.LFE45:
 316              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 317              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 318              		.align	2
 319              		.global	CapSense_GetFingerThreshold
 320              		.code	16
 321              		.thumb_func
 322              		.type	CapSense_GetFingerThreshold, %function
 323              	CapSense_GetFingerThreshold:
 324              	.LFB46:
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 21


 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 325              		.loc 1 819 0
 326              		.cfi_startproc
 327              	.LVL30:
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 328              		.loc 1 820 0
 329 0000 014B     		ldr	r3, .L31
 330 0002 1818     		add	r0, r3, r0
 331              	.LVL31:
 332 0004 007B     		ldrb	r0, [r0, #12]
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 333              		.loc 1 821 0
 334              		@ sp needed
 335 0006 7047     		bx	lr
 336              	.L32:
 337              		.align	2
 338              	.L31:
 339 0008 00000000 		.word	.LANCHOR1
 340              		.cfi_endproc
 341              	.LFE46:
 342              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 343              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 344              		.align	2
 345              		.global	CapSense_GetNoiseThreshold
 346              		.code	16
 347              		.thumb_func
 348              		.type	CapSense_GetNoiseThreshold, %function
 349              	CapSense_GetNoiseThreshold:
 350              	.LFB47:
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 22


 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 351              		.loc 1 846 0
 352              		.cfi_startproc
 353              	.LVL32:
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 354              		.loc 1 847 0
 355 0000 014B     		ldr	r3, .L34
 356 0002 185C     		ldrb	r0, [r3, r0]
 357              	.LVL33:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 358              		.loc 1 848 0
 359              		@ sp needed
 360 0004 7047     		bx	lr
 361              	.L35:
 362 0006 C046     		.align	2
 363              	.L34:
 364 0008 00000000 		.word	CapSense_noiseThreshold
 365              		.cfi_endproc
 366              	.LFE47:
 367              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 368              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 369              		.align	2
 370              		.global	CapSense_GetFingerHysteresis
 371              		.code	16
 372              		.thumb_func
 373              		.type	CapSense_GetFingerHysteresis, %function
 374              	CapSense_GetFingerHysteresis:
 375              	.LFB48:
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 376              		.loc 1 874 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 23


 377              		.cfi_startproc
 378              	.LVL34:
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 379              		.loc 1 875 0
 380 0000 014B     		ldr	r3, .L37
 381 0002 185C     		ldrb	r0, [r3, r0]
 382              	.LVL35:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 383              		.loc 1 876 0
 384              		@ sp needed
 385 0004 7047     		bx	lr
 386              	.L38:
 387 0006 C046     		.align	2
 388              	.L37:
 389 0008 00000000 		.word	CapSense_hysteresis
 390              		.cfi_endproc
 391              	.LFE48:
 392              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 393              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 394              		.align	2
 395              		.global	CapSense_GetNegativeNoiseThreshold
 396              		.code	16
 397              		.thumb_func
 398              		.type	CapSense_GetNegativeNoiseThreshold, %function
 399              	CapSense_GetNegativeNoiseThreshold:
 400              	.LFB49:
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 401              		.loc 1 902 0
 402              		.cfi_startproc
 403              	.LVL36:
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 24


 404              		.loc 1 904 0
 405 0000 014B     		ldr	r3, .L40
 406 0002 185C     		ldrb	r0, [r3, r0]
 407              	.LVL37:
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 408              		.loc 1 908 0
 409              		@ sp needed
 410 0004 7047     		bx	lr
 411              	.L41:
 412 0006 C046     		.align	2
 413              	.L40:
 414 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 415              		.cfi_endproc
 416              	.LFE49:
 417              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 418              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 419              		.align	2
 420              		.global	CapSense_SetFingerThreshold
 421              		.code	16
 422              		.thumb_func
 423              		.type	CapSense_SetFingerThreshold, %function
 424              	CapSense_SetFingerThreshold:
 425              	.LFB50:
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 426              		.loc 1 935 0
 427              		.cfi_startproc
 428              	.LVL38:
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 25


 429              		.loc 1 936 0
 430 0000 014B     		ldr	r3, .L43
 431 0002 1818     		add	r0, r3, r0
 432              	.LVL39:
 433 0004 0173     		strb	r1, [r0, #12]
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 434              		.loc 1 937 0
 435              		@ sp needed
 436 0006 7047     		bx	lr
 437              	.L44:
 438              		.align	2
 439              	.L43:
 440 0008 00000000 		.word	.LANCHOR1
 441              		.cfi_endproc
 442              	.LFE50:
 443              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 444              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 445              		.align	2
 446              		.global	CapSense_SetNoiseThreshold
 447              		.code	16
 448              		.thumb_func
 449              		.type	CapSense_SetNoiseThreshold, %function
 450              	CapSense_SetNoiseThreshold:
 451              	.LFB51:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 452              		.loc 1 963 0
 453              		.cfi_startproc
 454              	.LVL40:
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 455              		.loc 1 964 0
 456 0000 014B     		ldr	r3, .L46
 457 0002 1954     		strb	r1, [r3, r0]
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 26


 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 458              		.loc 1 965 0
 459              		@ sp needed
 460 0004 7047     		bx	lr
 461              	.L47:
 462 0006 C046     		.align	2
 463              	.L46:
 464 0008 00000000 		.word	CapSense_noiseThreshold
 465              		.cfi_endproc
 466              	.LFE51:
 467              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 468              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 469              		.align	2
 470              		.global	CapSense_SetFingerHysteresis
 471              		.code	16
 472              		.thumb_func
 473              		.type	CapSense_SetFingerHysteresis, %function
 474              	CapSense_SetFingerHysteresis:
 475              	.LFB52:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 476              		.loc 1 991 0
 477              		.cfi_startproc
 478              	.LVL41:
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 479              		.loc 1 992 0
 480 0000 014B     		ldr	r3, .L49
 481 0002 1954     		strb	r1, [r3, r0]
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 482              		.loc 1 993 0
 483              		@ sp needed
 484 0004 7047     		bx	lr
 485              	.L50:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 27


 486 0006 C046     		.align	2
 487              	.L49:
 488 0008 00000000 		.word	CapSense_hysteresis
 489              		.cfi_endproc
 490              	.LFE52:
 491              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 492              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 493              		.align	2
 494              		.global	CapSense_SetNegativeNoiseThreshold
 495              		.code	16
 496              		.thumb_func
 497              		.type	CapSense_SetNegativeNoiseThreshold, %function
 498              	CapSense_SetNegativeNoiseThreshold:
 499              	.LFB53:
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 500              		.loc 1 1020 0
 501              		.cfi_startproc
 502              	.LVL42:
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 503              		.loc 1 1021 0
 504 0000 014B     		ldr	r3, .L52
 505 0002 1954     		strb	r1, [r3, r0]
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 506              		.loc 1 1022 0
 507              		@ sp needed
 508 0004 7047     		bx	lr
 509              	.L53:
 510 0006 C046     		.align	2
 511              	.L52:
 512 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 513              		.cfi_endproc
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 28


 514              	.LFE53:
 515              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 516              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 517              		.align	2
 518              		.global	CapSense_SetDebounce
 519              		.code	16
 520              		.thumb_func
 521              		.type	CapSense_SetDebounce, %function
 522              	CapSense_SetDebounce:
 523              	.LFB54:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 524              		.loc 1 1048 0
 525              		.cfi_startproc
 526              	.LVL43:
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 527              		.loc 1 1049 0
 528 0000 014B     		ldr	r3, .L55
 529 0002 1954     		strb	r1, [r3, r0]
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 530              		.loc 1 1050 0
 531              		@ sp needed
 532 0004 7047     		bx	lr
 533              	.L56:
 534 0006 C046     		.align	2
 535              	.L55:
 536 0008 00000000 		.word	.LANCHOR1
 537              		.cfi_endproc
 538              	.LFE54:
 539              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 540              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 541              		.align	2
 542              		.global	CapSense_SetLowBaselineReset
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 29


 543              		.code	16
 544              		.thumb_func
 545              		.type	CapSense_SetLowBaselineReset, %function
 546              	CapSense_SetLowBaselineReset:
 547              	.LFB55:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 548              		.loc 1 1076 0
 549              		.cfi_startproc
 550              	.LVL44:
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 551              		.loc 1 1077 0
 552 0000 014B     		ldr	r3, .L58
 553 0002 1818     		add	r0, r3, r0
 554              	.LVL45:
 555 0004 0176     		strb	r1, [r0, #24]
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 556              		.loc 1 1078 0
 557              		@ sp needed
 558 0006 7047     		bx	lr
 559              	.L59:
 560              		.align	2
 561              	.L58:
 562 0008 00000000 		.word	.LANCHOR1
 563              		.cfi_endproc
 564              	.LFE55:
 565              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 566              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 567              		.align	2
 568              		.global	CapSense_CheckIsSensorActive
 569              		.code	16
 570              		.thumb_func
 571              		.type	CapSense_CheckIsSensorActive, %function
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 30


 572              	CapSense_CheckIsSensorActive:
 573              	.LFB56:
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 574              		.loc 1 1122 0
 575              		.cfi_startproc
 576              	.LVL46:
 577 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 578              		.cfi_def_cfa_offset 20
 579              		.cfi_offset 4, -20
 580              		.cfi_offset 5, -16
 581              		.cfi_offset 6, -12
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 4746     		mov	r7, r8
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 31


 585 0004 80B4     		push	{r7}
 586              		.cfi_def_cfa_offset 24
 587              		.cfi_offset 8, -24
 588 0006 041C     		mov	r4, r0
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 589              		.loc 1 1132 0
 590 0008 234B     		ldr	r3, .L66
 591 000a 1D5C     		ldrb	r5, [r3, r0]
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 592              		.loc 1 1134 0
 593 000c 234B     		ldr	r3, .L66+4
 594 000e 5A19     		add	r2, r3, r5
 595 0010 177B     		ldrb	r7, [r2, #12]
 596              	.LVL47:
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 597              		.loc 1 1135 0
 598 0012 234A     		ldr	r2, .L66+8
 599              	.LVL48:
 600 0014 565D     		ldrb	r6, [r2, r5]
 601              	.LVL49:
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 602              		.loc 1 1136 0
 603 0016 5B5D     		ldrb	r3, [r3, r5]
 604              	.LVL50:
 605 0018 9846     		mov	r8, r3
 606              	.LVL51:
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = widget;
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 607              		.loc 1 1142 0
 608 001a 2248     		ldr	r0, .L66+12
 609              	.LVL52:
 610 001c 4030     		add	r0, r0, #64
 611 001e 211C     		mov	r1, r4
 612 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 613              	.LVL53:
 614 0024 0028     		cmp	r0, #0
 615 0026 10D0     		beq	.L61
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 616              		.loc 1 1145 0
 617 0028 1E4B     		ldr	r3, .L66+12
 618 002a 2433     		add	r3, r3, #36
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 32


 619 002c 1B5D     		ldrb	r3, [r3, r4]
 620 002e BE1B     		sub	r6, r7, r6
 621              	.LVL54:
 622 0030 B342     		cmp	r3, r6
 623 0032 23DA     		bge	.L62
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 624              		.loc 1 1147 0
 625 0034 1B4E     		ldr	r6, .L66+12
 626 0036 301C     		mov	r0, r6
 627 0038 4030     		add	r0, r0, #64
 628 003a 211C     		mov	r1, r4
 629 003c 0022     		mov	r2, #0
 630 003e FFF7FEFF 		bl	CapSense_SetBitValue
 631              	.LVL55:
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 632              		.loc 1 1149 0
 633 0042 3036     		add	r6, r6, #48
 634 0044 4246     		mov	r2, r8
 635 0046 7255     		strb	r2, [r6, r5]
 636 0048 18E0     		b	.L62
 637              	.LVL56:
 638              	.L61:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 639              		.loc 1 1155 0
 640 004a 164B     		ldr	r3, .L66+12
 641 004c 2433     		add	r3, r3, #36
 642 004e 1B5D     		ldrb	r3, [r3, r4]
 643 0050 BE19     		add	r6, r7, r6
 644              	.LVL57:
 645 0052 B342     		cmp	r3, r6
 646 0054 0EDB     		blt	.L63
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 647              		.loc 1 1157 0
 648 0056 134A     		ldr	r2, .L66+12
 649 0058 3032     		add	r2, r2, #48
 650 005a 535D     		ldrb	r3, [r2, r5]
 651 005c 013B     		sub	r3, r3, #1
 652 005e DBB2     		uxtb	r3, r3
 653 0060 5355     		strb	r3, [r2, r5]
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 654              		.loc 1 1159 0
 655 0062 002B     		cmp	r3, #0
 656 0064 0AD1     		bne	.L62
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 657              		.loc 1 1161 0
 658 0066 0F48     		ldr	r0, .L66+12
 659 0068 4030     		add	r0, r0, #64
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 33


 660 006a 211C     		mov	r1, r4
 661 006c 0122     		mov	r2, #1
 662 006e FFF7FEFF 		bl	CapSense_SetBitValue
 663              	.LVL58:
 664 0072 03E0     		b	.L62
 665              	.L63:
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 666              		.loc 1 1167 0
 667 0074 0B4B     		ldr	r3, .L66+12
 668 0076 3033     		add	r3, r3, #48
 669 0078 4246     		mov	r2, r8
 670 007a 5A55     		strb	r2, [r3, r5]
 671              	.L62:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 672              		.loc 1 1171 0
 673 007c 0948     		ldr	r0, .L66+12
 674 007e 4030     		add	r0, r0, #64
 675 0080 211C     		mov	r1, r4
 676 0082 FFF7FEFF 		bl	CapSense_GetBitValue
 677              	.LVL59:
 678 0086 0028     		cmp	r0, #0
 679 0088 01D0     		beq	.L65
 680 008a 0120     		mov	r0, #1
 681 008c 00E0     		b	.L64
 682              	.L65:
 683 008e 0020     		mov	r0, #0
 684              	.L64:
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 685              		.loc 1 1172 0 discriminator 3
 686              		@ sp needed
 687              	.LVL60:
 688              	.LVL61:
 689              	.LVL62:
 690 0090 04BC     		pop	{r2}
 691 0092 9046     		mov	r8, r2
 692 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 693              	.L67:
 694 0096 C046     		.align	2
 695              	.L66:
 696 0098 00000000 		.word	CapSense_widgetNumber
 697 009c 00000000 		.word	.LANCHOR1
 698 00a0 00000000 		.word	CapSense_hysteresis
 699 00a4 00000000 		.word	.LANCHOR0
 700              		.cfi_endproc
 701              	.LFE56:
 702              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 703              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 704              		.align	2
 705              		.global	CapSense_CheckIsWidgetActive
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 34


 706              		.code	16
 707              		.thumb_func
 708              		.type	CapSense_CheckIsWidgetActive, %function
 709              	CapSense_CheckIsWidgetActive:
 710              	.LFB57:
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 711              		.loc 1 1204 0
 712              		.cfi_startproc
 713              	.LVL63:
 714 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 715              		.cfi_def_cfa_offset 24
 716              		.cfi_offset 3, -24
 717              		.cfi_offset 4, -20
 718              		.cfi_offset 5, -16
 719              		.cfi_offset 6, -12
 720              		.cfi_offset 7, -8
 721              		.cfi_offset 14, -4
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 722              		.loc 1 1205 0
 723 0002 094B     		ldr	r3, .L73
 724 0004 1C5C     		ldrb	r4, [r3, r0]
 725              	.LVL64:
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 726              		.loc 1 1206 0
 727 0006 1818     		add	r0, r3, r0
 728              	.LVL65:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 35


 729 0008 057B     		ldrb	r5, [r0, #12]
 730 000a 2D19     		add	r5, r5, r4
 731              	.LVL66:
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 732              		.loc 1 1207 0
 733 000c 0026     		mov	r6, #0
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 734              		.loc 1 1214 0
 735 000e 0127     		mov	r7, #1
 736              	.LVL67:
 737              	.L70:
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 738              		.loc 1 1212 0
 739 0010 201C     		mov	r0, r4
 740 0012 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 741              	.LVL68:
 742 0016 0028     		cmp	r0, #0
 743 0018 00D0     		beq	.L69
 744              		.loc 1 1214 0
 745 001a 3E1C     		mov	r6, r7
 746              	.LVL69:
 747              	.L69:
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 748              		.loc 1 1216 0
 749 001c 0134     		add	r4, r4, #1
 750              	.LVL70:
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 751              		.loc 1 1218 0
 752 001e AC42     		cmp	r4, r5
 753 0020 F6D3     		bcc	.L70
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 754              		.loc 1 1223 0
 755 0022 301C     		mov	r0, r6
 756              		@ sp needed
 757              	.LVL71:
 758              	.LVL72:
 759              	.LVL73:
 760 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 761              	.L74:
 762 0026 C046     		.align	2
 763              	.L73:
 764 0028 00000000 		.word	.LANCHOR2
 765              		.cfi_endproc
 766              	.LFE57:
 767              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 36


 768              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 769              		.align	2
 770              		.global	CapSense_CheckIsAnyWidgetActive
 771              		.code	16
 772              		.thumb_func
 773              		.type	CapSense_CheckIsAnyWidgetActive, %function
 774              	CapSense_CheckIsAnyWidgetActive:
 775              	.LFB58:
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 776              		.loc 1 1250 0
 777              		.cfi_startproc
 778 0000 70B5     		push	{r4, r5, r6, lr}
 779              		.cfi_def_cfa_offset 16
 780              		.cfi_offset 4, -16
 781              		.cfi_offset 5, -12
 782              		.cfi_offset 6, -8
 783              		.cfi_offset 14, -4
 784              	.LVL74:
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 785              		.loc 1 1253 0
 786 0002 0025     		mov	r5, #0
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 787              		.loc 1 1255 0
 788 0004 0024     		mov	r4, #0
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 37


 789              		.loc 1 1259 0
 790 0006 0126     		mov	r6, #1
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 791              		.loc 1 1255 0
 792 0008 06E0     		b	.L76
 793              	.LVL75:
 794              	.L78:
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 795              		.loc 1 1257 0
 796 000a 201C     		mov	r0, r4
 797 000c FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 798              	.LVL76:
 799 0010 0028     		cmp	r0, #0
 800 0012 00D0     		beq	.L77
 801              		.loc 1 1259 0
 802 0014 351C     		mov	r5, r6
 803              	.LVL77:
 804              	.L77:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 805              		.loc 1 1255 0
 806 0016 0134     		add	r4, r4, #1
 807              	.LVL78:
 808              	.L76:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 809              		.loc 1 1255 0 is_stmt 0 discriminator 1
 810 0018 0B2C     		cmp	r4, #11
 811 001a F6D9     		bls	.L78
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 812              		.loc 1 1266 0 is_stmt 1
 813 001c 281C     		mov	r0, r5
 814              		@ sp needed
 815              	.LVL79:
 816              	.LVL80:
 817 001e 70BD     		pop	{r4, r5, r6, pc}
 818              		.cfi_endproc
 819              	.LFE58:
 820              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 821              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 822              		.align	2
 823              		.global	CapSense_EnableWidget
 824              		.code	16
 825              		.thumb_func
 826              		.type	CapSense_EnableWidget, %function
 827              	CapSense_EnableWidget:
 828              	.LFB59:
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 38


1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 829              		.loc 1 1297 0
 830              		.cfi_startproc
 831              	.LVL81:
 832 0000 70B5     		push	{r4, r5, r6, lr}
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 4, -16
 835              		.cfi_offset 5, -12
 836              		.cfi_offset 6, -8
 837              		.cfi_offset 14, -4
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 838              		.loc 1 1299 0
 839 0002 084B     		ldr	r3, .L83
 840 0004 1C5C     		ldrb	r4, [r3, r0]
 841              	.LVL82:
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 842              		.loc 1 1300 0
 843 0006 1818     		add	r0, r3, r0
 844              	.LVL83:
 845 0008 067B     		ldrb	r6, [r0, #12]
 846 000a 3619     		add	r6, r6, r4
 847 000c F6B2     		uxtb	r6, r6
 848              	.LVL84:
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 849              		.loc 1 1305 0
 850 000e 064D     		ldr	r5, .L83+4
 851              	.LVL85:
 852              	.L81:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 39


 853              		.loc 1 1305 0 is_stmt 0 discriminator 1
 854 0010 281C     		mov	r0, r5
 855 0012 211C     		mov	r1, r4
 856 0014 0122     		mov	r2, #1
 857 0016 FFF7FEFF 		bl	CapSense_SetBitValue
 858              	.LVL86:
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 859              		.loc 1 1306 0 is_stmt 1 discriminator 1
 860 001a 0134     		add	r4, r4, #1
 861              	.LVL87:
 862 001c E4B2     		uxtb	r4, r4
 863              	.LVL88:
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 864              		.loc 1 1308 0 discriminator 1
 865 001e B442     		cmp	r4, r6
 866 0020 F6D3     		bcc	.L81
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 867              		.loc 1 1309 0
 868              		@ sp needed
 869              	.LVL89:
 870              	.LVL90:
 871 0022 70BD     		pop	{r4, r5, r6, pc}
 872              	.L84:
 873              		.align	2
 874              	.L83:
 875 0024 00000000 		.word	.LANCHOR2
 876 0028 00000000 		.word	CapSense_sensorEnableMask
 877              		.cfi_endproc
 878              	.LFE59:
 879              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 880              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 881              		.align	2
 882              		.global	CapSense_DisableWidget
 883              		.code	16
 884              		.thumb_func
 885              		.type	CapSense_DisableWidget, %function
 886              	CapSense_DisableWidget:
 887              	.LFB60:
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 40


1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 888              		.loc 1 1340 0
 889              		.cfi_startproc
 890              	.LVL91:
 891 0000 70B5     		push	{r4, r5, r6, lr}
 892              		.cfi_def_cfa_offset 16
 893              		.cfi_offset 4, -16
 894              		.cfi_offset 5, -12
 895              		.cfi_offset 6, -8
 896              		.cfi_offset 14, -4
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 897              		.loc 1 1341 0
 898 0002 084B     		ldr	r3, .L88
 899 0004 1C5C     		ldrb	r4, [r3, r0]
 900              	.LVL92:
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 901              		.loc 1 1342 0
 902 0006 1818     		add	r0, r3, r0
 903              	.LVL93:
 904 0008 067B     		ldrb	r6, [r0, #12]
 905 000a 3619     		add	r6, r6, r4
 906 000c F6B2     		uxtb	r6, r6
 907              	.LVL94:
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 908              		.loc 1 1348 0
 909 000e 064D     		ldr	r5, .L88+4
 910              	.LVL95:
 911              	.L86:
 912              		.loc 1 1348 0 is_stmt 0 discriminator 1
 913 0010 281C     		mov	r0, r5
 914 0012 211C     		mov	r1, r4
 915 0014 0022     		mov	r2, #0
 916 0016 FFF7FEFF 		bl	CapSense_SetBitValue
 917              	.LVL96:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 918              		.loc 1 1349 0 is_stmt 1 discriminator 1
 919 001a 0134     		add	r4, r4, #1
 920              	.LVL97:
 921 001c E4B2     		uxtb	r4, r4
 922              	.LVL98:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 41


1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 923              		.loc 1 1351 0 discriminator 1
 924 001e B442     		cmp	r4, r6
 925 0020 F6D3     		bcc	.L86
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 926              		.loc 1 1352 0
 927              		@ sp needed
 928              	.LVL99:
 929              	.LVL100:
 930 0022 70BD     		pop	{r4, r5, r6, pc}
 931              	.L89:
 932              		.align	2
 933              	.L88:
 934 0024 00000000 		.word	.LANCHOR2
 935 0028 00000000 		.word	CapSense_sensorEnableMask
 936              		.cfi_endproc
 937              	.LFE60:
 938              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 939              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 940              		.align	2
 941              		.global	CapSense_MedianFilter
 942              		.code	16
 943              		.thumb_func
 944              		.type	CapSense_MedianFilter, %function
 945              	CapSense_MedianFilter:
 946              	.LFB61:
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 42


1383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 43


1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 44


1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 45


1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 46


1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 47


1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 48


1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 49


1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 50


1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 51


1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 52


1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 53


2010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 54


2067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 55


2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 56


2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 57


2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 58


2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 59


2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 947              		.loc 1 2392 0
 948              		.cfi_startproc
 949              	.LVL101:
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 950              		.loc 1 2395 0
 951 0000 8842     		cmp	r0, r1
 952 0002 02D9     		bls	.L91
 953 0004 031C     		mov	r3, r0
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 954              		.loc 1 2399 0
 955 0006 081C     		mov	r0, r1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 60


 956              	.LVL102:
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 957              		.loc 1 2398 0
 958 0008 191C     		mov	r1, r3
 959              	.LVL103:
 960              	.L91:
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 961              		.loc 1 2402 0
 962 000a 9142     		cmp	r1, r2
 963 000c 00D9     		bls	.L92
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 964              		.loc 1 2404 0
 965 000e 111C     		mov	r1, r2
 966              	.LVL104:
 967              	.L92:
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 968              		.loc 1 2407 0
 969 0010 0B1C     		add	r3, r1, #0
 970 0012 8142     		cmp	r1, r0
 971 0014 00D2     		bcs	.L93
 972 0016 031C     		add	r3, r0, #0
 973              	.L93:
 974 0018 98B2     		uxth	r0, r3
 975              	.LVL105:
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 976              		.loc 1 2408 0
 977              		@ sp needed
 978 001a 7047     		bx	lr
 979              		.cfi_endproc
 980              	.LFE61:
 981              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 982              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 983              		.align	2
 984              		.global	CapSense_IIR4Filter
 985              		.code	16
 986              		.thumb_func
 987              		.type	CapSense_IIR4Filter, %function
 988              	CapSense_IIR4Filter:
 989              	.LFB62:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 61


2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 62


2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 990              		.loc 1 2512 0
 991              		.cfi_startproc
 992              	.LVL106:
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 993              		.loc 1 2516 0
 994 0000 4018     		add	r0, r0, r1
 995              	.LVL107:
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 996              		.loc 1 2517 0
 997 0002 4900     		lsl	r1, r1, #1
 998              	.LVL108:
 999 0004 0818     		add	r0, r1, r0
 1000              	.LVL109:
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1001              		.loc 1 2520 0
 1002 0006 8008     		lsr	r0, r0, #2
 1003              	.LVL110:
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 63


 1004              		.loc 1 2521 0
 1005              		@ sp needed
 1006 0008 7047     		bx	lr
 1007              		.cfi_endproc
 1008              	.LFE62:
 1009              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1010 000a C046     		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1011              		.align	2
 1012              		.global	CapSense_UpdateBaselineNoThreshold
 1013              		.code	16
 1014              		.thumb_func
 1015              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1016              	CapSense_UpdateBaselineNoThreshold:
 1017              	.LFB38:
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1018              		.loc 1 372 0
 1019              		.cfi_startproc
 1020              	.LVL111:
 1021 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1022              		.cfi_def_cfa_offset 24
 1023              		.cfi_offset 3, -24
 1024              		.cfi_offset 4, -20
 1025              		.cfi_offset 5, -16
 1026              		.cfi_offset 6, -12
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 4F46     		mov	r7, r9
 1030 0004 4646     		mov	r6, r8
 1031 0006 C0B4     		push	{r6, r7}
 1032              		.cfi_def_cfa_offset 32
 1033              		.cfi_offset 8, -32
 1034              		.cfi_offset 9, -28
 1035 0008 041C     		mov	r4, r0
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 1036              		.loc 1 377 0
 1037 000a 3A4B     		ldr	r3, .L108
 1038 000c 1F5C     		ldrb	r7, [r3, r0]
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 1039              		.loc 1 378 0
 1040 000e 3A4B     		ldr	r3, .L108+4
 1041 0010 DB5D     		ldrb	r3, [r3, r7]
 1042 0012 9846     		mov	r8, r3
 1043              	.LVL112:
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1044              		.loc 1 386 0
 1045 0014 4200     		lsl	r2, r0, #1
 1046 0016 394B     		ldr	r3, .L108+8
 1047 0018 D55A     		ldrh	r5, [r2, r3]
 1048              	.LVL113:
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 1049              		.loc 1 389 0
 1050 001a 2423     		mov	r3, #36
 1051              	.LVL114:
 1052 001c 384A     		ldr	r2, .L108+12
 1053              	.LVL115:
 1054 001e D35C     		ldrb	r3, [r2, r3]
 1055 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 64


 1056 0022 09D0     		beq	.L98
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 1057              		.loc 1 410 0
 1058 0024 374E     		ldr	r6, .L108+16
 1059 0026 4200     		lsl	r2, r0, #1
 1060              	.LVL116:
 1061 0028 9146     		mov	r9, r2
 1062 002a 915B     		ldrh	r1, [r2, r6]
 1063 002c 281C     		mov	r0, r5
 1064              	.LVL117:
 1065 002e FFF7FEFF 		bl	CapSense_IIR4Filter
 1066              	.LVL118:
 1067 0032 051C     		mov	r5, r0
 1068              	.LVL119:
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 1069              		.loc 1 411 0
 1070 0034 4B46     		mov	r3, r9
 1071 0036 9853     		strh	r0, [r3, r6]
 1072              	.LVL120:
 1073              	.L98:
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 1074              		.loc 1 432 0
 1075 0038 E1B2     		uxtb	r1, r4
 1076 003a 3348     		ldr	r0, .L108+20
 1077 003c 2F4A     		ldr	r2, .L108+8
 1078 003e FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_20
 1079              	.LVL121:
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 1080              		.loc 1 437 0
 1081 0042 6300     		lsl	r3, r4, #1
 1082 0044 314A     		ldr	r2, .L108+24
 1083 0046 9B5A     		ldrh	r3, [r3, r2]
 1084 0048 AB42     		cmp	r3, r5
 1085 004a 07D8     		bhi	.L99
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 1086              		.loc 1 439 0
 1087 004c 0021     		mov	r1, #0
 1088 004e 304A     		ldr	r2, .L108+28
 1089 0050 1155     		strb	r1, [r2, r4]
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1090              		.loc 1 440 0
 1091 0052 EE1A     		sub	r6, r5, r3
 1092 0054 B6B2     		uxth	r6, r6
 1093              	.LVL122:
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1094              		.loc 1 441 0
 1095 0056 0122     		mov	r2, #1
 1096 0058 9146     		mov	r9, r2
 1097 005a 03E0     		b	.L100
 1098              	.LVL123:
 1099              	.L99:
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 1100              		.loc 1 445 0
 1101 005c 5E1B     		sub	r6, r3, r5
 1102 005e B6B2     		uxth	r6, r6
 1103              	.LVL124:
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 65


 1104              		.loc 1 446 0
 1105 0060 0022     		mov	r2, #0
 1106 0062 9146     		mov	r9, r2
 1107              	.LVL125:
 1108              	.L100:
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 1109              		.loc 1 450 0
 1110 0064 4A46     		mov	r2, r9
 1111 0066 002A     		cmp	r2, #0
 1112 0068 15D1     		bne	.L101
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 1113              		.loc 1 450 0 is_stmt 0 discriminator 1
 1114 006a 2A4A     		ldr	r2, .L108+32
 1115 006c D25D     		ldrb	r2, [r2, r7]
 1116 006e B242     		cmp	r2, r6
 1117 0070 11D2     		bcs	.L101
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 1118              		.loc 1 455 0 is_stmt 1
 1119 0072 274B     		ldr	r3, .L108+28
 1120 0074 1B5D     		ldrb	r3, [r3, r4]
 1121 0076 224A     		ldr	r2, .L108+12
 1122 0078 1219     		add	r2, r2, r4
 1123 007a 127E     		ldrb	r2, [r2, #24]
 1124 007c 9342     		cmp	r3, r2
 1125 007e 06D3     		bcc	.L102
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 1126              		.loc 1 457 0
 1127 0080 201C     		mov	r0, r4
 1128 0082 FFF7FEFF 		bl	CapSense_BaseInit
 1129              	.LVL126:
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1130              		.loc 1 458 0
 1131 0086 0022     		mov	r2, #0
 1132 0088 214B     		ldr	r3, .L108+28
 1133 008a 1A55     		strb	r2, [r3, r4]
 1134 008c 1AE0     		b	.L103
 1135              	.L102:
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 1136              		.loc 1 462 0
 1137 008e 0133     		add	r3, r3, #1
 1138 0090 1F4A     		ldr	r2, .L108+28
 1139 0092 1355     		strb	r3, [r2, r4]
 1140 0094 16E0     		b	.L103
 1141              	.L101:
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 1142              		.loc 1 470 0
 1143 0096 B045     		cmp	r8, r6
 1144 0098 06D2     		bcs	.L104
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1145              		.loc 1 471 0 discriminator 1
 1146 009a 1E4A     		ldr	r2, .L108+32
 1147 009c D25D     		ldrb	r2, [r2, r7]
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 1148              		.loc 1 470 0 discriminator 1
 1149 009e B242     		cmp	r2, r6
 1150 00a0 10D9     		bls	.L103
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 66


 1151              		.loc 1 472 0
 1152 00a2 4A46     		mov	r2, r9
 1153 00a4 002A     		cmp	r2, #0
 1154 00a6 0DD1     		bne	.L103
 1155              	.L104:
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 1156              		.loc 1 483 0
 1157 00a8 1802     		lsl	r0, r3, #8
 1158              	.LVL127:
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1159              		.loc 1 484 0
 1160 00aa 1849     		ldr	r1, .L108+24
 1161 00ac 0A19     		add	r2, r1, r4
 1162 00ae 177E     		ldrb	r7, [r2, #24]
 1163 00b0 3843     		orr	r0, r7
 1164              	.LVL128:
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 1165              		.loc 1 487 0
 1166 00b2 2D18     		add	r5, r5, r0
 1167              	.LVL129:
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 1168              		.loc 1 490 0
 1169 00b4 EB1A     		sub	r3, r5, r3
 1170              	.LVL130:
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 1171              		.loc 1 493 0
 1172 00b6 1D0A     		lsr	r5, r3, #8
 1173 00b8 6000     		lsl	r0, r4, #1
 1174 00ba 0D52     		strh	r5, [r1, r0]
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1175              		.loc 1 494 0
 1176 00bc 1376     		strb	r3, [r2, #24]
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 1177              		.loc 1 496 0
 1178 00be 0022     		mov	r2, #0
 1179 00c0 134B     		ldr	r3, .L108+28
 1180              	.LVL131:
 1181 00c2 1A55     		strb	r2, [r3, r4]
 1182              	.L103:
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 1183              		.loc 1 503 0
 1184 00c4 B045     		cmp	r8, r6
 1185 00c6 0DD2     		bcs	.L105
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 1186              		.loc 1 503 0 is_stmt 0 discriminator 1
 1187 00c8 4B46     		mov	r3, r9
 1188 00ca 002B     		cmp	r3, #0
 1189 00cc 0AD0     		beq	.L105
 1190              	.LVL132:
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 1191              		.loc 1 507 0 is_stmt 1
 1192 00ce FF2E     		cmp	r6, #255
 1193 00d0 04D9     		bls	.L106
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 1194              		.loc 1 509 0
 1195 00d2 FF22     		mov	r2, #255
 1196 00d4 0D4B     		ldr	r3, .L108+24
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 67


 1197              	.LVL133:
 1198 00d6 2433     		add	r3, r3, #36
 1199 00d8 1A55     		strb	r2, [r3, r4]
 1200 00da 07E0     		b	.L97
 1201              	.LVL134:
 1202              	.L106:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 1203              		.loc 1 513 0
 1204 00dc 0B4B     		ldr	r3, .L108+24
 1205              	.LVL135:
 1206 00de 2433     		add	r3, r3, #36
 1207 00e0 1E55     		strb	r6, [r3, r4]
 1208 00e2 03E0     		b	.L97
 1209              	.L105:
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 1210              		.loc 1 522 0
 1211 00e4 0022     		mov	r2, #0
 1212 00e6 094B     		ldr	r3, .L108+24
 1213 00e8 2433     		add	r3, r3, #36
 1214 00ea 1A55     		strb	r2, [r3, r4]
 1215              	.L97:
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1216              		.loc 1 529 0
 1217              		@ sp needed
 1218              	.LVL136:
 1219              	.LVL137:
 1220              	.LVL138:
 1221              	.LVL139:
 1222 00ec 0CBC     		pop	{r2, r3}
 1223 00ee 9046     		mov	r8, r2
 1224 00f0 9946     		mov	r9, r3
 1225 00f2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1226              	.L109:
 1227              		.align	2
 1228              	.L108:
 1229 00f4 00000000 		.word	CapSense_widgetNumber
 1230 00f8 00000000 		.word	CapSense_noiseThreshold
 1231 00fc 00000000 		.word	CapSense_sensorRaw
 1232 0100 00000000 		.word	.LANCHOR1
 1233 0104 00000000 		.word	CapSense_rawFilterData1
 1234 0108 00000000 		.word	CapSense_config
 1235 010c 00000000 		.word	.LANCHOR0
 1236 0110 00000000 		.word	CapSense_lowBaselineResetCnt
 1237 0114 00000000 		.word	CapSense_negativeNoiseThreshold
 1238              		.cfi_endproc
 1239              	.LFE38:
 1240              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1241              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1242              		.align	2
 1243              		.global	CapSense_UpdateSensorBaseline
 1244              		.code	16
 1245              		.thumb_func
 1246              		.type	CapSense_UpdateSensorBaseline, %function
 1247              	CapSense_UpdateSensorBaseline:
 1248              	.LFB39:
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1249              		.loc 1 563 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 68


 1250              		.cfi_startproc
 1251              	.LVL140:
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
 1256 0002 041C     		mov	r4, r0
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 1257              		.loc 1 575 0
 1258 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1259              	.LVL141:
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 1260              		.loc 1 578 0
 1261 0008 201C     		mov	r0, r4
 1262 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1263              	.LVL142:
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1264              		.loc 1 584 0
 1265              		@ sp needed
 1266              	.LVL143:
 1267 000e 10BD     		pop	{r4, pc}
 1268              		.cfi_endproc
 1269              	.LFE39:
 1270              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1271              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1272              		.align	2
 1273              		.global	CapSense_UpdateEnabledBaselines
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	CapSense_UpdateEnabledBaselines, %function
 1277              	CapSense_UpdateEnabledBaselines:
 1278              	.LFB40:
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1279              		.loc 1 617 0
 1280              		.cfi_startproc
 1281 0000 38B5     		push	{r3, r4, r5, lr}
 1282              		.cfi_def_cfa_offset 16
 1283              		.cfi_offset 3, -16
 1284              		.cfi_offset 4, -12
 1285              		.cfi_offset 5, -8
 1286              		.cfi_offset 14, -4
 1287              	.LVL144:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1288              		.loc 1 621 0
 1289 0002 0024     		mov	r4, #0
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1290              		.loc 1 623 0
 1291 0004 074D     		ldr	r5, .L115
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1292              		.loc 1 621 0
 1293 0006 09E0     		b	.L112
 1294              	.LVL145:
 1295              	.L114:
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1296              		.loc 1 623 0
 1297 0008 281C     		mov	r0, r5
 1298 000a 211C     		mov	r1, r4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 69


 1299 000c FFF7FEFF 		bl	CapSense_GetBitValue
 1300              	.LVL146:
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 1301              		.loc 1 625 0
 1302 0010 0028     		cmp	r0, #0
 1303 0012 02D0     		beq	.L113
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 1304              		.loc 1 627 0
 1305 0014 201C     		mov	r0, r4
 1306              	.LVL147:
 1307 0016 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1308              	.LVL148:
 1309              	.L113:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1310              		.loc 1 621 0
 1311 001a 0134     		add	r4, r4, #1
 1312              	.LVL149:
 1313              	.L112:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1314              		.loc 1 621 0 is_stmt 0 discriminator 1
 1315 001c 0B2C     		cmp	r4, #11
 1316 001e F3D9     		bls	.L114
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1317              		.loc 1 630 0 is_stmt 1
 1318              		@ sp needed
 1319              	.LVL150:
 1320 0020 38BD     		pop	{r3, r4, r5, pc}
 1321              	.L116:
 1322 0022 C046     		.align	2
 1323              	.L115:
 1324 0024 00000000 		.word	CapSense_sensorEnableMask
 1325              		.cfi_endproc
 1326              	.LFE40:
 1327              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1328              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1329              		.align	2
 1330              		.global	CapSense_UpdateWidgetBaseline
 1331              		.code	16
 1332              		.thumb_func
 1333              		.type	CapSense_UpdateWidgetBaseline, %function
 1334              	CapSense_UpdateWidgetBaseline:
 1335              	.LFB41:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1336              		.loc 1 662 0
 1337              		.cfi_startproc
 1338              	.LVL151:
 1339 0000 70B5     		push	{r4, r5, r6, lr}
 1340              		.cfi_def_cfa_offset 16
 1341              		.cfi_offset 4, -16
 1342              		.cfi_offset 5, -12
 1343              		.cfi_offset 6, -8
 1344              		.cfi_offset 14, -4
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 1345              		.loc 1 670 0
 1346 0002 0A4B     		ldr	r3, .L121
 1347 0004 1A18     		add	r2, r3, r0
 1348 0006 157B     		ldrb	r5, [r2, #12]
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 70


 1349              	.LVL152:
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 1350              		.loc 1 673 0
 1351 0008 1C5C     		ldrb	r4, [r3, r0]
 1352              	.LVL153:
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 1353              		.loc 1 676 0
 1354 000a 2D19     		add	r5, r5, r4
 1355              	.LVL154:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1356              		.loc 1 680 0
 1357 000c 084E     		ldr	r6, .L121+4
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1358              		.loc 1 678 0
 1359 000e 09E0     		b	.L118
 1360              	.LVL155:
 1361              	.L120:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1362              		.loc 1 680 0
 1363 0010 301C     		mov	r0, r6
 1364 0012 211C     		mov	r1, r4
 1365 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 1366              	.LVL156:
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 1367              		.loc 1 682 0
 1368 0018 0028     		cmp	r0, #0
 1369 001a 02D0     		beq	.L119
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 1370              		.loc 1 684 0
 1371 001c 201C     		mov	r0, r4
 1372              	.LVL157:
 1373 001e FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1374              	.LVL158:
 1375              	.L119:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1376              		.loc 1 678 0
 1377 0022 0134     		add	r4, r4, #1
 1378              	.LVL159:
 1379              	.L118:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1380              		.loc 1 678 0 is_stmt 0 discriminator 1
 1381 0024 AC42     		cmp	r4, r5
 1382 0026 F3D3     		bcc	.L120
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1383              		.loc 1 687 0 is_stmt 1
 1384              		@ sp needed
 1385              	.LVL160:
 1386              	.LVL161:
 1387 0028 70BD     		pop	{r4, r5, r6, pc}
 1388              	.L122:
 1389 002a C046     		.align	2
 1390              	.L121:
 1391 002c 00000000 		.word	.LANCHOR2
 1392 0030 00000000 		.word	CapSense_sensorEnableMask
 1393              		.cfi_endproc
 1394              	.LFE41:
 1395              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 71


 1396              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1397              		.align	2
 1398              		.global	CapSense_GetWidgetNumber
 1399              		.code	16
 1400              		.thumb_func
 1401              		.type	CapSense_GetWidgetNumber, %function
 1402              	CapSense_GetWidgetNumber:
 1403              	.LFB63:
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 72


2571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 73


2628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 74


2685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 75


2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1404              		.loc 1 2745 0
 1405              		.cfi_startproc
 1406              	.LVL162:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 1407              		.loc 1 2746 0
 1408 0000 014B     		ldr	r3, .L124
 1409 0002 185C     		ldrb	r0, [r3, r0]
 1410              	.LVL163:
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1411              		.loc 1 2747 0
 1412              		@ sp needed
 1413 0004 7047     		bx	lr
 1414              	.L125:
 1415 0006 C046     		.align	2
 1416              	.L124:
 1417 0008 00000000 		.word	CapSense_widgetNumber
 1418              		.cfi_endproc
 1419              	.LFE63:
 1420              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1421              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1422              		.align	2
 1423              		.global	CapSense_GetLowBaselineReset
 1424              		.code	16
 1425              		.thumb_func
 1426              		.type	CapSense_GetLowBaselineReset, %function
 1427              	CapSense_GetLowBaselineReset:
 1428              	.LFB64:
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1429              		.loc 1 2771 0
 1430              		.cfi_startproc
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 76


 1431              	.LVL164:
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 1432              		.loc 1 2772 0
 1433 0000 014B     		ldr	r3, .L127
 1434 0002 1818     		add	r0, r3, r0
 1435              	.LVL165:
 1436 0004 007E     		ldrb	r0, [r0, #24]
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1437              		.loc 1 2773 0
 1438              		@ sp needed
 1439 0006 7047     		bx	lr
 1440              	.L128:
 1441              		.align	2
 1442              	.L127:
 1443 0008 00000000 		.word	.LANCHOR1
 1444              		.cfi_endproc
 1445              	.LFE64:
 1446              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1447              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1448              		.align	2
 1449              		.global	CapSense_GetDebounce
 1450              		.code	16
 1451              		.thumb_func
 1452              		.type	CapSense_GetDebounce, %function
 1453              	CapSense_GetDebounce:
 1454              	.LFB65:
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1455              		.loc 1 2797 0
 1456              		.cfi_startproc
 1457              	.LVL166:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 1458              		.loc 1 2798 0
 1459 0000 014B     		ldr	r3, .L130
 1460 0002 185C     		ldrb	r0, [r3, r0]
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 77


 1461              	.LVL167:
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1462              		.loc 1 2799 0
 1463              		@ sp needed
 1464 0004 7047     		bx	lr
 1465              	.L131:
 1466 0006 C046     		.align	2
 1467              	.L130:
 1468 0008 00000000 		.word	.LANCHOR1
 1469              		.cfi_endproc
 1470              	.LFE65:
 1471              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1472              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1473              		.align	2
 1474              		.global	CapSense_EnableRawDataFilters
 1475              		.code	16
 1476              		.thumb_func
 1477              		.type	CapSense_EnableRawDataFilters, %function
 1478              	CapSense_EnableRawDataFilters:
 1479              	.LFB66:
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1480              		.loc 1 2823 0
 1481              		.cfi_startproc
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1482              		.loc 1 2824 0
 1483 0000 0121     		mov	r1, #1
 1484 0002 2423     		mov	r3, #36
 1485 0004 014A     		ldr	r2, .L133
 1486 0006 D154     		strb	r1, [r2, r3]
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1487              		.loc 1 2825 0
 1488              		@ sp needed
 1489 0008 7047     		bx	lr
 1490              	.L134:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 78


 1491 000a C046     		.align	2
 1492              	.L133:
 1493 000c 00000000 		.word	.LANCHOR1
 1494              		.cfi_endproc
 1495              	.LFE66:
 1496              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1497              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1498              		.align	2
 1499              		.global	CapSense_DisableRawDataFilters
 1500              		.code	16
 1501              		.thumb_func
 1502              		.type	CapSense_DisableRawDataFilters, %function
 1503              	CapSense_DisableRawDataFilters:
 1504              	.LFB67:
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1505              		.loc 1 2848 0
 1506              		.cfi_startproc
2849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1507              		.loc 1 2849 0
 1508 0000 0021     		mov	r1, #0
 1509 0002 2423     		mov	r3, #36
 1510 0004 014A     		ldr	r2, .L136
 1511 0006 D154     		strb	r1, [r2, r3]
2850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1512              		.loc 1 2850 0
 1513              		@ sp needed
 1514 0008 7047     		bx	lr
 1515              	.L137:
 1516 000a C046     		.align	2
 1517              	.L136:
 1518 000c 00000000 		.word	.LANCHOR1
 1519              		.cfi_endproc
 1520              	.LFE67:
 1521              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1522              		.global	CapSense_numberOfSensors
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 79


 1523              		.global	CapSense_rawDataIndex
 1524              		.global	CapSense_debounce
 1525              		.comm	CapSense_hysteresis,12,4
 1526              		.comm	CapSense_negativeNoiseThreshold,12,4
 1527              		.comm	CapSense_noiseThreshold,12,4
 1528              		.global	CapSense_fingerThreshold
 1529              		.global	CapSense_enableRawFilters
 1530              		.global	CapSense_lowBaselineReset
 1531              		.comm	CapSense_lowBaselineResetCnt,12,4
 1532              		.global	CapSense_sensorOnMask
 1533              		.global	CapSense_sensorSignal
 1534              		.global	CapSense_sensorBaselineLow
 1535              		.global	CapSense_sensorBaseline
 1536              		.comm	CapSense_rawFilterData1,24,4
 1537              		.section	.rodata
 1538              		.align	2
 1539              		.set	.LANCHOR2,. + 0
 1540              		.type	CapSense_rawDataIndex, %object
 1541              		.size	CapSense_rawDataIndex, 12
 1542              	CapSense_rawDataIndex:
 1543 0000 00       		.byte	0
 1544 0001 01       		.byte	1
 1545 0002 02       		.byte	2
 1546 0003 03       		.byte	3
 1547 0004 04       		.byte	4
 1548 0005 05       		.byte	5
 1549 0006 06       		.byte	6
 1550 0007 07       		.byte	7
 1551 0008 08       		.byte	8
 1552 0009 09       		.byte	9
 1553 000a 0A       		.byte	10
 1554 000b 0B       		.byte	11
 1555              		.type	CapSense_numberOfSensors, %object
 1556              		.size	CapSense_numberOfSensors, 12
 1557              	CapSense_numberOfSensors:
 1558 000c 01       		.byte	1
 1559 000d 01       		.byte	1
 1560 000e 01       		.byte	1
 1561 000f 01       		.byte	1
 1562 0010 01       		.byte	1
 1563 0011 01       		.byte	1
 1564 0012 01       		.byte	1
 1565 0013 01       		.byte	1
 1566 0014 01       		.byte	1
 1567 0015 01       		.byte	1
 1568 0016 01       		.byte	1
 1569 0017 01       		.byte	1
 1570              		.data
 1571              		.align	2
 1572              		.set	.LANCHOR1,. + 0
 1573              		.type	CapSense_debounce, %object
 1574              		.size	CapSense_debounce, 12
 1575              	CapSense_debounce:
 1576 0000 05       		.byte	5
 1577 0001 05       		.byte	5
 1578 0002 05       		.byte	5
 1579 0003 05       		.byte	5
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 80


 1580 0004 05       		.byte	5
 1581 0005 05       		.byte	5
 1582 0006 05       		.byte	5
 1583 0007 05       		.byte	5
 1584 0008 05       		.byte	5
 1585 0009 05       		.byte	5
 1586 000a 05       		.byte	5
 1587 000b 05       		.byte	5
 1588              		.type	CapSense_fingerThreshold, %object
 1589              		.size	CapSense_fingerThreshold, 12
 1590              	CapSense_fingerThreshold:
 1591 000c DC       		.byte	-36
 1592 000d DC       		.byte	-36
 1593 000e DC       		.byte	-36
 1594 000f DC       		.byte	-36
 1595 0010 DC       		.byte	-36
 1596 0011 DC       		.byte	-36
 1597 0012 DC       		.byte	-36
 1598 0013 DC       		.byte	-36
 1599 0014 DC       		.byte	-36
 1600 0015 DC       		.byte	-36
 1601 0016 DC       		.byte	-36
 1602 0017 DC       		.byte	-36
 1603              		.type	CapSense_lowBaselineReset, %object
 1604              		.size	CapSense_lowBaselineReset, 12
 1605              	CapSense_lowBaselineReset:
 1606 0018 1E       		.byte	30
 1607 0019 1E       		.byte	30
 1608 001a 1E       		.byte	30
 1609 001b 1E       		.byte	30
 1610 001c 1E       		.byte	30
 1611 001d 1E       		.byte	30
 1612 001e 1E       		.byte	30
 1613 001f 1E       		.byte	30
 1614 0020 1E       		.byte	30
 1615 0021 1E       		.byte	30
 1616 0022 1E       		.byte	30
 1617 0023 1E       		.byte	30
 1618              		.type	CapSense_enableRawFilters, %object
 1619              		.size	CapSense_enableRawFilters, 1
 1620              	CapSense_enableRawFilters:
 1621 0024 01       		.byte	1
 1622 0025 000000   		.bss
 1623              		.align	2
 1624              		.set	.LANCHOR0,. + 0
 1625              		.type	CapSense_sensorBaseline, %object
 1626              		.size	CapSense_sensorBaseline, 24
 1627              	CapSense_sensorBaseline:
 1628 0000 00000000 		.space	24
 1628      00000000 
 1628      00000000 
 1628      00000000 
 1628      00000000 
 1629              		.type	CapSense_sensorBaselineLow, %object
 1630              		.size	CapSense_sensorBaselineLow, 12
 1631              	CapSense_sensorBaselineLow:
 1632 0018 00000000 		.space	12
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 81


 1632      00000000 
 1632      00000000 
 1633              		.type	CapSense_sensorSignal, %object
 1634              		.size	CapSense_sensorSignal, 12
 1635              	CapSense_sensorSignal:
 1636 0024 00000000 		.space	12
 1636      00000000 
 1636      00000000 
 1637              		.type	CapSense_debounceCounter, %object
 1638              		.size	CapSense_debounceCounter, 13
 1639              	CapSense_debounceCounter:
 1640 0030 00000000 		.space	13
 1640      00000000 
 1640      00000000 
 1640      00
 1641 003d 000000   		.space	3
 1642              		.type	CapSense_sensorOnMask, %object
 1643              		.size	CapSense_sensorOnMask, 2
 1644              	CapSense_sensorOnMask:
 1645 0040 0000     		.space	2
 1646 0042 0000     		.text
 1647              	.Letext0:
 1648              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1649              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1650              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1651              		.section	.debug_info,"",%progbits
 1652              	.Ldebug_info0:
 1653 0000 C90D0000 		.4byte	0xdc9
 1654 0004 0400     		.2byte	0x4
 1655 0006 00000000 		.4byte	.Ldebug_abbrev0
 1656 000a 04       		.byte	0x4
 1657 000b 01       		.uleb128 0x1
 1658 000c F7000000 		.4byte	.LASF115
 1659 0010 01       		.byte	0x1
 1660 0011 B7040000 		.4byte	.LASF116
 1661 0015 C0070000 		.4byte	.LASF117
 1662 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1663 001d 00000000 		.4byte	0
 1664 0021 00000000 		.4byte	.Ldebug_line0
 1665 0025 02       		.uleb128 0x2
 1666 0026 01       		.byte	0x1
 1667 0027 06       		.byte	0x6
 1668 0028 0D020000 		.4byte	.LASF0
 1669 002c 02       		.uleb128 0x2
 1670 002d 01       		.byte	0x1
 1671 002e 08       		.byte	0x8
 1672 002f 84060000 		.4byte	.LASF1
 1673 0033 02       		.uleb128 0x2
 1674 0034 02       		.byte	0x2
 1675 0035 05       		.byte	0x5
 1676 0036 EB060000 		.4byte	.LASF2
 1677 003a 02       		.uleb128 0x2
 1678 003b 02       		.byte	0x2
 1679 003c 07       		.byte	0x7
 1680 003d 1B040000 		.4byte	.LASF3
 1681 0041 02       		.uleb128 0x2
 1682 0042 04       		.byte	0x4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 82


 1683 0043 05       		.byte	0x5
 1684 0044 79020000 		.4byte	.LASF4
 1685 0048 02       		.uleb128 0x2
 1686 0049 04       		.byte	0x4
 1687 004a 07       		.byte	0x7
 1688 004b B9030000 		.4byte	.LASF5
 1689 004f 02       		.uleb128 0x2
 1690 0050 08       		.byte	0x8
 1691 0051 05       		.byte	0x5
 1692 0052 FF010000 		.4byte	.LASF6
 1693 0056 02       		.uleb128 0x2
 1694 0057 08       		.byte	0x8
 1695 0058 07       		.byte	0x7
 1696 0059 73010000 		.4byte	.LASF7
 1697 005d 03       		.uleb128 0x3
 1698 005e 04       		.byte	0x4
 1699 005f 05       		.byte	0x5
 1700 0060 696E7400 		.ascii	"int\000"
 1701 0064 02       		.uleb128 0x2
 1702 0065 04       		.byte	0x4
 1703 0066 07       		.byte	0x7
 1704 0067 AC030000 		.4byte	.LASF8
 1705 006b 04       		.uleb128 0x4
 1706 006c A2020000 		.4byte	.LASF9
 1707 0070 02       		.byte	0x2
 1708 0071 B3       		.byte	0xb3
 1709 0072 2C000000 		.4byte	0x2c
 1710 0076 04       		.uleb128 0x4
 1711 0077 00000000 		.4byte	.LASF10
 1712 007b 02       		.byte	0x2
 1713 007c B4       		.byte	0xb4
 1714 007d 3A000000 		.4byte	0x3a
 1715 0081 04       		.uleb128 0x4
 1716 0082 FE020000 		.4byte	.LASF11
 1717 0086 02       		.byte	0x2
 1718 0087 B5       		.byte	0xb5
 1719 0088 48000000 		.4byte	0x48
 1720 008c 02       		.uleb128 0x2
 1721 008d 04       		.byte	0x4
 1722 008e 04       		.byte	0x4
 1723 008f 44060000 		.4byte	.LASF12
 1724 0093 02       		.uleb128 0x2
 1725 0094 08       		.byte	0x8
 1726 0095 04       		.byte	0x4
 1727 0096 E1020000 		.4byte	.LASF13
 1728 009a 02       		.uleb128 0x2
 1729 009b 01       		.byte	0x1
 1730 009c 08       		.byte	0x8
 1731 009d BB070000 		.4byte	.LASF14
 1732 00a1 02       		.uleb128 0x2
 1733 00a2 04       		.byte	0x4
 1734 00a3 07       		.byte	0x7
 1735 00a4 1A050000 		.4byte	.LASF15
 1736 00a8 05       		.uleb128 0x5
 1737 00a9 38       		.byte	0x38
 1738 00aa 03       		.byte	0x3
 1739 00ab 2F       		.byte	0x2f
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 83


 1740 00ac 59010000 		.4byte	0x159
 1741 00b0 06       		.uleb128 0x6
 1742 00b1 B8050000 		.4byte	.LASF16
 1743 00b5 03       		.byte	0x3
 1744 00b6 31       		.byte	0x31
 1745 00b7 59010000 		.4byte	0x159
 1746 00bb 00       		.byte	0
 1747 00bc 06       		.uleb128 0x6
 1748 00bd C7050000 		.4byte	.LASF17
 1749 00c1 03       		.byte	0x3
 1750 00c2 32       		.byte	0x32
 1751 00c3 59010000 		.4byte	0x159
 1752 00c7 04       		.byte	0x4
 1753 00c8 06       		.uleb128 0x6
 1754 00c9 2E040000 		.4byte	.LASF18
 1755 00cd 03       		.byte	0x3
 1756 00ce 33       		.byte	0x33
 1757 00cf 59010000 		.4byte	0x159
 1758 00d3 08       		.byte	0x8
 1759 00d4 06       		.uleb128 0x6
 1760 00d5 9A040000 		.4byte	.LASF19
 1761 00d9 03       		.byte	0x3
 1762 00da 34       		.byte	0x34
 1763 00db 59010000 		.4byte	0x159
 1764 00df 0C       		.byte	0xc
 1765 00e0 06       		.uleb128 0x6
 1766 00e1 FC060000 		.4byte	.LASF20
 1767 00e5 03       		.byte	0x3
 1768 00e6 35       		.byte	0x35
 1769 00e7 59010000 		.4byte	0x159
 1770 00eb 10       		.byte	0x10
 1771 00ec 06       		.uleb128 0x6
 1772 00ed 49020000 		.4byte	.LASF21
 1773 00f1 03       		.byte	0x3
 1774 00f2 36       		.byte	0x36
 1775 00f3 5F010000 		.4byte	0x15f
 1776 00f7 14       		.byte	0x14
 1777 00f8 06       		.uleb128 0x6
 1778 00f9 E6030000 		.4byte	.LASF22
 1779 00fd 03       		.byte	0x3
 1780 00fe 37       		.byte	0x37
 1781 00ff 6A010000 		.4byte	0x16a
 1782 0103 18       		.byte	0x18
 1783 0104 06       		.uleb128 0x6
 1784 0105 AC090000 		.4byte	.LASF23
 1785 0109 03       		.byte	0x3
 1786 010a 38       		.byte	0x38
 1787 010b 5F010000 		.4byte	0x15f
 1788 010f 1C       		.byte	0x1c
 1789 0110 06       		.uleb128 0x6
 1790 0111 39020000 		.4byte	.LASF24
 1791 0115 03       		.byte	0x3
 1792 0116 39       		.byte	0x39
 1793 0117 5F010000 		.4byte	0x15f
 1794 011b 20       		.byte	0x20
 1795 011c 06       		.uleb128 0x6
 1796 011d C2000000 		.4byte	.LASF25
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 84


 1797 0121 03       		.byte	0x3
 1798 0122 3A       		.byte	0x3a
 1799 0123 7F010000 		.4byte	0x17f
 1800 0127 24       		.byte	0x24
 1801 0128 06       		.uleb128 0x6
 1802 0129 7F080000 		.4byte	.LASF26
 1803 012d 03       		.byte	0x3
 1804 012e 3B       		.byte	0x3b
 1805 012f 90010000 		.4byte	0x190
 1806 0133 28       		.byte	0x28
 1807 0134 06       		.uleb128 0x6
 1808 0135 B2060000 		.4byte	.LASF27
 1809 0139 03       		.byte	0x3
 1810 013a 3C       		.byte	0x3c
 1811 013b 7F010000 		.4byte	0x17f
 1812 013f 2C       		.byte	0x2c
 1813 0140 06       		.uleb128 0x6
 1814 0141 F5030000 		.4byte	.LASF28
 1815 0145 03       		.byte	0x3
 1816 0146 3D       		.byte	0x3d
 1817 0147 AA010000 		.4byte	0x1aa
 1818 014b 30       		.byte	0x30
 1819 014c 06       		.uleb128 0x6
 1820 014d 1C090000 		.4byte	.LASF29
 1821 0151 03       		.byte	0x3
 1822 0152 3E       		.byte	0x3e
 1823 0153 C5010000 		.4byte	0x1c5
 1824 0157 34       		.byte	0x34
 1825 0158 00       		.byte	0
 1826 0159 07       		.uleb128 0x7
 1827 015a 04       		.byte	0x4
 1828 015b 6B000000 		.4byte	0x6b
 1829 015f 07       		.uleb128 0x7
 1830 0160 04       		.byte	0x4
 1831 0161 65010000 		.4byte	0x165
 1832 0165 08       		.uleb128 0x8
 1833 0166 6B000000 		.4byte	0x6b
 1834 016a 07       		.uleb128 0x7
 1835 016b 04       		.byte	0x4
 1836 016c 81000000 		.4byte	0x81
 1837 0170 09       		.uleb128 0x9
 1838 0171 76000000 		.4byte	0x76
 1839 0175 7F010000 		.4byte	0x17f
 1840 0179 0A       		.uleb128 0xa
 1841 017a 81000000 		.4byte	0x81
 1842 017e 00       		.byte	0
 1843 017f 07       		.uleb128 0x7
 1844 0180 04       		.byte	0x4
 1845 0181 70010000 		.4byte	0x170
 1846 0185 0B       		.uleb128 0xb
 1847 0186 90010000 		.4byte	0x190
 1848 018a 0A       		.uleb128 0xa
 1849 018b 81000000 		.4byte	0x81
 1850 018f 00       		.byte	0
 1851 0190 07       		.uleb128 0x7
 1852 0191 04       		.byte	0x4
 1853 0192 85010000 		.4byte	0x185
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 85


 1854 0196 09       		.uleb128 0x9
 1855 0197 81000000 		.4byte	0x81
 1856 019b AA010000 		.4byte	0x1aa
 1857 019f 0A       		.uleb128 0xa
 1858 01a0 5F010000 		.4byte	0x15f
 1859 01a4 0A       		.uleb128 0xa
 1860 01a5 81000000 		.4byte	0x81
 1861 01a9 00       		.byte	0
 1862 01aa 07       		.uleb128 0x7
 1863 01ab 04       		.byte	0x4
 1864 01ac 96010000 		.4byte	0x196
 1865 01b0 0B       		.uleb128 0xb
 1866 01b1 C5010000 		.4byte	0x1c5
 1867 01b5 0A       		.uleb128 0xa
 1868 01b6 59010000 		.4byte	0x159
 1869 01ba 0A       		.uleb128 0xa
 1870 01bb 81000000 		.4byte	0x81
 1871 01bf 0A       		.uleb128 0xa
 1872 01c0 81000000 		.4byte	0x81
 1873 01c4 00       		.byte	0
 1874 01c5 07       		.uleb128 0x7
 1875 01c6 04       		.byte	0x4
 1876 01c7 B0010000 		.4byte	0x1b0
 1877 01cb 04       		.uleb128 0x4
 1878 01cc 8A080000 		.4byte	.LASF30
 1879 01d0 03       		.byte	0x3
 1880 01d1 3F       		.byte	0x3f
 1881 01d2 A8000000 		.4byte	0xa8
 1882 01d6 05       		.uleb128 0x5
 1883 01d7 0C       		.byte	0xc
 1884 01d8 03       		.byte	0x3
 1885 01d9 41       		.byte	0x41
 1886 01da 27020000 		.4byte	0x227
 1887 01de 06       		.uleb128 0x6
 1888 01df DD080000 		.4byte	.LASF31
 1889 01e3 03       		.byte	0x3
 1890 01e4 43       		.byte	0x43
 1891 01e5 6B000000 		.4byte	0x6b
 1892 01e9 00       		.byte	0
 1893 01ea 06       		.uleb128 0x6
 1894 01eb DF090000 		.4byte	.LASF32
 1895 01ef 03       		.byte	0x3
 1896 01f0 44       		.byte	0x44
 1897 01f1 6B000000 		.4byte	0x6b
 1898 01f5 01       		.byte	0x1
 1899 01f6 06       		.uleb128 0x6
 1900 01f7 51030000 		.4byte	.LASF33
 1901 01fb 03       		.byte	0x3
 1902 01fc 45       		.byte	0x45
 1903 01fd 6B000000 		.4byte	0x6b
 1904 0201 02       		.byte	0x2
 1905 0202 06       		.uleb128 0x6
 1906 0203 41030000 		.4byte	.LASF34
 1907 0207 03       		.byte	0x3
 1908 0208 46       		.byte	0x46
 1909 0209 76000000 		.4byte	0x76
 1910 020d 04       		.byte	0x4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 86


 1911 020e 06       		.uleb128 0x6
 1912 020f 0C050000 		.4byte	.LASF35
 1913 0213 03       		.byte	0x3
 1914 0214 47       		.byte	0x47
 1915 0215 76000000 		.4byte	0x76
 1916 0219 06       		.byte	0x6
 1917 021a 06       		.uleb128 0x6
 1918 021b FA040000 		.4byte	.LASF36
 1919 021f 03       		.byte	0x3
 1920 0220 48       		.byte	0x48
 1921 0221 27020000 		.4byte	0x227
 1922 0225 08       		.byte	0x8
 1923 0226 00       		.byte	0
 1924 0227 07       		.uleb128 0x7
 1925 0228 04       		.byte	0x4
 1926 0229 2D020000 		.4byte	0x22d
 1927 022d 08       		.uleb128 0x8
 1928 022e CB010000 		.4byte	0x1cb
 1929 0232 04       		.uleb128 0x4
 1930 0233 28070000 		.4byte	.LASF37
 1931 0237 03       		.byte	0x3
 1932 0238 49       		.byte	0x49
 1933 0239 D6010000 		.4byte	0x1d6
 1934 023d 0C       		.uleb128 0xc
 1935 023e 16070000 		.4byte	.LASF38
 1936 0242 01       		.byte	0x1
 1937 0243 9E       		.byte	0x9e
 1938 0244 00000000 		.4byte	.LFB34
 1939 0248 40000000 		.4byte	.LFE34-.LFB34
 1940 024c 01       		.uleb128 0x1
 1941 024d 9C       		.byte	0x9c
 1942 024e 71020000 		.4byte	0x271
 1943 0252 0D       		.uleb128 0xd
 1944 0253 3D040000 		.4byte	.LASF40
 1945 0257 01       		.byte	0x1
 1946 0258 9E       		.byte	0x9e
 1947 0259 81000000 		.4byte	0x81
 1948 025d 00000000 		.4byte	.LLST0
 1949 0261 0E       		.uleb128 0xe
 1950 0262 F5060000 		.4byte	.LASF42
 1951 0266 01       		.byte	0x1
 1952 0267 A2       		.byte	0xa2
 1953 0268 6B000000 		.4byte	0x6b
 1954 026c 21000000 		.4byte	.LLST1
 1955 0270 00       		.byte	0
 1956 0271 0C       		.uleb128 0xc
 1957 0272 5C050000 		.4byte	.LASF39
 1958 0276 01       		.byte	0x1
 1959 0277 EA       		.byte	0xea
 1960 0278 00000000 		.4byte	.LFB35
 1961 027c 18000000 		.4byte	.LFE35-.LFB35
 1962 0280 01       		.uleb128 0x1
 1963 0281 9C       		.byte	0x9c
 1964 0282 C3020000 		.4byte	0x2c3
 1965 0286 0D       		.uleb128 0xd
 1966 0287 3D040000 		.4byte	.LASF40
 1967 028b 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 87


 1968 028c EA       		.byte	0xea
 1969 028d 81000000 		.4byte	0x81
 1970 0291 5C000000 		.4byte	.LLST2
 1971 0295 0F       		.uleb128 0xf
 1972 0296 08000000 		.4byte	.LVL6
 1973 029a 3B0D0000 		.4byte	0xd3b
 1974 029e A9020000 		.4byte	0x2a9
 1975 02a2 10       		.uleb128 0x10
 1976 02a3 01       		.uleb128 0x1
 1977 02a4 50       		.byte	0x50
 1978 02a5 02       		.uleb128 0x2
 1979 02a6 74       		.byte	0x74
 1980 02a7 00       		.sleb128 0
 1981 02a8 00       		.byte	0
 1982 02a9 11       		.uleb128 0x11
 1983 02aa 0C000000 		.4byte	.LVL7
 1984 02ae 4C0D0000 		.4byte	0xd4c
 1985 02b2 12       		.uleb128 0x12
 1986 02b3 16000000 		.4byte	.LVL8
 1987 02b7 3D020000 		.4byte	0x23d
 1988 02bb 10       		.uleb128 0x10
 1989 02bc 01       		.uleb128 0x1
 1990 02bd 50       		.byte	0x50
 1991 02be 02       		.uleb128 0x2
 1992 02bf 74       		.byte	0x74
 1993 02c0 00       		.sleb128 0
 1994 02c1 00       		.byte	0
 1995 02c2 00       		.byte	0
 1996 02c3 13       		.uleb128 0x13
 1997 02c4 92060000 		.4byte	.LASF41
 1998 02c8 01       		.byte	0x1
 1999 02c9 0F01     		.2byte	0x10f
 2000 02cb 00000000 		.4byte	.LFB36
 2001 02cf 14000000 		.4byte	.LFE36-.LFB36
 2002 02d3 01       		.uleb128 0x1
 2003 02d4 9C       		.byte	0x9c
 2004 02d5 F8020000 		.4byte	0x2f8
 2005 02d9 14       		.uleb128 0x14
 2006 02da 6900     		.ascii	"i\000"
 2007 02dc 01       		.byte	0x1
 2008 02dd 1101     		.2byte	0x111
 2009 02df 81000000 		.4byte	0x81
 2010 02e3 88000000 		.4byte	.LLST3
 2011 02e7 12       		.uleb128 0x12
 2012 02e8 0C000000 		.4byte	.LVL12
 2013 02ec 71020000 		.4byte	0x271
 2014 02f0 10       		.uleb128 0x10
 2015 02f1 01       		.uleb128 0x1
 2016 02f2 50       		.byte	0x50
 2017 02f3 02       		.uleb128 0x2
 2018 02f4 74       		.byte	0x74
 2019 02f5 00       		.sleb128 0
 2020 02f6 00       		.byte	0
 2021 02f7 00       		.byte	0
 2022 02f8 13       		.uleb128 0x13
 2023 02f9 BB010000 		.4byte	.LASF43
 2024 02fd 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 88


 2025 02fe 3201     		.2byte	0x132
 2026 0300 00000000 		.4byte	.LFB37
 2027 0304 34000000 		.4byte	.LFE37-.LFB37
 2028 0308 01       		.uleb128 0x1
 2029 0309 9C       		.byte	0x9c
 2030 030a 69030000 		.4byte	0x369
 2031 030e 14       		.uleb128 0x14
 2032 030f 6900     		.ascii	"i\000"
 2033 0311 01       		.byte	0x1
 2034 0312 3401     		.2byte	0x134
 2035 0314 81000000 		.4byte	0x81
 2036 0318 A7000000 		.4byte	.LLST4
 2037 031c 15       		.uleb128 0x15
 2038 031d 06070000 		.4byte	.LASF44
 2039 0321 01       		.byte	0x1
 2040 0322 3501     		.2byte	0x135
 2041 0324 81000000 		.4byte	0x81
 2042 0328 BA000000 		.4byte	.LLST5
 2043 032c 11       		.uleb128 0x11
 2044 032d 06000000 		.4byte	.LVL15
 2045 0331 570D0000 		.4byte	0xd57
 2046 0335 11       		.uleb128 0x11
 2047 0336 0A000000 		.4byte	.LVL16
 2048 033a 4C0D0000 		.4byte	0xd4c
 2049 033e 0F       		.uleb128 0xf
 2050 033f 1C000000 		.4byte	.LVL18
 2051 0343 5E0D0000 		.4byte	0xd5e
 2052 0347 58030000 		.4byte	0x358
 2053 034b 10       		.uleb128 0x10
 2054 034c 01       		.uleb128 0x1
 2055 034d 51       		.byte	0x51
 2056 034e 02       		.uleb128 0x2
 2057 034f 74       		.byte	0x74
 2058 0350 00       		.sleb128 0
 2059 0351 10       		.uleb128 0x10
 2060 0352 01       		.uleb128 0x1
 2061 0353 50       		.byte	0x50
 2062 0354 02       		.uleb128 0x2
 2063 0355 75       		.byte	0x75
 2064 0356 00       		.sleb128 0
 2065 0357 00       		.byte	0
 2066 0358 12       		.uleb128 0x12
 2067 0359 26000000 		.4byte	.LVL20
 2068 035d 3D020000 		.4byte	0x23d
 2069 0361 10       		.uleb128 0x10
 2070 0362 01       		.uleb128 0x1
 2071 0363 50       		.byte	0x50
 2072 0364 02       		.uleb128 0x2
 2073 0365 74       		.byte	0x74
 2074 0366 00       		.sleb128 0
 2075 0367 00       		.byte	0
 2076 0368 00       		.byte	0
 2077 0369 16       		.uleb128 0x16
 2078 036a 5A020000 		.4byte	.LASF47
 2079 036e 01       		.byte	0x1
 2080 036f C602     		.2byte	0x2c6
 2081 0371 76000000 		.4byte	0x76
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 89


 2082 0375 00000000 		.4byte	.LFB42
 2083 0379 0C000000 		.4byte	.LFE42-.LFB42
 2084 037d 01       		.uleb128 0x1
 2085 037e 9C       		.byte	0x9c
 2086 037f 94030000 		.4byte	0x394
 2087 0383 17       		.uleb128 0x17
 2088 0384 3D040000 		.4byte	.LASF40
 2089 0388 01       		.byte	0x1
 2090 0389 C602     		.2byte	0x2c6
 2091 038b 81000000 		.4byte	0x81
 2092 038f CD000000 		.4byte	.LLST6
 2093 0393 00       		.byte	0
 2094 0394 13       		.uleb128 0x13
 2095 0395 C3060000 		.4byte	.LASF45
 2096 0399 01       		.byte	0x1
 2097 039a E102     		.2byte	0x2e1
 2098 039c 00000000 		.4byte	.LFB43
 2099 03a0 0C000000 		.4byte	.LFE43-.LFB43
 2100 03a4 01       		.uleb128 0x1
 2101 03a5 9C       		.byte	0x9c
 2102 03a6 C9030000 		.4byte	0x3c9
 2103 03aa 17       		.uleb128 0x17
 2104 03ab 3D040000 		.4byte	.LASF40
 2105 03af 01       		.byte	0x1
 2106 03b0 E102     		.2byte	0x2e1
 2107 03b2 81000000 		.4byte	0x81
 2108 03b6 EE000000 		.4byte	.LLST7
 2109 03ba 18       		.uleb128 0x18
 2110 03bb 16040000 		.4byte	.LASF46
 2111 03bf 01       		.byte	0x1
 2112 03c0 E102     		.2byte	0x2e1
 2113 03c2 76000000 		.4byte	0x76
 2114 03c6 01       		.uleb128 0x1
 2115 03c7 51       		.byte	0x51
 2116 03c8 00       		.byte	0
 2117 03c9 16       		.uleb128 0x16
 2118 03ca E0040000 		.4byte	.LASF48
 2119 03ce 01       		.byte	0x1
 2120 03cf FC02     		.2byte	0x2fc
 2121 03d1 6B000000 		.4byte	0x6b
 2122 03d5 00000000 		.4byte	.LFB44
 2123 03d9 0C000000 		.4byte	.LFE44-.LFB44
 2124 03dd 01       		.uleb128 0x1
 2125 03de 9C       		.byte	0x9c
 2126 03df F4030000 		.4byte	0x3f4
 2127 03e3 17       		.uleb128 0x17
 2128 03e4 3D040000 		.4byte	.LASF40
 2129 03e8 01       		.byte	0x1
 2130 03e9 FC02     		.2byte	0x2fc
 2131 03eb 81000000 		.4byte	0x81
 2132 03ef 0F010000 		.4byte	.LLST8
 2133 03f3 00       		.byte	0
 2134 03f4 13       		.uleb128 0x13
 2135 03f5 02090000 		.4byte	.LASF49
 2136 03f9 01       		.byte	0x1
 2137 03fa 1703     		.2byte	0x317
 2138 03fc 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 90


 2139 0400 0C000000 		.4byte	.LFE45-.LFB45
 2140 0404 01       		.uleb128 0x1
 2141 0405 9C       		.byte	0x9c
 2142 0406 27040000 		.4byte	0x427
 2143 040a 18       		.uleb128 0x18
 2144 040b 3D040000 		.4byte	.LASF40
 2145 040f 01       		.byte	0x1
 2146 0410 1703     		.2byte	0x317
 2147 0412 81000000 		.4byte	0x81
 2148 0416 01       		.uleb128 0x1
 2149 0417 50       		.byte	0x50
 2150 0418 18       		.uleb128 0x18
 2151 0419 61030000 		.4byte	.LASF50
 2152 041d 01       		.byte	0x1
 2153 041e 1703     		.2byte	0x317
 2154 0420 6B000000 		.4byte	0x6b
 2155 0424 01       		.uleb128 0x1
 2156 0425 51       		.byte	0x51
 2157 0426 00       		.byte	0
 2158 0427 16       		.uleb128 0x16
 2159 0428 63080000 		.4byte	.LASF51
 2160 042c 01       		.byte	0x1
 2161 042d 3203     		.2byte	0x332
 2162 042f 6B000000 		.4byte	0x6b
 2163 0433 00000000 		.4byte	.LFB46
 2164 0437 0C000000 		.4byte	.LFE46-.LFB46
 2165 043b 01       		.uleb128 0x1
 2166 043c 9C       		.byte	0x9c
 2167 043d 52040000 		.4byte	0x452
 2168 0441 17       		.uleb128 0x17
 2169 0442 F5060000 		.4byte	.LASF42
 2170 0446 01       		.byte	0x1
 2171 0447 3203     		.2byte	0x332
 2172 0449 81000000 		.4byte	0x81
 2173 044d 30010000 		.4byte	.LLST9
 2174 0451 00       		.byte	0
 2175 0452 16       		.uleb128 0x16
 2176 0453 A0010000 		.4byte	.LASF52
 2177 0457 01       		.byte	0x1
 2178 0458 4D03     		.2byte	0x34d
 2179 045a 6B000000 		.4byte	0x6b
 2180 045e 00000000 		.4byte	.LFB47
 2181 0462 0C000000 		.4byte	.LFE47-.LFB47
 2182 0466 01       		.uleb128 0x1
 2183 0467 9C       		.byte	0x9c
 2184 0468 7D040000 		.4byte	0x47d
 2185 046c 17       		.uleb128 0x17
 2186 046d F5060000 		.4byte	.LASF42
 2187 0471 01       		.byte	0x1
 2188 0472 4D03     		.2byte	0x34d
 2189 0474 81000000 		.4byte	0x81
 2190 0478 51010000 		.4byte	.LLST10
 2191 047c 00       		.byte	0
 2192 047d 16       		.uleb128 0x16
 2193 047e 2C080000 		.4byte	.LASF53
 2194 0482 01       		.byte	0x1
 2195 0483 6903     		.2byte	0x369
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 91


 2196 0485 6B000000 		.4byte	0x6b
 2197 0489 00000000 		.4byte	.LFB48
 2198 048d 0C000000 		.4byte	.LFE48-.LFB48
 2199 0491 01       		.uleb128 0x1
 2200 0492 9C       		.byte	0x9c
 2201 0493 A8040000 		.4byte	0x4a8
 2202 0497 17       		.uleb128 0x17
 2203 0498 F5060000 		.4byte	.LASF42
 2204 049c 01       		.byte	0x1
 2205 049d 6903     		.2byte	0x369
 2206 049f 81000000 		.4byte	0x81
 2207 04a3 72010000 		.4byte	.LLST11
 2208 04a7 00       		.byte	0
 2209 04a8 16       		.uleb128 0x16
 2210 04a9 4E000000 		.4byte	.LASF54
 2211 04ad 01       		.byte	0x1
 2212 04ae 8503     		.2byte	0x385
 2213 04b0 6B000000 		.4byte	0x6b
 2214 04b4 00000000 		.4byte	.LFB49
 2215 04b8 0C000000 		.4byte	.LFE49-.LFB49
 2216 04bc 01       		.uleb128 0x1
 2217 04bd 9C       		.byte	0x9c
 2218 04be D3040000 		.4byte	0x4d3
 2219 04c2 17       		.uleb128 0x17
 2220 04c3 F5060000 		.4byte	.LASF42
 2221 04c7 01       		.byte	0x1
 2222 04c8 8503     		.2byte	0x385
 2223 04ca 81000000 		.4byte	0x81
 2224 04ce 93010000 		.4byte	.LLST12
 2225 04d2 00       		.byte	0
 2226 04d3 13       		.uleb128 0x13
 2227 04d4 10030000 		.4byte	.LASF55
 2228 04d8 01       		.byte	0x1
 2229 04d9 A603     		.2byte	0x3a6
 2230 04db 00000000 		.4byte	.LFB50
 2231 04df 0C000000 		.4byte	.LFE50-.LFB50
 2232 04e3 01       		.uleb128 0x1
 2233 04e4 9C       		.byte	0x9c
 2234 04e5 08050000 		.4byte	0x508
 2235 04e9 17       		.uleb128 0x17
 2236 04ea F5060000 		.4byte	.LASF42
 2237 04ee 01       		.byte	0x1
 2238 04ef A603     		.2byte	0x3a6
 2239 04f1 81000000 		.4byte	0x81
 2240 04f5 B4010000 		.4byte	.LLST13
 2241 04f9 18       		.uleb128 0x18
 2242 04fa 61030000 		.4byte	.LASF50
 2243 04fe 01       		.byte	0x1
 2244 04ff A603     		.2byte	0x3a6
 2245 0501 6B000000 		.4byte	0x6b
 2246 0505 01       		.uleb128 0x1
 2247 0506 51       		.byte	0x51
 2248 0507 00       		.byte	0
 2249 0508 13       		.uleb128 0x13
 2250 0509 74070000 		.4byte	.LASF56
 2251 050d 01       		.byte	0x1
 2252 050e C203     		.2byte	0x3c2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 92


 2253 0510 00000000 		.4byte	.LFB51
 2254 0514 0C000000 		.4byte	.LFE51-.LFB51
 2255 0518 01       		.uleb128 0x1
 2256 0519 9C       		.byte	0x9c
 2257 051a 3B050000 		.4byte	0x53b
 2258 051e 18       		.uleb128 0x18
 2259 051f F5060000 		.4byte	.LASF42
 2260 0523 01       		.byte	0x1
 2261 0524 C203     		.2byte	0x3c2
 2262 0526 81000000 		.4byte	0x81
 2263 052a 01       		.uleb128 0x1
 2264 052b 50       		.byte	0x50
 2265 052c 18       		.uleb128 0x18
 2266 052d 61030000 		.4byte	.LASF50
 2267 0531 01       		.byte	0x1
 2268 0532 C203     		.2byte	0x3c2
 2269 0534 6B000000 		.4byte	0x6b
 2270 0538 01       		.uleb128 0x1
 2271 0539 51       		.byte	0x51
 2272 053a 00       		.byte	0
 2273 053b 13       		.uleb128 0x13
 2274 053c 7E050000 		.4byte	.LASF57
 2275 0540 01       		.byte	0x1
 2276 0541 DE03     		.2byte	0x3de
 2277 0543 00000000 		.4byte	.LFB52
 2278 0547 0C000000 		.4byte	.LFE52-.LFB52
 2279 054b 01       		.uleb128 0x1
 2280 054c 9C       		.byte	0x9c
 2281 054d 6E050000 		.4byte	0x56e
 2282 0551 18       		.uleb128 0x18
 2283 0552 F5060000 		.4byte	.LASF42
 2284 0556 01       		.byte	0x1
 2285 0557 DE03     		.2byte	0x3de
 2286 0559 81000000 		.4byte	0x81
 2287 055d 01       		.uleb128 0x1
 2288 055e 50       		.byte	0x50
 2289 055f 18       		.uleb128 0x18
 2290 0560 61030000 		.4byte	.LASF50
 2291 0564 01       		.byte	0x1
 2292 0565 DE03     		.2byte	0x3de
 2293 0567 6B000000 		.4byte	0x6b
 2294 056b 01       		.uleb128 0x1
 2295 056c 51       		.byte	0x51
 2296 056d 00       		.byte	0
 2297 056e 13       		.uleb128 0x13
 2298 056f 81000000 		.4byte	.LASF58
 2299 0573 01       		.byte	0x1
 2300 0574 FB03     		.2byte	0x3fb
 2301 0576 00000000 		.4byte	.LFB53
 2302 057a 0C000000 		.4byte	.LFE53-.LFB53
 2303 057e 01       		.uleb128 0x1
 2304 057f 9C       		.byte	0x9c
 2305 0580 A1050000 		.4byte	0x5a1
 2306 0584 18       		.uleb128 0x18
 2307 0585 F5060000 		.4byte	.LASF42
 2308 0589 01       		.byte	0x1
 2309 058a FB03     		.2byte	0x3fb
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 93


 2310 058c 81000000 		.4byte	0x81
 2311 0590 01       		.uleb128 0x1
 2312 0591 50       		.byte	0x50
 2313 0592 18       		.uleb128 0x18
 2314 0593 61030000 		.4byte	.LASF50
 2315 0597 01       		.byte	0x1
 2316 0598 FB03     		.2byte	0x3fb
 2317 059a 6B000000 		.4byte	0x6b
 2318 059e 01       		.uleb128 0x1
 2319 059f 51       		.byte	0x51
 2320 05a0 00       		.byte	0
 2321 05a1 13       		.uleb128 0x13
 2322 05a2 2C030000 		.4byte	.LASF59
 2323 05a6 01       		.byte	0x1
 2324 05a7 1704     		.2byte	0x417
 2325 05a9 00000000 		.4byte	.LFB54
 2326 05ad 0C000000 		.4byte	.LFE54-.LFB54
 2327 05b1 01       		.uleb128 0x1
 2328 05b2 9C       		.byte	0x9c
 2329 05b3 D4050000 		.4byte	0x5d4
 2330 05b7 18       		.uleb128 0x18
 2331 05b8 F5060000 		.4byte	.LASF42
 2332 05bc 01       		.byte	0x1
 2333 05bd 1704     		.2byte	0x417
 2334 05bf 81000000 		.4byte	0x81
 2335 05c3 01       		.uleb128 0x1
 2336 05c4 50       		.byte	0x50
 2337 05c5 18       		.uleb128 0x18
 2338 05c6 61030000 		.4byte	.LASF50
 2339 05ca 01       		.byte	0x1
 2340 05cb 1704     		.2byte	0x417
 2341 05cd 6B000000 		.4byte	0x6b
 2342 05d1 01       		.uleb128 0x1
 2343 05d2 51       		.byte	0x51
 2344 05d3 00       		.byte	0
 2345 05d4 13       		.uleb128 0x13
 2346 05d5 67030000 		.4byte	.LASF60
 2347 05d9 01       		.byte	0x1
 2348 05da 3304     		.2byte	0x433
 2349 05dc 00000000 		.4byte	.LFB55
 2350 05e0 0C000000 		.4byte	.LFE55-.LFB55
 2351 05e4 01       		.uleb128 0x1
 2352 05e5 9C       		.byte	0x9c
 2353 05e6 09060000 		.4byte	0x609
 2354 05ea 17       		.uleb128 0x17
 2355 05eb 3D040000 		.4byte	.LASF40
 2356 05ef 01       		.byte	0x1
 2357 05f0 3304     		.2byte	0x433
 2358 05f2 81000000 		.4byte	0x81
 2359 05f6 D5010000 		.4byte	.LLST14
 2360 05fa 18       		.uleb128 0x18
 2361 05fb 61030000 		.4byte	.LASF50
 2362 05ff 01       		.byte	0x1
 2363 0600 3304     		.2byte	0x433
 2364 0602 6B000000 		.4byte	0x6b
 2365 0606 01       		.uleb128 0x1
 2366 0607 51       		.byte	0x51
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 94


 2367 0608 00       		.byte	0
 2368 0609 16       		.uleb128 0x16
 2369 060a 9B050000 		.4byte	.LASF61
 2370 060e 01       		.byte	0x1
 2371 060f 6104     		.2byte	0x461
 2372 0611 81000000 		.4byte	0x81
 2373 0615 00000000 		.4byte	.LFB56
 2374 0619 A8000000 		.4byte	.LFE56-.LFB56
 2375 061d 01       		.uleb128 0x1
 2376 061e 9C       		.byte	0x9c
 2377 061f F4060000 		.4byte	0x6f4
 2378 0623 17       		.uleb128 0x17
 2379 0624 3D040000 		.4byte	.LASF40
 2380 0628 01       		.byte	0x1
 2381 0629 6104     		.2byte	0x461
 2382 062b 81000000 		.4byte	0x81
 2383 062f F6010000 		.4byte	.LLST15
 2384 0633 19       		.uleb128 0x19
 2385 0634 F5060000 		.4byte	.LASF42
 2386 0638 01       		.byte	0x1
 2387 0639 6304     		.2byte	0x463
 2388 063b 6B000000 		.4byte	0x6b
 2389 063f 15       		.uleb128 0x15
 2390 0640 03050000 		.4byte	.LASF62
 2391 0644 01       		.byte	0x1
 2392 0645 6404     		.2byte	0x464
 2393 0647 6B000000 		.4byte	0x6b
 2394 064b 22020000 		.4byte	.LLST16
 2395 064f 19       		.uleb128 0x19
 2396 0650 55080000 		.4byte	.LASF63
 2397 0654 01       		.byte	0x1
 2398 0655 6504     		.2byte	0x465
 2399 0657 6B000000 		.4byte	0x6b
 2400 065b 15       		.uleb128 0x15
 2401 065c 71000000 		.4byte	.LASF64
 2402 0660 01       		.byte	0x1
 2403 0661 6704     		.2byte	0x467
 2404 0663 6B000000 		.4byte	0x6b
 2405 0667 47020000 		.4byte	.LLST17
 2406 066b 15       		.uleb128 0x15
 2407 066c 05030000 		.4byte	.LASF65
 2408 0670 01       		.byte	0x1
 2409 0671 6804     		.2byte	0x468
 2410 0673 6B000000 		.4byte	0x6b
 2411 0677 89020000 		.4byte	.LLST18
 2412 067b 0F       		.uleb128 0xf
 2413 067c 24000000 		.4byte	.LVL53
 2414 0680 5E0D0000 		.4byte	0xd5e
 2415 0684 98060000 		.4byte	0x698
 2416 0688 10       		.uleb128 0x10
 2417 0689 01       		.uleb128 0x1
 2418 068a 51       		.byte	0x51
 2419 068b 02       		.uleb128 0x2
 2420 068c 74       		.byte	0x74
 2421 068d 00       		.sleb128 0
 2422 068e 10       		.uleb128 0x10
 2423 068f 01       		.uleb128 0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 95


 2424 0690 50       		.byte	0x50
 2425 0691 05       		.uleb128 0x5
 2426 0692 03       		.byte	0x3
 2427 0693 40000000 		.4byte	.LANCHOR0+64
 2428 0697 00       		.byte	0
 2429 0698 0F       		.uleb128 0xf
 2430 0699 42000000 		.4byte	.LVL55
 2431 069d 780D0000 		.4byte	0xd78
 2432 06a1 B8060000 		.4byte	0x6b8
 2433 06a5 10       		.uleb128 0x10
 2434 06a6 01       		.uleb128 0x1
 2435 06a7 52       		.byte	0x52
 2436 06a8 01       		.uleb128 0x1
 2437 06a9 30       		.byte	0x30
 2438 06aa 10       		.uleb128 0x10
 2439 06ab 01       		.uleb128 0x1
 2440 06ac 51       		.byte	0x51
 2441 06ad 02       		.uleb128 0x2
 2442 06ae 74       		.byte	0x74
 2443 06af 00       		.sleb128 0
 2444 06b0 10       		.uleb128 0x10
 2445 06b1 01       		.uleb128 0x1
 2446 06b2 50       		.byte	0x50
 2447 06b3 03       		.uleb128 0x3
 2448 06b4 76       		.byte	0x76
 2449 06b5 C000     		.sleb128 64
 2450 06b7 00       		.byte	0
 2451 06b8 0F       		.uleb128 0xf
 2452 06b9 72000000 		.4byte	.LVL58
 2453 06bd 780D0000 		.4byte	0xd78
 2454 06c1 DA060000 		.4byte	0x6da
 2455 06c5 10       		.uleb128 0x10
 2456 06c6 01       		.uleb128 0x1
 2457 06c7 52       		.byte	0x52
 2458 06c8 01       		.uleb128 0x1
 2459 06c9 31       		.byte	0x31
 2460 06ca 10       		.uleb128 0x10
 2461 06cb 01       		.uleb128 0x1
 2462 06cc 51       		.byte	0x51
 2463 06cd 02       		.uleb128 0x2
 2464 06ce 74       		.byte	0x74
 2465 06cf 00       		.sleb128 0
 2466 06d0 10       		.uleb128 0x10
 2467 06d1 01       		.uleb128 0x1
 2468 06d2 50       		.byte	0x50
 2469 06d3 05       		.uleb128 0x5
 2470 06d4 03       		.byte	0x3
 2471 06d5 40000000 		.4byte	.LANCHOR0+64
 2472 06d9 00       		.byte	0
 2473 06da 12       		.uleb128 0x12
 2474 06db 86000000 		.4byte	.LVL59
 2475 06df 5E0D0000 		.4byte	0xd5e
 2476 06e3 10       		.uleb128 0x10
 2477 06e4 01       		.uleb128 0x1
 2478 06e5 51       		.byte	0x51
 2479 06e6 02       		.uleb128 0x2
 2480 06e7 74       		.byte	0x74
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 96


 2481 06e8 00       		.sleb128 0
 2482 06e9 10       		.uleb128 0x10
 2483 06ea 01       		.uleb128 0x1
 2484 06eb 50       		.byte	0x50
 2485 06ec 05       		.uleb128 0x5
 2486 06ed 03       		.byte	0x3
 2487 06ee 40000000 		.4byte	.LANCHOR0+64
 2488 06f2 00       		.byte	0
 2489 06f3 00       		.byte	0
 2490 06f4 16       		.uleb128 0x16
 2491 06f5 67060000 		.4byte	.LASF66
 2492 06f9 01       		.byte	0x1
 2493 06fa B304     		.2byte	0x4b3
 2494 06fc 81000000 		.4byte	0x81
 2495 0700 00000000 		.4byte	.LFB57
 2496 0704 2C000000 		.4byte	.LFE57-.LFB57
 2497 0708 01       		.uleb128 0x1
 2498 0709 9C       		.byte	0x9c
 2499 070a 5F070000 		.4byte	0x75f
 2500 070e 17       		.uleb128 0x17
 2501 070f F5060000 		.4byte	.LASF42
 2502 0713 01       		.byte	0x1
 2503 0714 B304     		.2byte	0x4b3
 2504 0716 81000000 		.4byte	0x81
 2505 071a B6020000 		.4byte	.LLST19
 2506 071e 15       		.uleb128 0x15
 2507 071f 30020000 		.4byte	.LASF67
 2508 0723 01       		.byte	0x1
 2509 0724 B504     		.2byte	0x4b5
 2510 0726 81000000 		.4byte	0x81
 2511 072a D7020000 		.4byte	.LLST20
 2512 072e 15       		.uleb128 0x15
 2513 072f D0080000 		.4byte	.LASF68
 2514 0733 01       		.byte	0x1
 2515 0734 B604     		.2byte	0x4b6
 2516 0736 81000000 		.4byte	0x81
 2517 073a EA020000 		.4byte	.LLST21
 2518 073e 15       		.uleb128 0x15
 2519 073f 73020000 		.4byte	.LASF69
 2520 0743 01       		.byte	0x1
 2521 0744 B704     		.2byte	0x4b7
 2522 0746 81000000 		.4byte	0x81
 2523 074a 25030000 		.4byte	.LLST22
 2524 074e 12       		.uleb128 0x12
 2525 074f 16000000 		.4byte	.LVL68
 2526 0753 09060000 		.4byte	0x609
 2527 0757 10       		.uleb128 0x10
 2528 0758 01       		.uleb128 0x1
 2529 0759 50       		.byte	0x50
 2530 075a 02       		.uleb128 0x2
 2531 075b 74       		.byte	0x74
 2532 075c 00       		.sleb128 0
 2533 075d 00       		.byte	0
 2534 075e 00       		.byte	0
 2535 075f 16       		.uleb128 0x16
 2536 0760 82020000 		.4byte	.LASF70
 2537 0764 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 97


 2538 0765 E104     		.2byte	0x4e1
 2539 0767 81000000 		.4byte	0x81
 2540 076b 00000000 		.4byte	.LFB58
 2541 076f 20000000 		.4byte	.LFE58-.LFB58
 2542 0773 01       		.uleb128 0x1
 2543 0774 9C       		.byte	0x9c
 2544 0775 A8070000 		.4byte	0x7a8
 2545 0779 14       		.uleb128 0x14
 2546 077a 6900     		.ascii	"i\000"
 2547 077c 01       		.byte	0x1
 2548 077d E404     		.2byte	0x4e4
 2549 077f 81000000 		.4byte	0x81
 2550 0783 4F030000 		.4byte	.LLST23
 2551 0787 15       		.uleb128 0x15
 2552 0788 73020000 		.4byte	.LASF69
 2553 078c 01       		.byte	0x1
 2554 078d E504     		.2byte	0x4e5
 2555 078f 81000000 		.4byte	0x81
 2556 0793 6E030000 		.4byte	.LLST24
 2557 0797 12       		.uleb128 0x12
 2558 0798 10000000 		.4byte	.LVL76
 2559 079c F4060000 		.4byte	0x6f4
 2560 07a0 10       		.uleb128 0x10
 2561 07a1 01       		.uleb128 0x1
 2562 07a2 50       		.byte	0x50
 2563 07a3 02       		.uleb128 0x2
 2564 07a4 74       		.byte	0x74
 2565 07a5 00       		.sleb128 0
 2566 07a6 00       		.byte	0
 2567 07a7 00       		.byte	0
 2568 07a8 13       		.uleb128 0x13
 2569 07a9 23050000 		.4byte	.LASF71
 2570 07ad 01       		.byte	0x1
 2571 07ae 1005     		.2byte	0x510
 2572 07b0 00000000 		.4byte	.LFB59
 2573 07b4 2C000000 		.4byte	.LFE59-.LFB59
 2574 07b8 01       		.uleb128 0x1
 2575 07b9 9C       		.byte	0x9c
 2576 07ba 0A080000 		.4byte	0x80a
 2577 07be 17       		.uleb128 0x17
 2578 07bf F5060000 		.4byte	.LASF42
 2579 07c3 01       		.byte	0x1
 2580 07c4 1005     		.2byte	0x510
 2581 07c6 81000000 		.4byte	0x81
 2582 07ca 98030000 		.4byte	.LLST25
 2583 07ce 15       		.uleb128 0x15
 2584 07cf 30020000 		.4byte	.LASF67
 2585 07d3 01       		.byte	0x1
 2586 07d4 1305     		.2byte	0x513
 2587 07d6 6B000000 		.4byte	0x6b
 2588 07da B9030000 		.4byte	.LLST26
 2589 07de 15       		.uleb128 0x15
 2590 07df D0080000 		.4byte	.LASF68
 2591 07e3 01       		.byte	0x1
 2592 07e4 1405     		.2byte	0x514
 2593 07e6 6B000000 		.4byte	0x6b
 2594 07ea FF030000 		.4byte	.LLST27
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 98


 2595 07ee 12       		.uleb128 0x12
 2596 07ef 1A000000 		.4byte	.LVL86
 2597 07f3 780D0000 		.4byte	0xd78
 2598 07f7 10       		.uleb128 0x10
 2599 07f8 01       		.uleb128 0x1
 2600 07f9 52       		.byte	0x52
 2601 07fa 01       		.uleb128 0x1
 2602 07fb 31       		.byte	0x31
 2603 07fc 10       		.uleb128 0x10
 2604 07fd 01       		.uleb128 0x1
 2605 07fe 51       		.byte	0x51
 2606 07ff 02       		.uleb128 0x2
 2607 0800 74       		.byte	0x74
 2608 0801 00       		.sleb128 0
 2609 0802 10       		.uleb128 0x10
 2610 0803 01       		.uleb128 0x1
 2611 0804 50       		.byte	0x50
 2612 0805 02       		.uleb128 0x2
 2613 0806 75       		.byte	0x75
 2614 0807 00       		.sleb128 0
 2615 0808 00       		.byte	0
 2616 0809 00       		.byte	0
 2617 080a 13       		.uleb128 0x13
 2618 080b 19020000 		.4byte	.LASF72
 2619 080f 01       		.byte	0x1
 2620 0810 3B05     		.2byte	0x53b
 2621 0812 00000000 		.4byte	.LFB60
 2622 0816 2C000000 		.4byte	.LFE60-.LFB60
 2623 081a 01       		.uleb128 0x1
 2624 081b 9C       		.byte	0x9c
 2625 081c 6C080000 		.4byte	0x86c
 2626 0820 17       		.uleb128 0x17
 2627 0821 F5060000 		.4byte	.LASF42
 2628 0825 01       		.byte	0x1
 2629 0826 3B05     		.2byte	0x53b
 2630 0828 81000000 		.4byte	0x81
 2631 082c 3A040000 		.4byte	.LLST28
 2632 0830 15       		.uleb128 0x15
 2633 0831 30020000 		.4byte	.LASF67
 2634 0835 01       		.byte	0x1
 2635 0836 3D05     		.2byte	0x53d
 2636 0838 6B000000 		.4byte	0x6b
 2637 083c 5B040000 		.4byte	.LLST29
 2638 0840 15       		.uleb128 0x15
 2639 0841 D0080000 		.4byte	.LASF68
 2640 0845 01       		.byte	0x1
 2641 0846 3E05     		.2byte	0x53e
 2642 0848 6B000000 		.4byte	0x6b
 2643 084c A1040000 		.4byte	.LLST30
 2644 0850 12       		.uleb128 0x12
 2645 0851 1A000000 		.4byte	.LVL96
 2646 0855 780D0000 		.4byte	0xd78
 2647 0859 10       		.uleb128 0x10
 2648 085a 01       		.uleb128 0x1
 2649 085b 52       		.byte	0x52
 2650 085c 01       		.uleb128 0x1
 2651 085d 30       		.byte	0x30
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 99


 2652 085e 10       		.uleb128 0x10
 2653 085f 01       		.uleb128 0x1
 2654 0860 51       		.byte	0x51
 2655 0861 02       		.uleb128 0x2
 2656 0862 74       		.byte	0x74
 2657 0863 00       		.sleb128 0
 2658 0864 10       		.uleb128 0x10
 2659 0865 01       		.uleb128 0x1
 2660 0866 50       		.byte	0x50
 2661 0867 02       		.uleb128 0x2
 2662 0868 75       		.byte	0x75
 2663 0869 00       		.sleb128 0
 2664 086a 00       		.byte	0
 2665 086b 00       		.byte	0
 2666 086c 16       		.uleb128 0x16
 2667 086d E1000000 		.4byte	.LASF73
 2668 0871 01       		.byte	0x1
 2669 0872 5709     		.2byte	0x957
 2670 0874 76000000 		.4byte	0x76
 2671 0878 00000000 		.4byte	.LFB61
 2672 087c 1C000000 		.4byte	.LFE61-.LFB61
 2673 0880 01       		.uleb128 0x1
 2674 0881 9C       		.byte	0x9c
 2675 0882 BE080000 		.4byte	0x8be
 2676 0886 1A       		.uleb128 0x1a
 2677 0887 783100   		.ascii	"x1\000"
 2678 088a 01       		.byte	0x1
 2679 088b 5709     		.2byte	0x957
 2680 088d 76000000 		.4byte	0x76
 2681 0891 DC040000 		.4byte	.LLST31
 2682 0895 1A       		.uleb128 0x1a
 2683 0896 783200   		.ascii	"x2\000"
 2684 0899 01       		.byte	0x1
 2685 089a 5709     		.2byte	0x957
 2686 089c 76000000 		.4byte	0x76
 2687 08a0 08050000 		.4byte	.LLST32
 2688 08a4 1B       		.uleb128 0x1b
 2689 08a5 783300   		.ascii	"x3\000"
 2690 08a8 01       		.byte	0x1
 2691 08a9 5709     		.2byte	0x957
 2692 08ab 76000000 		.4byte	0x76
 2693 08af 01       		.uleb128 0x1
 2694 08b0 52       		.byte	0x52
 2695 08b1 1C       		.uleb128 0x1c
 2696 08b2 746D7000 		.ascii	"tmp\000"
 2697 08b6 01       		.byte	0x1
 2698 08b7 5909     		.2byte	0x959
 2699 08b9 76000000 		.4byte	0x76
 2700 08bd 00       		.byte	0
 2701 08be 16       		.uleb128 0x16
 2702 08bf 84030000 		.4byte	.LASF74
 2703 08c3 01       		.byte	0x1
 2704 08c4 CF09     		.2byte	0x9cf
 2705 08c6 76000000 		.4byte	0x76
 2706 08ca 00000000 		.4byte	.LFB62
 2707 08ce 0A000000 		.4byte	.LFE62-.LFB62
 2708 08d2 01       		.uleb128 0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 100


 2709 08d3 9C       		.byte	0x9c
 2710 08d4 07090000 		.4byte	0x907
 2711 08d8 1A       		.uleb128 0x1a
 2712 08d9 783100   		.ascii	"x1\000"
 2713 08dc 01       		.byte	0x1
 2714 08dd CF09     		.2byte	0x9cf
 2715 08df 76000000 		.4byte	0x76
 2716 08e3 26050000 		.4byte	.LLST33
 2717 08e7 1A       		.uleb128 0x1a
 2718 08e8 783200   		.ascii	"x2\000"
 2719 08eb 01       		.byte	0x1
 2720 08ec CF09     		.2byte	0x9cf
 2721 08ee 76000000 		.4byte	0x76
 2722 08f2 47050000 		.4byte	.LLST34
 2723 08f6 14       		.uleb128 0x14
 2724 08f7 746D7000 		.ascii	"tmp\000"
 2725 08fb 01       		.byte	0x1
 2726 08fc D109     		.2byte	0x9d1
 2727 08fe 81000000 		.4byte	0x81
 2728 0902 68050000 		.4byte	.LLST35
 2729 0906 00       		.byte	0
 2730 0907 13       		.uleb128 0x13
 2731 0908 39050000 		.4byte	.LASF75
 2732 090c 01       		.byte	0x1
 2733 090d 7301     		.2byte	0x173
 2734 090f 00000000 		.4byte	.LFB38
 2735 0913 18010000 		.4byte	.LFE38-.LFB38
 2736 0917 01       		.uleb128 0x1
 2737 0918 9C       		.byte	0x9c
 2738 0919 C2090000 		.4byte	0x9c2
 2739 091d 17       		.uleb128 0x17
 2740 091e 3D040000 		.4byte	.LASF40
 2741 0922 01       		.byte	0x1
 2742 0923 7301     		.2byte	0x173
 2743 0925 81000000 		.4byte	0x81
 2744 0929 95050000 		.4byte	.LLST36
 2745 092d 15       		.uleb128 0x15
 2746 092e 95040000 		.4byte	.LASF76
 2747 0932 01       		.byte	0x1
 2748 0933 7501     		.2byte	0x175
 2749 0935 81000000 		.4byte	0x81
 2750 0939 C1050000 		.4byte	.LLST37
 2751 093d 15       		.uleb128 0x15
 2752 093e CB080000 		.4byte	.LASF77
 2753 0942 01       		.byte	0x1
 2754 0943 7601     		.2byte	0x176
 2755 0945 81000000 		.4byte	0x81
 2756 0949 EA050000 		.4byte	.LLST38
 2757 094d 15       		.uleb128 0x15
 2758 094e B9090000 		.4byte	.LASF78
 2759 0952 01       		.byte	0x1
 2760 0953 7701     		.2byte	0x177
 2761 0955 76000000 		.4byte	0x76
 2762 0959 41060000 		.4byte	.LLST39
 2763 095d 15       		.uleb128 0x15
 2764 095e 07000000 		.4byte	.LASF79
 2765 0962 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 101


 2766 0963 7801     		.2byte	0x178
 2767 0965 76000000 		.4byte	0x76
 2768 0969 5F060000 		.4byte	.LLST40
 2769 096d 19       		.uleb128 0x19
 2770 096e F5060000 		.4byte	.LASF42
 2771 0972 01       		.byte	0x1
 2772 0973 7901     		.2byte	0x179
 2773 0975 6B000000 		.4byte	0x6b
 2774 0979 15       		.uleb128 0x15
 2775 097a DC060000 		.4byte	.LASF80
 2776 097e 01       		.byte	0x1
 2777 097f 7A01     		.2byte	0x17a
 2778 0981 6B000000 		.4byte	0x6b
 2779 0985 BD060000 		.4byte	.LLST41
 2780 0989 0F       		.uleb128 0xf
 2781 098a 32000000 		.4byte	.LVL118
 2782 098e BE080000 		.4byte	0x8be
 2783 0992 9D090000 		.4byte	0x99d
 2784 0996 10       		.uleb128 0x10
 2785 0997 01       		.uleb128 0x1
 2786 0998 50       		.byte	0x50
 2787 0999 02       		.uleb128 0x2
 2788 099a 75       		.byte	0x75
 2789 099b 00       		.sleb128 0
 2790 099c 00       		.byte	0
 2791 099d 0F       		.uleb128 0xf
 2792 099e 42000000 		.4byte	.LVL121
 2793 09a2 930D0000 		.4byte	0xd93
 2794 09a6 B1090000 		.4byte	0x9b1
 2795 09aa 10       		.uleb128 0x10
 2796 09ab 01       		.uleb128 0x1
 2797 09ac 51       		.byte	0x51
 2798 09ad 02       		.uleb128 0x2
 2799 09ae 74       		.byte	0x74
 2800 09af 00       		.sleb128 0
 2801 09b0 00       		.byte	0
 2802 09b1 12       		.uleb128 0x12
 2803 09b2 86000000 		.4byte	.LVL126
 2804 09b6 3D020000 		.4byte	0x23d
 2805 09ba 10       		.uleb128 0x10
 2806 09bb 01       		.uleb128 0x1
 2807 09bc 50       		.byte	0x50
 2808 09bd 02       		.uleb128 0x2
 2809 09be 74       		.byte	0x74
 2810 09bf 00       		.sleb128 0
 2811 09c0 00       		.byte	0
 2812 09c1 00       		.byte	0
 2813 09c2 13       		.uleb128 0x13
 2814 09c3 77040000 		.4byte	.LASF81
 2815 09c7 01       		.byte	0x1
 2816 09c8 3202     		.2byte	0x232
 2817 09ca 00000000 		.4byte	.LFB39
 2818 09ce 10000000 		.4byte	.LFE39-.LFB39
 2819 09d2 01       		.uleb128 0x1
 2820 09d3 9C       		.byte	0x9c
 2821 09d4 0D0A0000 		.4byte	0xa0d
 2822 09d8 17       		.uleb128 0x17
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 102


 2823 09d9 3D040000 		.4byte	.LASF40
 2824 09dd 01       		.byte	0x1
 2825 09de 3202     		.2byte	0x232
 2826 09e0 81000000 		.4byte	0x81
 2827 09e4 E2060000 		.4byte	.LLST42
 2828 09e8 0F       		.uleb128 0xf
 2829 09e9 08000000 		.4byte	.LVL141
 2830 09ed BF0D0000 		.4byte	0xdbf
 2831 09f1 FC090000 		.4byte	0x9fc
 2832 09f5 10       		.uleb128 0x10
 2833 09f6 01       		.uleb128 0x1
 2834 09f7 50       		.byte	0x50
 2835 09f8 02       		.uleb128 0x2
 2836 09f9 74       		.byte	0x74
 2837 09fa 00       		.sleb128 0
 2838 09fb 00       		.byte	0
 2839 09fc 12       		.uleb128 0x12
 2840 09fd 0E000000 		.4byte	.LVL142
 2841 0a01 07090000 		.4byte	0x907
 2842 0a05 10       		.uleb128 0x10
 2843 0a06 01       		.uleb128 0x1
 2844 0a07 50       		.byte	0x50
 2845 0a08 02       		.uleb128 0x2
 2846 0a09 74       		.byte	0x74
 2847 0a0a 00       		.sleb128 0
 2848 0a0b 00       		.byte	0
 2849 0a0c 00       		.byte	0
 2850 0a0d 13       		.uleb128 0x13
 2851 0a0e DF010000 		.4byte	.LASF82
 2852 0a12 01       		.byte	0x1
 2853 0a13 6802     		.2byte	0x268
 2854 0a15 00000000 		.4byte	.LFB40
 2855 0a19 28000000 		.4byte	.LFE40-.LFB40
 2856 0a1d 01       		.uleb128 0x1
 2857 0a1e 9C       		.byte	0x9c
 2858 0a1f 6C0A0000 		.4byte	0xa6c
 2859 0a23 14       		.uleb128 0x14
 2860 0a24 6900     		.ascii	"i\000"
 2861 0a26 01       		.byte	0x1
 2862 0a27 6A02     		.2byte	0x26a
 2863 0a29 81000000 		.4byte	0x81
 2864 0a2d 0E070000 		.4byte	.LLST43
 2865 0a31 15       		.uleb128 0x15
 2866 0a32 06070000 		.4byte	.LASF44
 2867 0a36 01       		.byte	0x1
 2868 0a37 6B02     		.2byte	0x26b
 2869 0a39 81000000 		.4byte	0x81
 2870 0a3d 2D070000 		.4byte	.LLST44
 2871 0a41 0F       		.uleb128 0xf
 2872 0a42 10000000 		.4byte	.LVL146
 2873 0a46 5E0D0000 		.4byte	0xd5e
 2874 0a4a 5B0A0000 		.4byte	0xa5b
 2875 0a4e 10       		.uleb128 0x10
 2876 0a4f 01       		.uleb128 0x1
 2877 0a50 51       		.byte	0x51
 2878 0a51 02       		.uleb128 0x2
 2879 0a52 74       		.byte	0x74
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 103


 2880 0a53 00       		.sleb128 0
 2881 0a54 10       		.uleb128 0x10
 2882 0a55 01       		.uleb128 0x1
 2883 0a56 50       		.byte	0x50
 2884 0a57 02       		.uleb128 0x2
 2885 0a58 75       		.byte	0x75
 2886 0a59 00       		.sleb128 0
 2887 0a5a 00       		.byte	0
 2888 0a5b 12       		.uleb128 0x12
 2889 0a5c 1A000000 		.4byte	.LVL148
 2890 0a60 C2090000 		.4byte	0x9c2
 2891 0a64 10       		.uleb128 0x10
 2892 0a65 01       		.uleb128 0x1
 2893 0a66 50       		.byte	0x50
 2894 0a67 02       		.uleb128 0x2
 2895 0a68 74       		.byte	0x74
 2896 0a69 00       		.sleb128 0
 2897 0a6a 00       		.byte	0
 2898 0a6b 00       		.byte	0
 2899 0a6c 13       		.uleb128 0x13
 2900 0a6d A4000000 		.4byte	.LASF83
 2901 0a71 01       		.byte	0x1
 2902 0a72 9502     		.2byte	0x295
 2903 0a74 00000000 		.4byte	.LFB41
 2904 0a78 34000000 		.4byte	.LFE41-.LFB41
 2905 0a7c 01       		.uleb128 0x1
 2906 0a7d 9C       		.byte	0x9c
 2907 0a7e 0B0B0000 		.4byte	0xb0b
 2908 0a82 17       		.uleb128 0x17
 2909 0a83 F5060000 		.4byte	.LASF42
 2910 0a87 01       		.byte	0x1
 2911 0a88 9502     		.2byte	0x295
 2912 0a8a 81000000 		.4byte	0x81
 2913 0a8e 40070000 		.4byte	.LLST45
 2914 0a92 15       		.uleb128 0x15
 2915 0a93 46070000 		.4byte	.LASF84
 2916 0a97 01       		.byte	0x1
 2917 0a98 9702     		.2byte	0x297
 2918 0a9a 81000000 		.4byte	0x81
 2919 0a9e 61070000 		.4byte	.LLST46
 2920 0aa2 15       		.uleb128 0x15
 2921 0aa3 49080000 		.4byte	.LASF85
 2922 0aa7 01       		.byte	0x1
 2923 0aa8 9802     		.2byte	0x298
 2924 0aaa 81000000 		.4byte	0x81
 2925 0aae 9F070000 		.4byte	.LLST47
 2926 0ab2 15       		.uleb128 0x15
 2927 0ab3 17000000 		.4byte	.LASF86
 2928 0ab7 01       		.byte	0x1
 2929 0ab8 9902     		.2byte	0x299
 2930 0aba 81000000 		.4byte	0x81
 2931 0abe CB070000 		.4byte	.LLST48
 2932 0ac2 14       		.uleb128 0x14
 2933 0ac3 6900     		.ascii	"i\000"
 2934 0ac5 01       		.byte	0x1
 2935 0ac6 9A02     		.2byte	0x29a
 2936 0ac8 81000000 		.4byte	0x81
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 104


 2937 0acc 06080000 		.4byte	.LLST49
 2938 0ad0 15       		.uleb128 0x15
 2939 0ad1 06070000 		.4byte	.LASF44
 2940 0ad5 01       		.byte	0x1
 2941 0ad6 9B02     		.2byte	0x29b
 2942 0ad8 81000000 		.4byte	0x81
 2943 0adc 19080000 		.4byte	.LLST50
 2944 0ae0 0F       		.uleb128 0xf
 2945 0ae1 18000000 		.4byte	.LVL156
 2946 0ae5 5E0D0000 		.4byte	0xd5e
 2947 0ae9 FA0A0000 		.4byte	0xafa
 2948 0aed 10       		.uleb128 0x10
 2949 0aee 01       		.uleb128 0x1
 2950 0aef 51       		.byte	0x51
 2951 0af0 02       		.uleb128 0x2
 2952 0af1 74       		.byte	0x74
 2953 0af2 00       		.sleb128 0
 2954 0af3 10       		.uleb128 0x10
 2955 0af4 01       		.uleb128 0x1
 2956 0af5 50       		.byte	0x50
 2957 0af6 02       		.uleb128 0x2
 2958 0af7 76       		.byte	0x76
 2959 0af8 00       		.sleb128 0
 2960 0af9 00       		.byte	0
 2961 0afa 12       		.uleb128 0x12
 2962 0afb 22000000 		.4byte	.LVL158
 2963 0aff C2090000 		.4byte	0x9c2
 2964 0b03 10       		.uleb128 0x10
 2965 0b04 01       		.uleb128 0x1
 2966 0b05 50       		.byte	0x50
 2967 0b06 02       		.uleb128 0x2
 2968 0b07 74       		.byte	0x74
 2969 0b08 00       		.sleb128 0
 2970 0b09 00       		.byte	0
 2971 0b0a 00       		.byte	0
 2972 0b0b 16       		.uleb128 0x16
 2973 0b0c 40090000 		.4byte	.LASF87
 2974 0b10 01       		.byte	0x1
 2975 0b11 B80A     		.2byte	0xab8
 2976 0b13 81000000 		.4byte	0x81
 2977 0b17 00000000 		.4byte	.LFB63
 2978 0b1b 0C000000 		.4byte	.LFE63-.LFB63
 2979 0b1f 01       		.uleb128 0x1
 2980 0b20 9C       		.byte	0x9c
 2981 0b21 360B0000 		.4byte	0xb36
 2982 0b25 17       		.uleb128 0x17
 2983 0b26 3D040000 		.4byte	.LASF40
 2984 0b2a 01       		.byte	0x1
 2985 0b2b B80A     		.2byte	0xab8
 2986 0b2d 81000000 		.4byte	0x81
 2987 0b31 2C080000 		.4byte	.LLST51
 2988 0b35 00       		.byte	0
 2989 0b36 16       		.uleb128 0x16
 2990 0b37 4A060000 		.4byte	.LASF88
 2991 0b3b 01       		.byte	0x1
 2992 0b3c D20A     		.2byte	0xad2
 2993 0b3e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 105


 2994 0b42 00000000 		.4byte	.LFB64
 2995 0b46 0C000000 		.4byte	.LFE64-.LFB64
 2996 0b4a 01       		.uleb128 0x1
 2997 0b4b 9C       		.byte	0x9c
 2998 0b4c 610B0000 		.4byte	0xb61
 2999 0b50 17       		.uleb128 0x17
 3000 0b51 3D040000 		.4byte	.LASF40
 3001 0b55 01       		.byte	0x1
 3002 0b56 D20A     		.2byte	0xad2
 3003 0b58 81000000 		.4byte	0x81
 3004 0b5c 4D080000 		.4byte	.LLST52
 3005 0b60 00       		.byte	0
 3006 0b61 16       		.uleb128 0x16
 3007 0b62 CC000000 		.4byte	.LASF89
 3008 0b66 01       		.byte	0x1
 3009 0b67 EC0A     		.2byte	0xaec
 3010 0b69 6B000000 		.4byte	0x6b
 3011 0b6d 00000000 		.4byte	.LFB65
 3012 0b71 0C000000 		.4byte	.LFE65-.LFB65
 3013 0b75 01       		.uleb128 0x1
 3014 0b76 9C       		.byte	0x9c
 3015 0b77 8C0B0000 		.4byte	0xb8c
 3016 0b7b 17       		.uleb128 0x17
 3017 0b7c F5060000 		.4byte	.LASF42
 3018 0b80 01       		.byte	0x1
 3019 0b81 EC0A     		.2byte	0xaec
 3020 0b83 81000000 		.4byte	0x81
 3021 0b87 6E080000 		.4byte	.LLST53
 3022 0b8b 00       		.byte	0
 3023 0b8c 1D       		.uleb128 0x1d
 3024 0b8d 75090000 		.4byte	.LASF90
 3025 0b91 01       		.byte	0x1
 3026 0b92 060B     		.2byte	0xb06
 3027 0b94 00000000 		.4byte	.LFB66
 3028 0b98 10000000 		.4byte	.LFE66-.LFB66
 3029 0b9c 01       		.uleb128 0x1
 3030 0b9d 9C       		.byte	0x9c
 3031 0b9e 1D       		.uleb128 0x1d
 3032 0b9f C2020000 		.4byte	.LASF91
 3033 0ba3 01       		.byte	0x1
 3034 0ba4 1F0B     		.2byte	0xb1f
 3035 0ba6 00000000 		.4byte	.LFB67
 3036 0baa 10000000 		.4byte	.LFE67-.LFB67
 3037 0bae 01       		.uleb128 0x1
 3038 0baf 9C       		.byte	0x9c
 3039 0bb0 1E       		.uleb128 0x1e
 3040 0bb1 6B000000 		.4byte	0x6b
 3041 0bb5 C00B0000 		.4byte	0xbc0
 3042 0bb9 1F       		.uleb128 0x1f
 3043 0bba A1000000 		.4byte	0xa1
 3044 0bbe 0C       		.byte	0xc
 3045 0bbf 00       		.byte	0
 3046 0bc0 20       		.uleb128 0x20
 3047 0bc1 93090000 		.4byte	.LASF92
 3048 0bc5 01       		.byte	0x1
 3049 0bc6 57       		.byte	0x57
 3050 0bc7 B00B0000 		.4byte	0xbb0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 106


 3051 0bcb 05       		.uleb128 0x5
 3052 0bcc 03       		.byte	0x3
 3053 0bcd 30000000 		.4byte	CapSense_debounceCounter
 3054 0bd1 1E       		.uleb128 0x1e
 3055 0bd2 76000000 		.4byte	0x76
 3056 0bd6 E10B0000 		.4byte	0xbe1
 3057 0bda 1F       		.uleb128 0x1f
 3058 0bdb A1000000 		.4byte	0xa1
 3059 0bdf 0B       		.byte	0xb
 3060 0be0 00       		.byte	0
 3061 0be1 21       		.uleb128 0x21
 3062 0be2 EF080000 		.4byte	.LASF93
 3063 0be6 01       		.byte	0x1
 3064 0be7 2C       		.byte	0x2c
 3065 0be8 D10B0000 		.4byte	0xbd1
 3066 0bec 1E       		.uleb128 0x1e
 3067 0bed 6B000000 		.4byte	0x6b
 3068 0bf1 FC0B0000 		.4byte	0xbfc
 3069 0bf5 1F       		.uleb128 0x1f
 3070 0bf6 A1000000 		.4byte	0xa1
 3071 0bfa 01       		.byte	0x1
 3072 0bfb 00       		.byte	0
 3073 0bfc 21       		.uleb128 0x21
 3074 0bfd 44040000 		.4byte	.LASF94
 3075 0c01 01       		.byte	0x1
 3076 0c02 2D       		.byte	0x2d
 3077 0c03 EC0B0000 		.4byte	0xbec
 3078 0c07 1E       		.uleb128 0x1e
 3079 0c08 6B000000 		.4byte	0x6b
 3080 0c0c 170C0000 		.4byte	0xc17
 3081 0c10 1F       		.uleb128 0x1f
 3082 0c11 A1000000 		.4byte	0xa1
 3083 0c15 0B       		.byte	0xb
 3084 0c16 00       		.byte	0
 3085 0c17 21       		.uleb128 0x21
 3086 0c18 E8020000 		.4byte	.LASF95
 3087 0c1c 01       		.byte	0x1
 3088 0c1d 2E       		.byte	0x2e
 3089 0c1e 220C0000 		.4byte	0xc22
 3090 0c22 08       		.uleb128 0x8
 3091 0c23 070C0000 		.4byte	0xc07
 3092 0c27 22       		.uleb128 0x22
 3093 0c28 8F070000 		.4byte	.LASF96
 3094 0c2c 01       		.byte	0x1
 3095 0c2d 34       		.byte	0x34
 3096 0c2e D10B0000 		.4byte	0xbd1
 3097 0c32 05       		.uleb128 0x5
 3098 0c33 03       		.byte	0x3
 3099 0c34 00000000 		.4byte	CapSense_sensorBaseline
 3100 0c38 22       		.uleb128 0x22
 3101 0c39 CB030000 		.4byte	.LASF97
 3102 0c3d 01       		.byte	0x1
 3103 0c3e 35       		.byte	0x35
 3104 0c3f 070C0000 		.4byte	0xc07
 3105 0c43 05       		.uleb128 0x5
 3106 0c44 03       		.byte	0x3
 3107 0c45 00000000 		.4byte	CapSense_sensorBaselineLow
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 107


 3108 0c49 22       		.uleb128 0x22
 3109 0c4a 8A010000 		.4byte	.LASF98
 3110 0c4e 01       		.byte	0x1
 3111 0c4f 36       		.byte	0x36
 3112 0c50 070C0000 		.4byte	0xc07
 3113 0c54 05       		.uleb128 0x5
 3114 0c55 03       		.byte	0x3
 3115 0c56 00000000 		.4byte	CapSense_sensorSignal
 3116 0c5a 22       		.uleb128 0x22
 3117 0c5b 38000000 		.4byte	.LASF99
 3118 0c5f 01       		.byte	0x1
 3119 0c60 37       		.byte	0x37
 3120 0c61 EC0B0000 		.4byte	0xbec
 3121 0c65 05       		.uleb128 0x5
 3122 0c66 03       		.byte	0x3
 3123 0c67 00000000 		.4byte	CapSense_sensorOnMask
 3124 0c6b 22       		.uleb128 0x22
 3125 0c6c 57070000 		.4byte	.LASF100
 3126 0c70 01       		.byte	0x1
 3127 0c71 39       		.byte	0x39
 3128 0c72 070C0000 		.4byte	0xc07
 3129 0c76 05       		.uleb128 0x5
 3130 0c77 03       		.byte	0x3
 3131 0c78 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3132 0c7c 22       		.uleb128 0x22
 3133 0c7d A8020000 		.4byte	.LASF101
 3134 0c81 01       		.byte	0x1
 3135 0c82 3A       		.byte	0x3a
 3136 0c83 070C0000 		.4byte	0xc07
 3137 0c87 05       		.uleb128 0x5
 3138 0c88 03       		.byte	0x3
 3139 0c89 00000000 		.4byte	CapSense_lowBaselineReset
 3140 0c8d 22       		.uleb128 0x22
 3141 0c8e EE050000 		.4byte	.LASF102
 3142 0c92 01       		.byte	0x1
 3143 0c93 49       		.byte	0x49
 3144 0c94 070C0000 		.4byte	0xc07
 3145 0c98 05       		.uleb128 0x5
 3146 0c99 03       		.byte	0x3
 3147 0c9a 00000000 		.4byte	CapSense_fingerThreshold
 3148 0c9e 22       		.uleb128 0x22
 3149 0c9f D6050000 		.4byte	.LASF103
 3150 0ca3 01       		.byte	0x1
 3151 0ca4 4D       		.byte	0x4d
 3152 0ca5 070C0000 		.4byte	0xc07
 3153 0ca9 05       		.uleb128 0x5
 3154 0caa 03       		.byte	0x3
 3155 0cab 00000000 		.4byte	CapSense_noiseThreshold
 3156 0caf 22       		.uleb128 0x22
 3157 0cb0 EF090000 		.4byte	.LASF104
 3158 0cb4 01       		.byte	0x1
 3159 0cb5 4F       		.byte	0x4f
 3160 0cb6 070C0000 		.4byte	0xc07
 3161 0cba 05       		.uleb128 0x5
 3162 0cbb 03       		.byte	0x3
 3163 0cbc 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3164 0cc0 22       		.uleb128 0x22
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 108


 3165 0cc1 A7070000 		.4byte	.LASF105
 3166 0cc5 01       		.byte	0x1
 3167 0cc6 51       		.byte	0x51
 3168 0cc7 070C0000 		.4byte	0xc07
 3169 0ccb 05       		.uleb128 0x5
 3170 0ccc 03       		.byte	0x3
 3171 0ccd 00000000 		.4byte	CapSense_hysteresis
 3172 0cd1 22       		.uleb128 0x22
 3173 0cd2 04040000 		.4byte	.LASF106
 3174 0cd6 01       		.byte	0x1
 3175 0cd7 53       		.byte	0x53
 3176 0cd8 070C0000 		.4byte	0xc07
 3177 0cdc 05       		.uleb128 0x5
 3178 0cdd 03       		.byte	0x3
 3179 0cde 00000000 		.4byte	CapSense_debounce
 3180 0ce2 22       		.uleb128 0x22
 3181 0ce3 22000000 		.4byte	.LASF107
 3182 0ce7 01       		.byte	0x1
 3183 0ce8 5B       		.byte	0x5b
 3184 0ce9 F30C0000 		.4byte	0xcf3
 3185 0ced 05       		.uleb128 0x5
 3186 0cee 03       		.byte	0x3
 3187 0cef 00000000 		.4byte	CapSense_rawDataIndex
 3188 0cf3 08       		.uleb128 0x8
 3189 0cf4 070C0000 		.4byte	0xc07
 3190 0cf8 22       		.uleb128 0x22
 3191 0cf9 5E040000 		.4byte	.LASF108
 3192 0cfd 01       		.byte	0x1
 3193 0cfe 6A       		.byte	0x6a
 3194 0cff 090D0000 		.4byte	0xd09
 3195 0d03 05       		.uleb128 0x5
 3196 0d04 03       		.byte	0x3
 3197 0d05 00000000 		.4byte	CapSense_numberOfSensors
 3198 0d09 08       		.uleb128 0x8
 3199 0d0a 070C0000 		.4byte	0xc07
 3200 0d0e 22       		.uleb128 0x22
 3201 0d0f 1C060000 		.4byte	.LASF109
 3202 0d13 01       		.byte	0x1
 3203 0d14 27       		.byte	0x27
 3204 0d15 D10B0000 		.4byte	0xbd1
 3205 0d19 05       		.uleb128 0x5
 3206 0d1a 03       		.byte	0x3
 3207 0d1b 00000000 		.4byte	CapSense_rawFilterData1
 3208 0d1f 21       		.uleb128 0x21
 3209 0d20 34060000 		.4byte	.LASF110
 3210 0d24 01       		.byte	0x1
 3211 0d25 41       		.byte	0x41
 3212 0d26 32020000 		.4byte	0x232
 3213 0d2a 22       		.uleb128 0x22
 3214 0d2b 12080000 		.4byte	.LASF111
 3215 0d2f 01       		.byte	0x1
 3216 0d30 45       		.byte	0x45
 3217 0d31 6B000000 		.4byte	0x6b
 3218 0d35 05       		.uleb128 0x5
 3219 0d36 03       		.byte	0x3
 3220 0d37 00000000 		.4byte	CapSense_enableRawFilters
 3221 0d3b 23       		.uleb128 0x23
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 109


 3222 0d3c 98030000 		.4byte	.LASF112
 3223 0d40 04       		.byte	0x4
 3224 0d41 A7       		.byte	0xa7
 3225 0d42 4C0D0000 		.4byte	0xd4c
 3226 0d46 0A       		.uleb128 0xa
 3227 0d47 81000000 		.4byte	0x81
 3228 0d4b 00       		.byte	0
 3229 0d4c 24       		.uleb128 0x24
 3230 0d4d A7040000 		.4byte	.LASF118
 3231 0d51 04       		.byte	0x4
 3232 0d52 A6       		.byte	0xa6
 3233 0d53 81000000 		.4byte	0x81
 3234 0d57 25       		.uleb128 0x25
 3235 0d58 59090000 		.4byte	.LASF119
 3236 0d5c 04       		.byte	0x4
 3237 0d5d A9       		.byte	0xa9
 3238 0d5e 26       		.uleb128 0x26
 3239 0d5f 2B090000 		.4byte	.LASF120
 3240 0d63 03       		.byte	0x3
 3241 0d64 61       		.byte	0x61
 3242 0d65 81000000 		.4byte	0x81
 3243 0d69 780D0000 		.4byte	0xd78
 3244 0d6d 0A       		.uleb128 0xa
 3245 0d6e 5F010000 		.4byte	0x15f
 3246 0d72 0A       		.uleb128 0xa
 3247 0d73 81000000 		.4byte	0x81
 3248 0d77 00       		.byte	0
 3249 0d78 23       		.uleb128 0x23
 3250 0d79 07060000 		.4byte	.LASF113
 3251 0d7d 03       		.byte	0x3
 3252 0d7e 62       		.byte	0x62
 3253 0d7f 930D0000 		.4byte	0xd93
 3254 0d83 0A       		.uleb128 0xa
 3255 0d84 59010000 		.4byte	0x159
 3256 0d88 0A       		.uleb128 0xa
 3257 0d89 81000000 		.4byte	0x81
 3258 0d8d 0A       		.uleb128 0xa
 3259 0d8e 81000000 		.4byte	0x81
 3260 0d92 00       		.byte	0
 3261 0d93 23       		.uleb128 0x23
 3262 0d94 C1090000 		.4byte	.LASF114
 3263 0d98 03       		.byte	0x3
 3264 0d99 78       		.byte	0x78
 3265 0d9a AE0D0000 		.4byte	0xdae
 3266 0d9e 0A       		.uleb128 0xa
 3267 0d9f AE0D0000 		.4byte	0xdae
 3268 0da3 0A       		.uleb128 0xa
 3269 0da4 65010000 		.4byte	0x165
 3270 0da8 0A       		.uleb128 0xa
 3271 0da9 B40D0000 		.4byte	0xdb4
 3272 0dad 00       		.byte	0
 3273 0dae 07       		.uleb128 0x7
 3274 0daf 04       		.byte	0x4
 3275 0db0 32020000 		.4byte	0x232
 3276 0db4 07       		.uleb128 0x7
 3277 0db5 04       		.byte	0x4
 3278 0db6 BA0D0000 		.4byte	0xdba
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 110


 3279 0dba 08       		.uleb128 0x8
 3280 0dbb 76000000 		.4byte	0x76
 3281 0dbf 27       		.uleb128 0x27
 3282 0dc0 B1080000 		.4byte	.LASF121
 3283 0dc4 01       		.byte	0x1
 3284 0dc5 17       		.byte	0x17
 3285 0dc6 0A       		.uleb128 0xa
 3286 0dc7 81000000 		.4byte	0x81
 3287 0dcb 00       		.byte	0
 3288 0dcc 00       		.byte	0
 3289              		.section	.debug_abbrev,"",%progbits
 3290              	.Ldebug_abbrev0:
 3291 0000 01       		.uleb128 0x1
 3292 0001 11       		.uleb128 0x11
 3293 0002 01       		.byte	0x1
 3294 0003 25       		.uleb128 0x25
 3295 0004 0E       		.uleb128 0xe
 3296 0005 13       		.uleb128 0x13
 3297 0006 0B       		.uleb128 0xb
 3298 0007 03       		.uleb128 0x3
 3299 0008 0E       		.uleb128 0xe
 3300 0009 1B       		.uleb128 0x1b
 3301 000a 0E       		.uleb128 0xe
 3302 000b 55       		.uleb128 0x55
 3303 000c 17       		.uleb128 0x17
 3304 000d 11       		.uleb128 0x11
 3305 000e 01       		.uleb128 0x1
 3306 000f 10       		.uleb128 0x10
 3307 0010 17       		.uleb128 0x17
 3308 0011 00       		.byte	0
 3309 0012 00       		.byte	0
 3310 0013 02       		.uleb128 0x2
 3311 0014 24       		.uleb128 0x24
 3312 0015 00       		.byte	0
 3313 0016 0B       		.uleb128 0xb
 3314 0017 0B       		.uleb128 0xb
 3315 0018 3E       		.uleb128 0x3e
 3316 0019 0B       		.uleb128 0xb
 3317 001a 03       		.uleb128 0x3
 3318 001b 0E       		.uleb128 0xe
 3319 001c 00       		.byte	0
 3320 001d 00       		.byte	0
 3321 001e 03       		.uleb128 0x3
 3322 001f 24       		.uleb128 0x24
 3323 0020 00       		.byte	0
 3324 0021 0B       		.uleb128 0xb
 3325 0022 0B       		.uleb128 0xb
 3326 0023 3E       		.uleb128 0x3e
 3327 0024 0B       		.uleb128 0xb
 3328 0025 03       		.uleb128 0x3
 3329 0026 08       		.uleb128 0x8
 3330 0027 00       		.byte	0
 3331 0028 00       		.byte	0
 3332 0029 04       		.uleb128 0x4
 3333 002a 16       		.uleb128 0x16
 3334 002b 00       		.byte	0
 3335 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 111


 3336 002d 0E       		.uleb128 0xe
 3337 002e 3A       		.uleb128 0x3a
 3338 002f 0B       		.uleb128 0xb
 3339 0030 3B       		.uleb128 0x3b
 3340 0031 0B       		.uleb128 0xb
 3341 0032 49       		.uleb128 0x49
 3342 0033 13       		.uleb128 0x13
 3343 0034 00       		.byte	0
 3344 0035 00       		.byte	0
 3345 0036 05       		.uleb128 0x5
 3346 0037 13       		.uleb128 0x13
 3347 0038 01       		.byte	0x1
 3348 0039 0B       		.uleb128 0xb
 3349 003a 0B       		.uleb128 0xb
 3350 003b 3A       		.uleb128 0x3a
 3351 003c 0B       		.uleb128 0xb
 3352 003d 3B       		.uleb128 0x3b
 3353 003e 0B       		.uleb128 0xb
 3354 003f 01       		.uleb128 0x1
 3355 0040 13       		.uleb128 0x13
 3356 0041 00       		.byte	0
 3357 0042 00       		.byte	0
 3358 0043 06       		.uleb128 0x6
 3359 0044 0D       		.uleb128 0xd
 3360 0045 00       		.byte	0
 3361 0046 03       		.uleb128 0x3
 3362 0047 0E       		.uleb128 0xe
 3363 0048 3A       		.uleb128 0x3a
 3364 0049 0B       		.uleb128 0xb
 3365 004a 3B       		.uleb128 0x3b
 3366 004b 0B       		.uleb128 0xb
 3367 004c 49       		.uleb128 0x49
 3368 004d 13       		.uleb128 0x13
 3369 004e 38       		.uleb128 0x38
 3370 004f 0B       		.uleb128 0xb
 3371 0050 00       		.byte	0
 3372 0051 00       		.byte	0
 3373 0052 07       		.uleb128 0x7
 3374 0053 0F       		.uleb128 0xf
 3375 0054 00       		.byte	0
 3376 0055 0B       		.uleb128 0xb
 3377 0056 0B       		.uleb128 0xb
 3378 0057 49       		.uleb128 0x49
 3379 0058 13       		.uleb128 0x13
 3380 0059 00       		.byte	0
 3381 005a 00       		.byte	0
 3382 005b 08       		.uleb128 0x8
 3383 005c 26       		.uleb128 0x26
 3384 005d 00       		.byte	0
 3385 005e 49       		.uleb128 0x49
 3386 005f 13       		.uleb128 0x13
 3387 0060 00       		.byte	0
 3388 0061 00       		.byte	0
 3389 0062 09       		.uleb128 0x9
 3390 0063 15       		.uleb128 0x15
 3391 0064 01       		.byte	0x1
 3392 0065 27       		.uleb128 0x27
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 112


 3393 0066 19       		.uleb128 0x19
 3394 0067 49       		.uleb128 0x49
 3395 0068 13       		.uleb128 0x13
 3396 0069 01       		.uleb128 0x1
 3397 006a 13       		.uleb128 0x13
 3398 006b 00       		.byte	0
 3399 006c 00       		.byte	0
 3400 006d 0A       		.uleb128 0xa
 3401 006e 05       		.uleb128 0x5
 3402 006f 00       		.byte	0
 3403 0070 49       		.uleb128 0x49
 3404 0071 13       		.uleb128 0x13
 3405 0072 00       		.byte	0
 3406 0073 00       		.byte	0
 3407 0074 0B       		.uleb128 0xb
 3408 0075 15       		.uleb128 0x15
 3409 0076 01       		.byte	0x1
 3410 0077 27       		.uleb128 0x27
 3411 0078 19       		.uleb128 0x19
 3412 0079 01       		.uleb128 0x1
 3413 007a 13       		.uleb128 0x13
 3414 007b 00       		.byte	0
 3415 007c 00       		.byte	0
 3416 007d 0C       		.uleb128 0xc
 3417 007e 2E       		.uleb128 0x2e
 3418 007f 01       		.byte	0x1
 3419 0080 3F       		.uleb128 0x3f
 3420 0081 19       		.uleb128 0x19
 3421 0082 03       		.uleb128 0x3
 3422 0083 0E       		.uleb128 0xe
 3423 0084 3A       		.uleb128 0x3a
 3424 0085 0B       		.uleb128 0xb
 3425 0086 3B       		.uleb128 0x3b
 3426 0087 0B       		.uleb128 0xb
 3427 0088 27       		.uleb128 0x27
 3428 0089 19       		.uleb128 0x19
 3429 008a 11       		.uleb128 0x11
 3430 008b 01       		.uleb128 0x1
 3431 008c 12       		.uleb128 0x12
 3432 008d 06       		.uleb128 0x6
 3433 008e 40       		.uleb128 0x40
 3434 008f 18       		.uleb128 0x18
 3435 0090 9742     		.uleb128 0x2117
 3436 0092 19       		.uleb128 0x19
 3437 0093 01       		.uleb128 0x1
 3438 0094 13       		.uleb128 0x13
 3439 0095 00       		.byte	0
 3440 0096 00       		.byte	0
 3441 0097 0D       		.uleb128 0xd
 3442 0098 05       		.uleb128 0x5
 3443 0099 00       		.byte	0
 3444 009a 03       		.uleb128 0x3
 3445 009b 0E       		.uleb128 0xe
 3446 009c 3A       		.uleb128 0x3a
 3447 009d 0B       		.uleb128 0xb
 3448 009e 3B       		.uleb128 0x3b
 3449 009f 0B       		.uleb128 0xb
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 113


 3450 00a0 49       		.uleb128 0x49
 3451 00a1 13       		.uleb128 0x13
 3452 00a2 02       		.uleb128 0x2
 3453 00a3 17       		.uleb128 0x17
 3454 00a4 00       		.byte	0
 3455 00a5 00       		.byte	0
 3456 00a6 0E       		.uleb128 0xe
 3457 00a7 34       		.uleb128 0x34
 3458 00a8 00       		.byte	0
 3459 00a9 03       		.uleb128 0x3
 3460 00aa 0E       		.uleb128 0xe
 3461 00ab 3A       		.uleb128 0x3a
 3462 00ac 0B       		.uleb128 0xb
 3463 00ad 3B       		.uleb128 0x3b
 3464 00ae 0B       		.uleb128 0xb
 3465 00af 49       		.uleb128 0x49
 3466 00b0 13       		.uleb128 0x13
 3467 00b1 02       		.uleb128 0x2
 3468 00b2 17       		.uleb128 0x17
 3469 00b3 00       		.byte	0
 3470 00b4 00       		.byte	0
 3471 00b5 0F       		.uleb128 0xf
 3472 00b6 898201   		.uleb128 0x4109
 3473 00b9 01       		.byte	0x1
 3474 00ba 11       		.uleb128 0x11
 3475 00bb 01       		.uleb128 0x1
 3476 00bc 31       		.uleb128 0x31
 3477 00bd 13       		.uleb128 0x13
 3478 00be 01       		.uleb128 0x1
 3479 00bf 13       		.uleb128 0x13
 3480 00c0 00       		.byte	0
 3481 00c1 00       		.byte	0
 3482 00c2 10       		.uleb128 0x10
 3483 00c3 8A8201   		.uleb128 0x410a
 3484 00c6 00       		.byte	0
 3485 00c7 02       		.uleb128 0x2
 3486 00c8 18       		.uleb128 0x18
 3487 00c9 9142     		.uleb128 0x2111
 3488 00cb 18       		.uleb128 0x18
 3489 00cc 00       		.byte	0
 3490 00cd 00       		.byte	0
 3491 00ce 11       		.uleb128 0x11
 3492 00cf 898201   		.uleb128 0x4109
 3493 00d2 00       		.byte	0
 3494 00d3 11       		.uleb128 0x11
 3495 00d4 01       		.uleb128 0x1
 3496 00d5 31       		.uleb128 0x31
 3497 00d6 13       		.uleb128 0x13
 3498 00d7 00       		.byte	0
 3499 00d8 00       		.byte	0
 3500 00d9 12       		.uleb128 0x12
 3501 00da 898201   		.uleb128 0x4109
 3502 00dd 01       		.byte	0x1
 3503 00de 11       		.uleb128 0x11
 3504 00df 01       		.uleb128 0x1
 3505 00e0 31       		.uleb128 0x31
 3506 00e1 13       		.uleb128 0x13
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 114


 3507 00e2 00       		.byte	0
 3508 00e3 00       		.byte	0
 3509 00e4 13       		.uleb128 0x13
 3510 00e5 2E       		.uleb128 0x2e
 3511 00e6 01       		.byte	0x1
 3512 00e7 3F       		.uleb128 0x3f
 3513 00e8 19       		.uleb128 0x19
 3514 00e9 03       		.uleb128 0x3
 3515 00ea 0E       		.uleb128 0xe
 3516 00eb 3A       		.uleb128 0x3a
 3517 00ec 0B       		.uleb128 0xb
 3518 00ed 3B       		.uleb128 0x3b
 3519 00ee 05       		.uleb128 0x5
 3520 00ef 27       		.uleb128 0x27
 3521 00f0 19       		.uleb128 0x19
 3522 00f1 11       		.uleb128 0x11
 3523 00f2 01       		.uleb128 0x1
 3524 00f3 12       		.uleb128 0x12
 3525 00f4 06       		.uleb128 0x6
 3526 00f5 40       		.uleb128 0x40
 3527 00f6 18       		.uleb128 0x18
 3528 00f7 9742     		.uleb128 0x2117
 3529 00f9 19       		.uleb128 0x19
 3530 00fa 01       		.uleb128 0x1
 3531 00fb 13       		.uleb128 0x13
 3532 00fc 00       		.byte	0
 3533 00fd 00       		.byte	0
 3534 00fe 14       		.uleb128 0x14
 3535 00ff 34       		.uleb128 0x34
 3536 0100 00       		.byte	0
 3537 0101 03       		.uleb128 0x3
 3538 0102 08       		.uleb128 0x8
 3539 0103 3A       		.uleb128 0x3a
 3540 0104 0B       		.uleb128 0xb
 3541 0105 3B       		.uleb128 0x3b
 3542 0106 05       		.uleb128 0x5
 3543 0107 49       		.uleb128 0x49
 3544 0108 13       		.uleb128 0x13
 3545 0109 02       		.uleb128 0x2
 3546 010a 17       		.uleb128 0x17
 3547 010b 00       		.byte	0
 3548 010c 00       		.byte	0
 3549 010d 15       		.uleb128 0x15
 3550 010e 34       		.uleb128 0x34
 3551 010f 00       		.byte	0
 3552 0110 03       		.uleb128 0x3
 3553 0111 0E       		.uleb128 0xe
 3554 0112 3A       		.uleb128 0x3a
 3555 0113 0B       		.uleb128 0xb
 3556 0114 3B       		.uleb128 0x3b
 3557 0115 05       		.uleb128 0x5
 3558 0116 49       		.uleb128 0x49
 3559 0117 13       		.uleb128 0x13
 3560 0118 02       		.uleb128 0x2
 3561 0119 17       		.uleb128 0x17
 3562 011a 00       		.byte	0
 3563 011b 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 115


 3564 011c 16       		.uleb128 0x16
 3565 011d 2E       		.uleb128 0x2e
 3566 011e 01       		.byte	0x1
 3567 011f 3F       		.uleb128 0x3f
 3568 0120 19       		.uleb128 0x19
 3569 0121 03       		.uleb128 0x3
 3570 0122 0E       		.uleb128 0xe
 3571 0123 3A       		.uleb128 0x3a
 3572 0124 0B       		.uleb128 0xb
 3573 0125 3B       		.uleb128 0x3b
 3574 0126 05       		.uleb128 0x5
 3575 0127 27       		.uleb128 0x27
 3576 0128 19       		.uleb128 0x19
 3577 0129 49       		.uleb128 0x49
 3578 012a 13       		.uleb128 0x13
 3579 012b 11       		.uleb128 0x11
 3580 012c 01       		.uleb128 0x1
 3581 012d 12       		.uleb128 0x12
 3582 012e 06       		.uleb128 0x6
 3583 012f 40       		.uleb128 0x40
 3584 0130 18       		.uleb128 0x18
 3585 0131 9742     		.uleb128 0x2117
 3586 0133 19       		.uleb128 0x19
 3587 0134 01       		.uleb128 0x1
 3588 0135 13       		.uleb128 0x13
 3589 0136 00       		.byte	0
 3590 0137 00       		.byte	0
 3591 0138 17       		.uleb128 0x17
 3592 0139 05       		.uleb128 0x5
 3593 013a 00       		.byte	0
 3594 013b 03       		.uleb128 0x3
 3595 013c 0E       		.uleb128 0xe
 3596 013d 3A       		.uleb128 0x3a
 3597 013e 0B       		.uleb128 0xb
 3598 013f 3B       		.uleb128 0x3b
 3599 0140 05       		.uleb128 0x5
 3600 0141 49       		.uleb128 0x49
 3601 0142 13       		.uleb128 0x13
 3602 0143 02       		.uleb128 0x2
 3603 0144 17       		.uleb128 0x17
 3604 0145 00       		.byte	0
 3605 0146 00       		.byte	0
 3606 0147 18       		.uleb128 0x18
 3607 0148 05       		.uleb128 0x5
 3608 0149 00       		.byte	0
 3609 014a 03       		.uleb128 0x3
 3610 014b 0E       		.uleb128 0xe
 3611 014c 3A       		.uleb128 0x3a
 3612 014d 0B       		.uleb128 0xb
 3613 014e 3B       		.uleb128 0x3b
 3614 014f 05       		.uleb128 0x5
 3615 0150 49       		.uleb128 0x49
 3616 0151 13       		.uleb128 0x13
 3617 0152 02       		.uleb128 0x2
 3618 0153 18       		.uleb128 0x18
 3619 0154 00       		.byte	0
 3620 0155 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 116


 3621 0156 19       		.uleb128 0x19
 3622 0157 34       		.uleb128 0x34
 3623 0158 00       		.byte	0
 3624 0159 03       		.uleb128 0x3
 3625 015a 0E       		.uleb128 0xe
 3626 015b 3A       		.uleb128 0x3a
 3627 015c 0B       		.uleb128 0xb
 3628 015d 3B       		.uleb128 0x3b
 3629 015e 05       		.uleb128 0x5
 3630 015f 49       		.uleb128 0x49
 3631 0160 13       		.uleb128 0x13
 3632 0161 00       		.byte	0
 3633 0162 00       		.byte	0
 3634 0163 1A       		.uleb128 0x1a
 3635 0164 05       		.uleb128 0x5
 3636 0165 00       		.byte	0
 3637 0166 03       		.uleb128 0x3
 3638 0167 08       		.uleb128 0x8
 3639 0168 3A       		.uleb128 0x3a
 3640 0169 0B       		.uleb128 0xb
 3641 016a 3B       		.uleb128 0x3b
 3642 016b 05       		.uleb128 0x5
 3643 016c 49       		.uleb128 0x49
 3644 016d 13       		.uleb128 0x13
 3645 016e 02       		.uleb128 0x2
 3646 016f 17       		.uleb128 0x17
 3647 0170 00       		.byte	0
 3648 0171 00       		.byte	0
 3649 0172 1B       		.uleb128 0x1b
 3650 0173 05       		.uleb128 0x5
 3651 0174 00       		.byte	0
 3652 0175 03       		.uleb128 0x3
 3653 0176 08       		.uleb128 0x8
 3654 0177 3A       		.uleb128 0x3a
 3655 0178 0B       		.uleb128 0xb
 3656 0179 3B       		.uleb128 0x3b
 3657 017a 05       		.uleb128 0x5
 3658 017b 49       		.uleb128 0x49
 3659 017c 13       		.uleb128 0x13
 3660 017d 02       		.uleb128 0x2
 3661 017e 18       		.uleb128 0x18
 3662 017f 00       		.byte	0
 3663 0180 00       		.byte	0
 3664 0181 1C       		.uleb128 0x1c
 3665 0182 34       		.uleb128 0x34
 3666 0183 00       		.byte	0
 3667 0184 03       		.uleb128 0x3
 3668 0185 08       		.uleb128 0x8
 3669 0186 3A       		.uleb128 0x3a
 3670 0187 0B       		.uleb128 0xb
 3671 0188 3B       		.uleb128 0x3b
 3672 0189 05       		.uleb128 0x5
 3673 018a 49       		.uleb128 0x49
 3674 018b 13       		.uleb128 0x13
 3675 018c 00       		.byte	0
 3676 018d 00       		.byte	0
 3677 018e 1D       		.uleb128 0x1d
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 117


 3678 018f 2E       		.uleb128 0x2e
 3679 0190 00       		.byte	0
 3680 0191 3F       		.uleb128 0x3f
 3681 0192 19       		.uleb128 0x19
 3682 0193 03       		.uleb128 0x3
 3683 0194 0E       		.uleb128 0xe
 3684 0195 3A       		.uleb128 0x3a
 3685 0196 0B       		.uleb128 0xb
 3686 0197 3B       		.uleb128 0x3b
 3687 0198 05       		.uleb128 0x5
 3688 0199 27       		.uleb128 0x27
 3689 019a 19       		.uleb128 0x19
 3690 019b 11       		.uleb128 0x11
 3691 019c 01       		.uleb128 0x1
 3692 019d 12       		.uleb128 0x12
 3693 019e 06       		.uleb128 0x6
 3694 019f 40       		.uleb128 0x40
 3695 01a0 18       		.uleb128 0x18
 3696 01a1 9742     		.uleb128 0x2117
 3697 01a3 19       		.uleb128 0x19
 3698 01a4 00       		.byte	0
 3699 01a5 00       		.byte	0
 3700 01a6 1E       		.uleb128 0x1e
 3701 01a7 01       		.uleb128 0x1
 3702 01a8 01       		.byte	0x1
 3703 01a9 49       		.uleb128 0x49
 3704 01aa 13       		.uleb128 0x13
 3705 01ab 01       		.uleb128 0x1
 3706 01ac 13       		.uleb128 0x13
 3707 01ad 00       		.byte	0
 3708 01ae 00       		.byte	0
 3709 01af 1F       		.uleb128 0x1f
 3710 01b0 21       		.uleb128 0x21
 3711 01b1 00       		.byte	0
 3712 01b2 49       		.uleb128 0x49
 3713 01b3 13       		.uleb128 0x13
 3714 01b4 2F       		.uleb128 0x2f
 3715 01b5 0B       		.uleb128 0xb
 3716 01b6 00       		.byte	0
 3717 01b7 00       		.byte	0
 3718 01b8 20       		.uleb128 0x20
 3719 01b9 34       		.uleb128 0x34
 3720 01ba 00       		.byte	0
 3721 01bb 03       		.uleb128 0x3
 3722 01bc 0E       		.uleb128 0xe
 3723 01bd 3A       		.uleb128 0x3a
 3724 01be 0B       		.uleb128 0xb
 3725 01bf 3B       		.uleb128 0x3b
 3726 01c0 0B       		.uleb128 0xb
 3727 01c1 49       		.uleb128 0x49
 3728 01c2 13       		.uleb128 0x13
 3729 01c3 02       		.uleb128 0x2
 3730 01c4 18       		.uleb128 0x18
 3731 01c5 00       		.byte	0
 3732 01c6 00       		.byte	0
 3733 01c7 21       		.uleb128 0x21
 3734 01c8 34       		.uleb128 0x34
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 118


 3735 01c9 00       		.byte	0
 3736 01ca 03       		.uleb128 0x3
 3737 01cb 0E       		.uleb128 0xe
 3738 01cc 3A       		.uleb128 0x3a
 3739 01cd 0B       		.uleb128 0xb
 3740 01ce 3B       		.uleb128 0x3b
 3741 01cf 0B       		.uleb128 0xb
 3742 01d0 49       		.uleb128 0x49
 3743 01d1 13       		.uleb128 0x13
 3744 01d2 3F       		.uleb128 0x3f
 3745 01d3 19       		.uleb128 0x19
 3746 01d4 3C       		.uleb128 0x3c
 3747 01d5 19       		.uleb128 0x19
 3748 01d6 00       		.byte	0
 3749 01d7 00       		.byte	0
 3750 01d8 22       		.uleb128 0x22
 3751 01d9 34       		.uleb128 0x34
 3752 01da 00       		.byte	0
 3753 01db 03       		.uleb128 0x3
 3754 01dc 0E       		.uleb128 0xe
 3755 01dd 3A       		.uleb128 0x3a
 3756 01de 0B       		.uleb128 0xb
 3757 01df 3B       		.uleb128 0x3b
 3758 01e0 0B       		.uleb128 0xb
 3759 01e1 49       		.uleb128 0x49
 3760 01e2 13       		.uleb128 0x13
 3761 01e3 3F       		.uleb128 0x3f
 3762 01e4 19       		.uleb128 0x19
 3763 01e5 02       		.uleb128 0x2
 3764 01e6 18       		.uleb128 0x18
 3765 01e7 00       		.byte	0
 3766 01e8 00       		.byte	0
 3767 01e9 23       		.uleb128 0x23
 3768 01ea 2E       		.uleb128 0x2e
 3769 01eb 01       		.byte	0x1
 3770 01ec 3F       		.uleb128 0x3f
 3771 01ed 19       		.uleb128 0x19
 3772 01ee 03       		.uleb128 0x3
 3773 01ef 0E       		.uleb128 0xe
 3774 01f0 3A       		.uleb128 0x3a
 3775 01f1 0B       		.uleb128 0xb
 3776 01f2 3B       		.uleb128 0x3b
 3777 01f3 0B       		.uleb128 0xb
 3778 01f4 27       		.uleb128 0x27
 3779 01f5 19       		.uleb128 0x19
 3780 01f6 3C       		.uleb128 0x3c
 3781 01f7 19       		.uleb128 0x19
 3782 01f8 01       		.uleb128 0x1
 3783 01f9 13       		.uleb128 0x13
 3784 01fa 00       		.byte	0
 3785 01fb 00       		.byte	0
 3786 01fc 24       		.uleb128 0x24
 3787 01fd 2E       		.uleb128 0x2e
 3788 01fe 00       		.byte	0
 3789 01ff 3F       		.uleb128 0x3f
 3790 0200 19       		.uleb128 0x19
 3791 0201 03       		.uleb128 0x3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 119


 3792 0202 0E       		.uleb128 0xe
 3793 0203 3A       		.uleb128 0x3a
 3794 0204 0B       		.uleb128 0xb
 3795 0205 3B       		.uleb128 0x3b
 3796 0206 0B       		.uleb128 0xb
 3797 0207 27       		.uleb128 0x27
 3798 0208 19       		.uleb128 0x19
 3799 0209 49       		.uleb128 0x49
 3800 020a 13       		.uleb128 0x13
 3801 020b 3C       		.uleb128 0x3c
 3802 020c 19       		.uleb128 0x19
 3803 020d 00       		.byte	0
 3804 020e 00       		.byte	0
 3805 020f 25       		.uleb128 0x25
 3806 0210 2E       		.uleb128 0x2e
 3807 0211 00       		.byte	0
 3808 0212 3F       		.uleb128 0x3f
 3809 0213 19       		.uleb128 0x19
 3810 0214 03       		.uleb128 0x3
 3811 0215 0E       		.uleb128 0xe
 3812 0216 3A       		.uleb128 0x3a
 3813 0217 0B       		.uleb128 0xb
 3814 0218 3B       		.uleb128 0x3b
 3815 0219 0B       		.uleb128 0xb
 3816 021a 27       		.uleb128 0x27
 3817 021b 19       		.uleb128 0x19
 3818 021c 3C       		.uleb128 0x3c
 3819 021d 19       		.uleb128 0x19
 3820 021e 00       		.byte	0
 3821 021f 00       		.byte	0
 3822 0220 26       		.uleb128 0x26
 3823 0221 2E       		.uleb128 0x2e
 3824 0222 01       		.byte	0x1
 3825 0223 3F       		.uleb128 0x3f
 3826 0224 19       		.uleb128 0x19
 3827 0225 03       		.uleb128 0x3
 3828 0226 0E       		.uleb128 0xe
 3829 0227 3A       		.uleb128 0x3a
 3830 0228 0B       		.uleb128 0xb
 3831 0229 3B       		.uleb128 0x3b
 3832 022a 0B       		.uleb128 0xb
 3833 022b 27       		.uleb128 0x27
 3834 022c 19       		.uleb128 0x19
 3835 022d 49       		.uleb128 0x49
 3836 022e 13       		.uleb128 0x13
 3837 022f 3C       		.uleb128 0x3c
 3838 0230 19       		.uleb128 0x19
 3839 0231 01       		.uleb128 0x1
 3840 0232 13       		.uleb128 0x13
 3841 0233 00       		.byte	0
 3842 0234 00       		.byte	0
 3843 0235 27       		.uleb128 0x27
 3844 0236 2E       		.uleb128 0x2e
 3845 0237 01       		.byte	0x1
 3846 0238 3F       		.uleb128 0x3f
 3847 0239 19       		.uleb128 0x19
 3848 023a 03       		.uleb128 0x3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 120


 3849 023b 0E       		.uleb128 0xe
 3850 023c 3A       		.uleb128 0x3a
 3851 023d 0B       		.uleb128 0xb
 3852 023e 3B       		.uleb128 0x3b
 3853 023f 0B       		.uleb128 0xb
 3854 0240 27       		.uleb128 0x27
 3855 0241 19       		.uleb128 0x19
 3856 0242 3C       		.uleb128 0x3c
 3857 0243 19       		.uleb128 0x19
 3858 0244 00       		.byte	0
 3859 0245 00       		.byte	0
 3860 0246 00       		.byte	0
 3861              		.section	.debug_loc,"",%progbits
 3862              	.Ldebug_loc0:
 3863              	.LLST0:
 3864 0000 00000000 		.4byte	.LVL0
 3865 0004 1E000000 		.4byte	.LVL3
 3866 0008 0100     		.2byte	0x1
 3867 000a 50       		.byte	0x50
 3868 000b 1E000000 		.4byte	.LVL3
 3869 000f 40000000 		.4byte	.LFE34
 3870 0013 0400     		.2byte	0x4
 3871 0015 F3       		.byte	0xf3
 3872 0016 01       		.uleb128 0x1
 3873 0017 50       		.byte	0x50
 3874 0018 9F       		.byte	0x9f
 3875 0019 00000000 		.4byte	0
 3876 001d 00000000 		.4byte	0
 3877              	.LLST1:
 3878 0021 06000000 		.4byte	.LVL1
 3879 0025 0A000000 		.4byte	.LVL2
 3880 0029 0500     		.2byte	0x5
 3881 002b 73       		.byte	0x73
 3882 002c 00       		.sleb128 0
 3883 002d 70       		.byte	0x70
 3884 002e 00       		.sleb128 0
 3885 002f 22       		.byte	0x22
 3886 0030 0A000000 		.4byte	.LVL2
 3887 0034 1E000000 		.4byte	.LVL3
 3888 0038 0200     		.2byte	0x2
 3889 003a 70       		.byte	0x70
 3890 003b 00       		.sleb128 0
 3891 003c 1E000000 		.4byte	.LVL3
 3892 0040 28000000 		.4byte	.LVL4
 3893 0044 0100     		.2byte	0x1
 3894 0046 54       		.byte	0x54
 3895 0047 28000000 		.4byte	.LVL4
 3896 004b 40000000 		.4byte	.LFE34
 3897 004f 0300     		.2byte	0x3
 3898 0051 F3       		.byte	0xf3
 3899 0052 01       		.uleb128 0x1
 3900 0053 50       		.byte	0x50
 3901 0054 00000000 		.4byte	0
 3902 0058 00000000 		.4byte	0
 3903              	.LLST2:
 3904 005c 00000000 		.4byte	.LVL5
 3905 0060 07000000 		.4byte	.LVL6-1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 121


 3906 0064 0100     		.2byte	0x1
 3907 0066 50       		.byte	0x50
 3908 0067 07000000 		.4byte	.LVL6-1
 3909 006b 16000000 		.4byte	.LVL9
 3910 006f 0100     		.2byte	0x1
 3911 0071 54       		.byte	0x54
 3912 0072 16000000 		.4byte	.LVL9
 3913 0076 18000000 		.4byte	.LFE35
 3914 007a 0400     		.2byte	0x4
 3915 007c F3       		.byte	0xf3
 3916 007d 01       		.uleb128 0x1
 3917 007e 50       		.byte	0x50
 3918 007f 9F       		.byte	0x9f
 3919 0080 00000000 		.4byte	0
 3920 0084 00000000 		.4byte	0
 3921              	.LLST3:
 3922 0088 02000000 		.4byte	.LVL10
 3923 008c 06000000 		.4byte	.LVL11
 3924 0090 0200     		.2byte	0x2
 3925 0092 30       		.byte	0x30
 3926 0093 9F       		.byte	0x9f
 3927 0094 06000000 		.4byte	.LVL11
 3928 0098 12000000 		.4byte	.LVL14
 3929 009c 0100     		.2byte	0x1
 3930 009e 54       		.byte	0x54
 3931 009f 00000000 		.4byte	0
 3932 00a3 00000000 		.4byte	0
 3933              	.LLST4:
 3934 00a7 14000000 		.4byte	.LVL17
 3935 00ab 2C000000 		.4byte	.LVL22
 3936 00af 0100     		.2byte	0x1
 3937 00b1 54       		.byte	0x54
 3938 00b2 00000000 		.4byte	0
 3939 00b6 00000000 		.4byte	0
 3940              	.LLST5:
 3941 00ba 1C000000 		.4byte	.LVL18
 3942 00be 22000000 		.4byte	.LVL19
 3943 00c2 0100     		.2byte	0x1
 3944 00c4 50       		.byte	0x50
 3945 00c5 00000000 		.4byte	0
 3946 00c9 00000000 		.4byte	0
 3947              	.LLST6:
 3948 00cd 00000000 		.4byte	.LVL23
 3949 00d1 02000000 		.4byte	.LVL24
 3950 00d5 0100     		.2byte	0x1
 3951 00d7 50       		.byte	0x50
 3952 00d8 02000000 		.4byte	.LVL24
 3953 00dc 0C000000 		.4byte	.LFE42
 3954 00e0 0400     		.2byte	0x4
 3955 00e2 F3       		.byte	0xf3
 3956 00e3 01       		.uleb128 0x1
 3957 00e4 50       		.byte	0x50
 3958 00e5 9F       		.byte	0x9f
 3959 00e6 00000000 		.4byte	0
 3960 00ea 00000000 		.4byte	0
 3961              	.LLST7:
 3962 00ee 00000000 		.4byte	.LVL25
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 122


 3963 00f2 02000000 		.4byte	.LVL26
 3964 00f6 0100     		.2byte	0x1
 3965 00f8 50       		.byte	0x50
 3966 00f9 02000000 		.4byte	.LVL26
 3967 00fd 0C000000 		.4byte	.LFE43
 3968 0101 0400     		.2byte	0x4
 3969 0103 F3       		.byte	0xf3
 3970 0104 01       		.uleb128 0x1
 3971 0105 50       		.byte	0x50
 3972 0106 9F       		.byte	0x9f
 3973 0107 00000000 		.4byte	0
 3974 010b 00000000 		.4byte	0
 3975              	.LLST8:
 3976 010f 00000000 		.4byte	.LVL27
 3977 0113 06000000 		.4byte	.LVL28
 3978 0117 0100     		.2byte	0x1
 3979 0119 50       		.byte	0x50
 3980 011a 06000000 		.4byte	.LVL28
 3981 011e 0C000000 		.4byte	.LFE44
 3982 0122 0400     		.2byte	0x4
 3983 0124 F3       		.byte	0xf3
 3984 0125 01       		.uleb128 0x1
 3985 0126 50       		.byte	0x50
 3986 0127 9F       		.byte	0x9f
 3987 0128 00000000 		.4byte	0
 3988 012c 00000000 		.4byte	0
 3989              	.LLST9:
 3990 0130 00000000 		.4byte	.LVL30
 3991 0134 04000000 		.4byte	.LVL31
 3992 0138 0100     		.2byte	0x1
 3993 013a 50       		.byte	0x50
 3994 013b 04000000 		.4byte	.LVL31
 3995 013f 0C000000 		.4byte	.LFE46
 3996 0143 0400     		.2byte	0x4
 3997 0145 F3       		.byte	0xf3
 3998 0146 01       		.uleb128 0x1
 3999 0147 50       		.byte	0x50
 4000 0148 9F       		.byte	0x9f
 4001 0149 00000000 		.4byte	0
 4002 014d 00000000 		.4byte	0
 4003              	.LLST10:
 4004 0151 00000000 		.4byte	.LVL32
 4005 0155 04000000 		.4byte	.LVL33
 4006 0159 0100     		.2byte	0x1
 4007 015b 50       		.byte	0x50
 4008 015c 04000000 		.4byte	.LVL33
 4009 0160 0C000000 		.4byte	.LFE47
 4010 0164 0400     		.2byte	0x4
 4011 0166 F3       		.byte	0xf3
 4012 0167 01       		.uleb128 0x1
 4013 0168 50       		.byte	0x50
 4014 0169 9F       		.byte	0x9f
 4015 016a 00000000 		.4byte	0
 4016 016e 00000000 		.4byte	0
 4017              	.LLST11:
 4018 0172 00000000 		.4byte	.LVL34
 4019 0176 04000000 		.4byte	.LVL35
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 123


 4020 017a 0100     		.2byte	0x1
 4021 017c 50       		.byte	0x50
 4022 017d 04000000 		.4byte	.LVL35
 4023 0181 0C000000 		.4byte	.LFE48
 4024 0185 0400     		.2byte	0x4
 4025 0187 F3       		.byte	0xf3
 4026 0188 01       		.uleb128 0x1
 4027 0189 50       		.byte	0x50
 4028 018a 9F       		.byte	0x9f
 4029 018b 00000000 		.4byte	0
 4030 018f 00000000 		.4byte	0
 4031              	.LLST12:
 4032 0193 00000000 		.4byte	.LVL36
 4033 0197 04000000 		.4byte	.LVL37
 4034 019b 0100     		.2byte	0x1
 4035 019d 50       		.byte	0x50
 4036 019e 04000000 		.4byte	.LVL37
 4037 01a2 0C000000 		.4byte	.LFE49
 4038 01a6 0400     		.2byte	0x4
 4039 01a8 F3       		.byte	0xf3
 4040 01a9 01       		.uleb128 0x1
 4041 01aa 50       		.byte	0x50
 4042 01ab 9F       		.byte	0x9f
 4043 01ac 00000000 		.4byte	0
 4044 01b0 00000000 		.4byte	0
 4045              	.LLST13:
 4046 01b4 00000000 		.4byte	.LVL38
 4047 01b8 04000000 		.4byte	.LVL39
 4048 01bc 0100     		.2byte	0x1
 4049 01be 50       		.byte	0x50
 4050 01bf 04000000 		.4byte	.LVL39
 4051 01c3 0C000000 		.4byte	.LFE50
 4052 01c7 0400     		.2byte	0x4
 4053 01c9 F3       		.byte	0xf3
 4054 01ca 01       		.uleb128 0x1
 4055 01cb 50       		.byte	0x50
 4056 01cc 9F       		.byte	0x9f
 4057 01cd 00000000 		.4byte	0
 4058 01d1 00000000 		.4byte	0
 4059              	.LLST14:
 4060 01d5 00000000 		.4byte	.LVL44
 4061 01d9 04000000 		.4byte	.LVL45
 4062 01dd 0100     		.2byte	0x1
 4063 01df 50       		.byte	0x50
 4064 01e0 04000000 		.4byte	.LVL45
 4065 01e4 0C000000 		.4byte	.LFE55
 4066 01e8 0400     		.2byte	0x4
 4067 01ea F3       		.byte	0xf3
 4068 01eb 01       		.uleb128 0x1
 4069 01ec 50       		.byte	0x50
 4070 01ed 9F       		.byte	0x9f
 4071 01ee 00000000 		.4byte	0
 4072 01f2 00000000 		.4byte	0
 4073              	.LLST15:
 4074 01f6 00000000 		.4byte	.LVL46
 4075 01fa 1C000000 		.4byte	.LVL52
 4076 01fe 0100     		.2byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 124


 4077 0200 50       		.byte	0x50
 4078 0201 1C000000 		.4byte	.LVL52
 4079 0205 90000000 		.4byte	.LVL60
 4080 0209 0100     		.2byte	0x1
 4081 020b 54       		.byte	0x54
 4082 020c 90000000 		.4byte	.LVL60
 4083 0210 A8000000 		.4byte	.LFE56
 4084 0214 0400     		.2byte	0x4
 4085 0216 F3       		.byte	0xf3
 4086 0217 01       		.uleb128 0x1
 4087 0218 50       		.byte	0x50
 4088 0219 9F       		.byte	0x9f
 4089 021a 00000000 		.4byte	0
 4090 021e 00000000 		.4byte	0
 4091              	.LLST16:
 4092 0222 1A000000 		.4byte	.LVL51
 4093 0226 23000000 		.4byte	.LVL53-1
 4094 022a 0800     		.2byte	0x8
 4095 022c 75       		.byte	0x75
 4096 022d 00       		.sleb128 0
 4097 022e 03       		.byte	0x3
 4098 022f 00000000 		.4byte	.LANCHOR1
 4099 0233 22       		.byte	0x22
 4100 0234 23000000 		.4byte	.LVL53-1
 4101 0238 90000000 		.4byte	.LVL62
 4102 023c 0100     		.2byte	0x1
 4103 023e 58       		.byte	0x58
 4104 023f 00000000 		.4byte	0
 4105 0243 00000000 		.4byte	0
 4106              	.LLST17:
 4107 0247 12000000 		.4byte	.LVL47
 4108 024b 14000000 		.4byte	.LVL48
 4109 024f 0200     		.2byte	0x2
 4110 0251 72       		.byte	0x72
 4111 0252 0C       		.sleb128 12
 4112 0253 14000000 		.4byte	.LVL48
 4113 0257 18000000 		.4byte	.LVL50
 4114 025b 0700     		.2byte	0x7
 4115 025d 73       		.byte	0x73
 4116 025e 00       		.sleb128 0
 4117 025f 75       		.byte	0x75
 4118 0260 00       		.sleb128 0
 4119 0261 22       		.byte	0x22
 4120 0262 23       		.byte	0x23
 4121 0263 0C       		.uleb128 0xc
 4122 0264 18000000 		.4byte	.LVL50
 4123 0268 23000000 		.4byte	.LVL53-1
 4124 026c 0800     		.2byte	0x8
 4125 026e 75       		.byte	0x75
 4126 026f 00       		.sleb128 0
 4127 0270 03       		.byte	0x3
 4128 0271 0C000000 		.4byte	.LANCHOR1+12
 4129 0275 22       		.byte	0x22
 4130 0276 23000000 		.4byte	.LVL53-1
 4131 027a 90000000 		.4byte	.LVL61
 4132 027e 0100     		.2byte	0x1
 4133 0280 57       		.byte	0x57
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 125


 4134 0281 00000000 		.4byte	0
 4135 0285 00000000 		.4byte	0
 4136              	.LLST18:
 4137 0289 16000000 		.4byte	.LVL49
 4138 028d 23000000 		.4byte	.LVL53-1
 4139 0291 0500     		.2byte	0x5
 4140 0293 72       		.byte	0x72
 4141 0294 00       		.sleb128 0
 4142 0295 75       		.byte	0x75
 4143 0296 00       		.sleb128 0
 4144 0297 22       		.byte	0x22
 4145 0298 23000000 		.4byte	.LVL53-1
 4146 029c 30000000 		.4byte	.LVL54
 4147 02a0 0100     		.2byte	0x1
 4148 02a2 56       		.byte	0x56
 4149 02a3 4A000000 		.4byte	.LVL56
 4150 02a7 52000000 		.4byte	.LVL57
 4151 02ab 0100     		.2byte	0x1
 4152 02ad 56       		.byte	0x56
 4153 02ae 00000000 		.4byte	0
 4154 02b2 00000000 		.4byte	0
 4155              	.LLST19:
 4156 02b6 00000000 		.4byte	.LVL63
 4157 02ba 08000000 		.4byte	.LVL65
 4158 02be 0100     		.2byte	0x1
 4159 02c0 50       		.byte	0x50
 4160 02c1 08000000 		.4byte	.LVL65
 4161 02c5 2C000000 		.4byte	.LFE57
 4162 02c9 0400     		.2byte	0x4
 4163 02cb F3       		.byte	0xf3
 4164 02cc 01       		.uleb128 0x1
 4165 02cd 50       		.byte	0x50
 4166 02ce 9F       		.byte	0x9f
 4167 02cf 00000000 		.4byte	0
 4168 02d3 00000000 		.4byte	0
 4169              	.LLST20:
 4170 02d7 06000000 		.4byte	.LVL64
 4171 02db 24000000 		.4byte	.LVL71
 4172 02df 0100     		.2byte	0x1
 4173 02e1 54       		.byte	0x54
 4174 02e2 00000000 		.4byte	0
 4175 02e6 00000000 		.4byte	0
 4176              	.LLST21:
 4177 02ea 0C000000 		.4byte	.LVL66
 4178 02ee 24000000 		.4byte	.LVL72
 4179 02f2 0100     		.2byte	0x1
 4180 02f4 55       		.byte	0x55
 4181 02f5 24000000 		.4byte	.LVL72
 4182 02f9 2C000000 		.4byte	.LFE57
 4183 02fd 1E00     		.2byte	0x1e
 4184 02ff F3       		.byte	0xf3
 4185 0300 01       		.uleb128 0x1
 4186 0301 50       		.byte	0x50
 4187 0302 03       		.byte	0x3
 4188 0303 0C000000 		.4byte	.LANCHOR2+12
 4189 0307 22       		.byte	0x22
 4190 0308 94       		.byte	0x94
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 126


 4191 0309 01       		.byte	0x1
 4192 030a 08       		.byte	0x8
 4193 030b FF       		.byte	0xff
 4194 030c 1A       		.byte	0x1a
 4195 030d F3       		.byte	0xf3
 4196 030e 01       		.uleb128 0x1
 4197 030f 50       		.byte	0x50
 4198 0310 03       		.byte	0x3
 4199 0311 00000000 		.4byte	.LANCHOR2
 4200 0315 22       		.byte	0x22
 4201 0316 94       		.byte	0x94
 4202 0317 01       		.byte	0x1
 4203 0318 08       		.byte	0x8
 4204 0319 FF       		.byte	0xff
 4205 031a 1A       		.byte	0x1a
 4206 031b 22       		.byte	0x22
 4207 031c 9F       		.byte	0x9f
 4208 031d 00000000 		.4byte	0
 4209 0321 00000000 		.4byte	0
 4210              	.LLST22:
 4211 0325 0C000000 		.4byte	.LVL66
 4212 0329 10000000 		.4byte	.LVL67
 4213 032d 0200     		.2byte	0x2
 4214 032f 30       		.byte	0x30
 4215 0330 9F       		.byte	0x9f
 4216 0331 10000000 		.4byte	.LVL67
 4217 0335 24000000 		.4byte	.LVL73
 4218 0339 0100     		.2byte	0x1
 4219 033b 56       		.byte	0x56
 4220 033c 24000000 		.4byte	.LVL73
 4221 0340 2C000000 		.4byte	.LFE57
 4222 0344 0100     		.2byte	0x1
 4223 0346 50       		.byte	0x50
 4224 0347 00000000 		.4byte	0
 4225 034b 00000000 		.4byte	0
 4226              	.LLST23:
 4227 034f 02000000 		.4byte	.LVL74
 4228 0353 0A000000 		.4byte	.LVL75
 4229 0357 0200     		.2byte	0x2
 4230 0359 30       		.byte	0x30
 4231 035a 9F       		.byte	0x9f
 4232 035b 0A000000 		.4byte	.LVL75
 4233 035f 1E000000 		.4byte	.LVL79
 4234 0363 0100     		.2byte	0x1
 4235 0365 54       		.byte	0x54
 4236 0366 00000000 		.4byte	0
 4237 036a 00000000 		.4byte	0
 4238              	.LLST24:
 4239 036e 02000000 		.4byte	.LVL74
 4240 0372 0A000000 		.4byte	.LVL75
 4241 0376 0200     		.2byte	0x2
 4242 0378 30       		.byte	0x30
 4243 0379 9F       		.byte	0x9f
 4244 037a 0A000000 		.4byte	.LVL75
 4245 037e 1E000000 		.4byte	.LVL80
 4246 0382 0100     		.2byte	0x1
 4247 0384 55       		.byte	0x55
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 127


 4248 0385 1E000000 		.4byte	.LVL80
 4249 0389 20000000 		.4byte	.LFE58
 4250 038d 0100     		.2byte	0x1
 4251 038f 50       		.byte	0x50
 4252 0390 00000000 		.4byte	0
 4253 0394 00000000 		.4byte	0
 4254              	.LLST25:
 4255 0398 00000000 		.4byte	.LVL81
 4256 039c 08000000 		.4byte	.LVL83
 4257 03a0 0100     		.2byte	0x1
 4258 03a2 50       		.byte	0x50
 4259 03a3 08000000 		.4byte	.LVL83
 4260 03a7 2C000000 		.4byte	.LFE59
 4261 03ab 0400     		.2byte	0x4
 4262 03ad F3       		.byte	0xf3
 4263 03ae 01       		.uleb128 0x1
 4264 03af 50       		.byte	0x50
 4265 03b0 9F       		.byte	0x9f
 4266 03b1 00000000 		.4byte	0
 4267 03b5 00000000 		.4byte	0
 4268              	.LLST26:
 4269 03b9 06000000 		.4byte	.LVL82
 4270 03bd 08000000 		.4byte	.LVL83
 4271 03c1 0500     		.2byte	0x5
 4272 03c3 73       		.byte	0x73
 4273 03c4 00       		.sleb128 0
 4274 03c5 70       		.byte	0x70
 4275 03c6 00       		.sleb128 0
 4276 03c7 22       		.byte	0x22
 4277 03c8 08000000 		.4byte	.LVL83
 4278 03cc 10000000 		.4byte	.LVL85
 4279 03d0 0200     		.2byte	0x2
 4280 03d2 70       		.byte	0x70
 4281 03d3 00       		.sleb128 0
 4282 03d4 10000000 		.4byte	.LVL85
 4283 03d8 1C000000 		.4byte	.LVL87
 4284 03dc 0100     		.2byte	0x1
 4285 03de 54       		.byte	0x54
 4286 03df 1C000000 		.4byte	.LVL87
 4287 03e3 1E000000 		.4byte	.LVL88
 4288 03e7 0300     		.2byte	0x3
 4289 03e9 74       		.byte	0x74
 4290 03ea 7F       		.sleb128 -1
 4291 03eb 9F       		.byte	0x9f
 4292 03ec 1E000000 		.4byte	.LVL88
 4293 03f0 22000000 		.4byte	.LVL89
 4294 03f4 0100     		.2byte	0x1
 4295 03f6 54       		.byte	0x54
 4296 03f7 00000000 		.4byte	0
 4297 03fb 00000000 		.4byte	0
 4298              	.LLST27:
 4299 03ff 0E000000 		.4byte	.LVL84
 4300 0403 22000000 		.4byte	.LVL90
 4301 0407 0100     		.2byte	0x1
 4302 0409 56       		.byte	0x56
 4303 040a 22000000 		.4byte	.LVL90
 4304 040e 2C000000 		.4byte	.LFE59
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 128


 4305 0412 1E00     		.2byte	0x1e
 4306 0414 F3       		.byte	0xf3
 4307 0415 01       		.uleb128 0x1
 4308 0416 50       		.byte	0x50
 4309 0417 03       		.byte	0x3
 4310 0418 0C000000 		.4byte	.LANCHOR2+12
 4311 041c 22       		.byte	0x22
 4312 041d 94       		.byte	0x94
 4313 041e 01       		.byte	0x1
 4314 041f 08       		.byte	0x8
 4315 0420 FF       		.byte	0xff
 4316 0421 1A       		.byte	0x1a
 4317 0422 F3       		.byte	0xf3
 4318 0423 01       		.uleb128 0x1
 4319 0424 50       		.byte	0x50
 4320 0425 03       		.byte	0x3
 4321 0426 00000000 		.4byte	.LANCHOR2
 4322 042a 22       		.byte	0x22
 4323 042b 94       		.byte	0x94
 4324 042c 01       		.byte	0x1
 4325 042d 08       		.byte	0x8
 4326 042e FF       		.byte	0xff
 4327 042f 1A       		.byte	0x1a
 4328 0430 22       		.byte	0x22
 4329 0431 9F       		.byte	0x9f
 4330 0432 00000000 		.4byte	0
 4331 0436 00000000 		.4byte	0
 4332              	.LLST28:
 4333 043a 00000000 		.4byte	.LVL91
 4334 043e 08000000 		.4byte	.LVL93
 4335 0442 0100     		.2byte	0x1
 4336 0444 50       		.byte	0x50
 4337 0445 08000000 		.4byte	.LVL93
 4338 0449 2C000000 		.4byte	.LFE60
 4339 044d 0400     		.2byte	0x4
 4340 044f F3       		.byte	0xf3
 4341 0450 01       		.uleb128 0x1
 4342 0451 50       		.byte	0x50
 4343 0452 9F       		.byte	0x9f
 4344 0453 00000000 		.4byte	0
 4345 0457 00000000 		.4byte	0
 4346              	.LLST29:
 4347 045b 06000000 		.4byte	.LVL92
 4348 045f 08000000 		.4byte	.LVL93
 4349 0463 0500     		.2byte	0x5
 4350 0465 73       		.byte	0x73
 4351 0466 00       		.sleb128 0
 4352 0467 70       		.byte	0x70
 4353 0468 00       		.sleb128 0
 4354 0469 22       		.byte	0x22
 4355 046a 08000000 		.4byte	.LVL93
 4356 046e 10000000 		.4byte	.LVL95
 4357 0472 0200     		.2byte	0x2
 4358 0474 70       		.byte	0x70
 4359 0475 00       		.sleb128 0
 4360 0476 10000000 		.4byte	.LVL95
 4361 047a 1C000000 		.4byte	.LVL97
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 129


 4362 047e 0100     		.2byte	0x1
 4363 0480 54       		.byte	0x54
 4364 0481 1C000000 		.4byte	.LVL97
 4365 0485 1E000000 		.4byte	.LVL98
 4366 0489 0300     		.2byte	0x3
 4367 048b 74       		.byte	0x74
 4368 048c 7F       		.sleb128 -1
 4369 048d 9F       		.byte	0x9f
 4370 048e 1E000000 		.4byte	.LVL98
 4371 0492 22000000 		.4byte	.LVL99
 4372 0496 0100     		.2byte	0x1
 4373 0498 54       		.byte	0x54
 4374 0499 00000000 		.4byte	0
 4375 049d 00000000 		.4byte	0
 4376              	.LLST30:
 4377 04a1 0E000000 		.4byte	.LVL94
 4378 04a5 22000000 		.4byte	.LVL100
 4379 04a9 0100     		.2byte	0x1
 4380 04ab 56       		.byte	0x56
 4381 04ac 22000000 		.4byte	.LVL100
 4382 04b0 2C000000 		.4byte	.LFE60
 4383 04b4 1E00     		.2byte	0x1e
 4384 04b6 F3       		.byte	0xf3
 4385 04b7 01       		.uleb128 0x1
 4386 04b8 50       		.byte	0x50
 4387 04b9 03       		.byte	0x3
 4388 04ba 0C000000 		.4byte	.LANCHOR2+12
 4389 04be 22       		.byte	0x22
 4390 04bf 94       		.byte	0x94
 4391 04c0 01       		.byte	0x1
 4392 04c1 08       		.byte	0x8
 4393 04c2 FF       		.byte	0xff
 4394 04c3 1A       		.byte	0x1a
 4395 04c4 F3       		.byte	0xf3
 4396 04c5 01       		.uleb128 0x1
 4397 04c6 50       		.byte	0x50
 4398 04c7 03       		.byte	0x3
 4399 04c8 00000000 		.4byte	.LANCHOR2
 4400 04cc 22       		.byte	0x22
 4401 04cd 94       		.byte	0x94
 4402 04ce 01       		.byte	0x1
 4403 04cf 08       		.byte	0x8
 4404 04d0 FF       		.byte	0xff
 4405 04d1 1A       		.byte	0x1a
 4406 04d2 22       		.byte	0x22
 4407 04d3 9F       		.byte	0x9f
 4408 04d4 00000000 		.4byte	0
 4409 04d8 00000000 		.4byte	0
 4410              	.LLST31:
 4411 04dc 00000000 		.4byte	.LVL101
 4412 04e0 08000000 		.4byte	.LVL102
 4413 04e4 0100     		.2byte	0x1
 4414 04e6 50       		.byte	0x50
 4415 04e7 08000000 		.4byte	.LVL102
 4416 04eb 0A000000 		.4byte	.LVL103
 4417 04ef 0400     		.2byte	0x4
 4418 04f1 F3       		.byte	0xf3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 130


 4419 04f2 01       		.uleb128 0x1
 4420 04f3 50       		.byte	0x50
 4421 04f4 9F       		.byte	0x9f
 4422 04f5 0A000000 		.4byte	.LVL103
 4423 04f9 1A000000 		.4byte	.LVL105
 4424 04fd 0100     		.2byte	0x1
 4425 04ff 50       		.byte	0x50
 4426 0500 00000000 		.4byte	0
 4427 0504 00000000 		.4byte	0
 4428              	.LLST32:
 4429 0508 00000000 		.4byte	.LVL101
 4430 050c 0A000000 		.4byte	.LVL103
 4431 0510 0100     		.2byte	0x1
 4432 0512 51       		.byte	0x51
 4433 0513 0A000000 		.4byte	.LVL103
 4434 0517 1C000000 		.4byte	.LFE61
 4435 051b 0100     		.2byte	0x1
 4436 051d 51       		.byte	0x51
 4437 051e 00000000 		.4byte	0
 4438 0522 00000000 		.4byte	0
 4439              	.LLST33:
 4440 0526 00000000 		.4byte	.LVL106
 4441 052a 02000000 		.4byte	.LVL107
 4442 052e 0100     		.2byte	0x1
 4443 0530 50       		.byte	0x50
 4444 0531 02000000 		.4byte	.LVL107
 4445 0535 0A000000 		.4byte	.LFE62
 4446 0539 0400     		.2byte	0x4
 4447 053b F3       		.byte	0xf3
 4448 053c 01       		.uleb128 0x1
 4449 053d 50       		.byte	0x50
 4450 053e 9F       		.byte	0x9f
 4451 053f 00000000 		.4byte	0
 4452 0543 00000000 		.4byte	0
 4453              	.LLST34:
 4454 0547 00000000 		.4byte	.LVL106
 4455 054b 04000000 		.4byte	.LVL108
 4456 054f 0100     		.2byte	0x1
 4457 0551 51       		.byte	0x51
 4458 0552 04000000 		.4byte	.LVL108
 4459 0556 0A000000 		.4byte	.LFE62
 4460 055a 0400     		.2byte	0x4
 4461 055c F3       		.byte	0xf3
 4462 055d 01       		.uleb128 0x1
 4463 055e 51       		.byte	0x51
 4464 055f 9F       		.byte	0x9f
 4465 0560 00000000 		.4byte	0
 4466 0564 00000000 		.4byte	0
 4467              	.LLST35:
 4468 0568 02000000 		.4byte	.LVL107
 4469 056c 06000000 		.4byte	.LVL109
 4470 0570 0100     		.2byte	0x1
 4471 0572 50       		.byte	0x50
 4472 0573 06000000 		.4byte	.LVL109
 4473 0577 08000000 		.4byte	.LVL110
 4474 057b 0500     		.2byte	0x5
 4475 057d 70       		.byte	0x70
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 131


 4476 057e 00       		.sleb128 0
 4477 057f 32       		.byte	0x32
 4478 0580 25       		.byte	0x25
 4479 0581 9F       		.byte	0x9f
 4480 0582 08000000 		.4byte	.LVL110
 4481 0586 0A000000 		.4byte	.LFE62
 4482 058a 0100     		.2byte	0x1
 4483 058c 50       		.byte	0x50
 4484 058d 00000000 		.4byte	0
 4485 0591 00000000 		.4byte	0
 4486              	.LLST36:
 4487 0595 00000000 		.4byte	.LVL111
 4488 0599 2E000000 		.4byte	.LVL117
 4489 059d 0100     		.2byte	0x1
 4490 059f 50       		.byte	0x50
 4491 05a0 2E000000 		.4byte	.LVL117
 4492 05a4 EC000000 		.4byte	.LVL136
 4493 05a8 0100     		.2byte	0x1
 4494 05aa 54       		.byte	0x54
 4495 05ab EC000000 		.4byte	.LVL136
 4496 05af 18010000 		.4byte	.LFE38
 4497 05b3 0400     		.2byte	0x4
 4498 05b5 F3       		.byte	0xf3
 4499 05b6 01       		.uleb128 0x1
 4500 05b7 50       		.byte	0x50
 4501 05b8 9F       		.byte	0x9f
 4502 05b9 00000000 		.4byte	0
 4503 05bd 00000000 		.4byte	0
 4504              	.LLST37:
 4505 05c1 AA000000 		.4byte	.LVL127
 4506 05c5 B4000000 		.4byte	.LVL129
 4507 05c9 0100     		.2byte	0x1
 4508 05cb 50       		.byte	0x50
 4509 05cc B4000000 		.4byte	.LVL129
 4510 05d0 B6000000 		.4byte	.LVL130
 4511 05d4 0100     		.2byte	0x1
 4512 05d6 55       		.byte	0x55
 4513 05d7 B6000000 		.4byte	.LVL130
 4514 05db C2000000 		.4byte	.LVL131
 4515 05df 0100     		.2byte	0x1
 4516 05e1 53       		.byte	0x53
 4517 05e2 00000000 		.4byte	0
 4518 05e6 00000000 		.4byte	0
 4519              	.LLST38:
 4520 05ea 56000000 		.4byte	.LVL122
 4521 05ee 5C000000 		.4byte	.LVL123
 4522 05f2 0200     		.2byte	0x2
 4523 05f4 31       		.byte	0x31
 4524 05f5 9F       		.byte	0x9f
 4525 05f6 60000000 		.4byte	.LVL124
 4526 05fa 64000000 		.4byte	.LVL125
 4527 05fe 0200     		.2byte	0x2
 4528 0600 30       		.byte	0x30
 4529 0601 9F       		.byte	0x9f
 4530 0602 64000000 		.4byte	.LVL125
 4531 0606 CE000000 		.4byte	.LVL132
 4532 060a 0100     		.2byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 132


 4533 060c 59       		.byte	0x59
 4534 060d CE000000 		.4byte	.LVL132
 4535 0611 D6000000 		.4byte	.LVL133
 4536 0615 0100     		.2byte	0x1
 4537 0617 53       		.byte	0x53
 4538 0618 D6000000 		.4byte	.LVL133
 4539 061c DC000000 		.4byte	.LVL134
 4540 0620 0100     		.2byte	0x1
 4541 0622 59       		.byte	0x59
 4542 0623 DC000000 		.4byte	.LVL134
 4543 0627 DE000000 		.4byte	.LVL135
 4544 062b 0100     		.2byte	0x1
 4545 062d 53       		.byte	0x53
 4546 062e DE000000 		.4byte	.LVL135
 4547 0632 EC000000 		.4byte	.LVL139
 4548 0636 0100     		.2byte	0x1
 4549 0638 59       		.byte	0x59
 4550 0639 00000000 		.4byte	0
 4551 063d 00000000 		.4byte	0
 4552              	.LLST39:
 4553 0641 56000000 		.4byte	.LVL122
 4554 0645 5C000000 		.4byte	.LVL123
 4555 0649 0100     		.2byte	0x1
 4556 064b 56       		.byte	0x56
 4557 064c 60000000 		.4byte	.LVL124
 4558 0650 EC000000 		.4byte	.LVL137
 4559 0654 0100     		.2byte	0x1
 4560 0656 56       		.byte	0x56
 4561 0657 00000000 		.4byte	0
 4562 065b 00000000 		.4byte	0
 4563              	.LLST40:
 4564 065f 1A000000 		.4byte	.LVL113
 4565 0663 1C000000 		.4byte	.LVL114
 4566 0667 0500     		.2byte	0x5
 4567 0669 73       		.byte	0x73
 4568 066a 00       		.sleb128 0
 4569 066b 72       		.byte	0x72
 4570 066c 00       		.sleb128 0
 4571 066d 22       		.byte	0x22
 4572 066e 1C000000 		.4byte	.LVL114
 4573 0672 1E000000 		.4byte	.LVL115
 4574 0676 0200     		.2byte	0x2
 4575 0678 72       		.byte	0x72
 4576 0679 00       		.sleb128 0
 4577 067a 1E000000 		.4byte	.LVL115
 4578 067e 28000000 		.4byte	.LVL116
 4579 0682 0400     		.2byte	0x4
 4580 0684 70       		.byte	0x70
 4581 0685 00       		.sleb128 0
 4582 0686 31       		.byte	0x31
 4583 0687 24       		.byte	0x24
 4584 0688 28000000 		.4byte	.LVL116
 4585 068c 31000000 		.4byte	.LVL118-1
 4586 0690 0200     		.2byte	0x2
 4587 0692 72       		.byte	0x72
 4588 0693 00       		.sleb128 0
 4589 0694 31000000 		.4byte	.LVL118-1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 133


 4590 0698 34000000 		.4byte	.LVL119
 4591 069c 0100     		.2byte	0x1
 4592 069e 55       		.byte	0x55
 4593 069f 34000000 		.4byte	.LVL119
 4594 06a3 38000000 		.4byte	.LVL120
 4595 06a7 0100     		.2byte	0x1
 4596 06a9 50       		.byte	0x50
 4597 06aa 38000000 		.4byte	.LVL120
 4598 06ae B4000000 		.4byte	.LVL129
 4599 06b2 0100     		.2byte	0x1
 4600 06b4 55       		.byte	0x55
 4601 06b5 00000000 		.4byte	0
 4602 06b9 00000000 		.4byte	0
 4603              	.LLST41:
 4604 06bd 14000000 		.4byte	.LVL112
 4605 06c1 31000000 		.4byte	.LVL118-1
 4606 06c5 0800     		.2byte	0x8
 4607 06c7 77       		.byte	0x77
 4608 06c8 00       		.sleb128 0
 4609 06c9 03       		.byte	0x3
 4610 06ca 00000000 		.4byte	CapSense_noiseThreshold
 4611 06ce 22       		.byte	0x22
 4612 06cf 31000000 		.4byte	.LVL118-1
 4613 06d3 EC000000 		.4byte	.LVL138
 4614 06d7 0100     		.2byte	0x1
 4615 06d9 58       		.byte	0x58
 4616 06da 00000000 		.4byte	0
 4617 06de 00000000 		.4byte	0
 4618              	.LLST42:
 4619 06e2 00000000 		.4byte	.LVL140
 4620 06e6 07000000 		.4byte	.LVL141-1
 4621 06ea 0100     		.2byte	0x1
 4622 06ec 50       		.byte	0x50
 4623 06ed 07000000 		.4byte	.LVL141-1
 4624 06f1 0E000000 		.4byte	.LVL143
 4625 06f5 0100     		.2byte	0x1
 4626 06f7 54       		.byte	0x54
 4627 06f8 0E000000 		.4byte	.LVL143
 4628 06fc 10000000 		.4byte	.LFE39
 4629 0700 0400     		.2byte	0x4
 4630 0702 F3       		.byte	0xf3
 4631 0703 01       		.uleb128 0x1
 4632 0704 50       		.byte	0x50
 4633 0705 9F       		.byte	0x9f
 4634 0706 00000000 		.4byte	0
 4635 070a 00000000 		.4byte	0
 4636              	.LLST43:
 4637 070e 02000000 		.4byte	.LVL144
 4638 0712 08000000 		.4byte	.LVL145
 4639 0716 0200     		.2byte	0x2
 4640 0718 30       		.byte	0x30
 4641 0719 9F       		.byte	0x9f
 4642 071a 08000000 		.4byte	.LVL145
 4643 071e 20000000 		.4byte	.LVL150
 4644 0722 0100     		.2byte	0x1
 4645 0724 54       		.byte	0x54
 4646 0725 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 134


 4647 0729 00000000 		.4byte	0
 4648              	.LLST44:
 4649 072d 10000000 		.4byte	.LVL146
 4650 0731 16000000 		.4byte	.LVL147
 4651 0735 0100     		.2byte	0x1
 4652 0737 50       		.byte	0x50
 4653 0738 00000000 		.4byte	0
 4654 073c 00000000 		.4byte	0
 4655              	.LLST45:
 4656 0740 00000000 		.4byte	.LVL151
 4657 0744 10000000 		.4byte	.LVL155
 4658 0748 0100     		.2byte	0x1
 4659 074a 50       		.byte	0x50
 4660 074b 10000000 		.4byte	.LVL155
 4661 074f 34000000 		.4byte	.LFE41
 4662 0753 0400     		.2byte	0x4
 4663 0755 F3       		.byte	0xf3
 4664 0756 01       		.uleb128 0x1
 4665 0757 50       		.byte	0x50
 4666 0758 9F       		.byte	0x9f
 4667 0759 00000000 		.4byte	0
 4668 075d 00000000 		.4byte	0
 4669              	.LLST46:
 4670 0761 08000000 		.4byte	.LVL152
 4671 0765 0C000000 		.4byte	.LVL154
 4672 0769 0100     		.2byte	0x1
 4673 076b 55       		.byte	0x55
 4674 076c 0C000000 		.4byte	.LVL154
 4675 0770 10000000 		.4byte	.LVL155
 4676 0774 0800     		.2byte	0x8
 4677 0776 72       		.byte	0x72
 4678 0777 0C       		.sleb128 12
 4679 0778 94       		.byte	0x94
 4680 0779 01       		.byte	0x1
 4681 077a 08       		.byte	0x8
 4682 077b FF       		.byte	0xff
 4683 077c 1A       		.byte	0x1a
 4684 077d 9F       		.byte	0x9f
 4685 077e 10000000 		.4byte	.LVL155
 4686 0782 34000000 		.4byte	.LFE41
 4687 0786 0F00     		.2byte	0xf
 4688 0788 F3       		.byte	0xf3
 4689 0789 01       		.uleb128 0x1
 4690 078a 50       		.byte	0x50
 4691 078b 03       		.byte	0x3
 4692 078c 0C000000 		.4byte	.LANCHOR2+12
 4693 0790 22       		.byte	0x22
 4694 0791 94       		.byte	0x94
 4695 0792 01       		.byte	0x1
 4696 0793 08       		.byte	0x8
 4697 0794 FF       		.byte	0xff
 4698 0795 1A       		.byte	0x1a
 4699 0796 9F       		.byte	0x9f
 4700 0797 00000000 		.4byte	0
 4701 079b 00000000 		.4byte	0
 4702              	.LLST47:
 4703 079f 0A000000 		.4byte	.LVL153
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 135


 4704 07a3 10000000 		.4byte	.LVL155
 4705 07a7 0100     		.2byte	0x1
 4706 07a9 54       		.byte	0x54
 4707 07aa 10000000 		.4byte	.LVL155
 4708 07ae 34000000 		.4byte	.LFE41
 4709 07b2 0F00     		.2byte	0xf
 4710 07b4 F3       		.byte	0xf3
 4711 07b5 01       		.uleb128 0x1
 4712 07b6 50       		.byte	0x50
 4713 07b7 03       		.byte	0x3
 4714 07b8 00000000 		.4byte	.LANCHOR2
 4715 07bc 22       		.byte	0x22
 4716 07bd 94       		.byte	0x94
 4717 07be 01       		.byte	0x1
 4718 07bf 08       		.byte	0x8
 4719 07c0 FF       		.byte	0xff
 4720 07c1 1A       		.byte	0x1a
 4721 07c2 9F       		.byte	0x9f
 4722 07c3 00000000 		.4byte	0
 4723 07c7 00000000 		.4byte	0
 4724              	.LLST48:
 4725 07cb 0C000000 		.4byte	.LVL154
 4726 07cf 28000000 		.4byte	.LVL161
 4727 07d3 0100     		.2byte	0x1
 4728 07d5 55       		.byte	0x55
 4729 07d6 28000000 		.4byte	.LVL161
 4730 07da 34000000 		.4byte	.LFE41
 4731 07de 1E00     		.2byte	0x1e
 4732 07e0 F3       		.byte	0xf3
 4733 07e1 01       		.uleb128 0x1
 4734 07e2 50       		.byte	0x50
 4735 07e3 03       		.byte	0x3
 4736 07e4 0C000000 		.4byte	.LANCHOR2+12
 4737 07e8 22       		.byte	0x22
 4738 07e9 94       		.byte	0x94
 4739 07ea 01       		.byte	0x1
 4740 07eb 08       		.byte	0x8
 4741 07ec FF       		.byte	0xff
 4742 07ed 1A       		.byte	0x1a
 4743 07ee F3       		.byte	0xf3
 4744 07ef 01       		.uleb128 0x1
 4745 07f0 50       		.byte	0x50
 4746 07f1 03       		.byte	0x3
 4747 07f2 00000000 		.4byte	.LANCHOR2
 4748 07f6 22       		.byte	0x22
 4749 07f7 94       		.byte	0x94
 4750 07f8 01       		.byte	0x1
 4751 07f9 08       		.byte	0x8
 4752 07fa FF       		.byte	0xff
 4753 07fb 1A       		.byte	0x1a
 4754 07fc 22       		.byte	0x22
 4755 07fd 9F       		.byte	0x9f
 4756 07fe 00000000 		.4byte	0
 4757 0802 00000000 		.4byte	0
 4758              	.LLST49:
 4759 0806 0C000000 		.4byte	.LVL154
 4760 080a 28000000 		.4byte	.LVL160
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 136


 4761 080e 0100     		.2byte	0x1
 4762 0810 54       		.byte	0x54
 4763 0811 00000000 		.4byte	0
 4764 0815 00000000 		.4byte	0
 4765              	.LLST50:
 4766 0819 18000000 		.4byte	.LVL156
 4767 081d 1E000000 		.4byte	.LVL157
 4768 0821 0100     		.2byte	0x1
 4769 0823 50       		.byte	0x50
 4770 0824 00000000 		.4byte	0
 4771 0828 00000000 		.4byte	0
 4772              	.LLST51:
 4773 082c 00000000 		.4byte	.LVL162
 4774 0830 04000000 		.4byte	.LVL163
 4775 0834 0100     		.2byte	0x1
 4776 0836 50       		.byte	0x50
 4777 0837 04000000 		.4byte	.LVL163
 4778 083b 0C000000 		.4byte	.LFE63
 4779 083f 0400     		.2byte	0x4
 4780 0841 F3       		.byte	0xf3
 4781 0842 01       		.uleb128 0x1
 4782 0843 50       		.byte	0x50
 4783 0844 9F       		.byte	0x9f
 4784 0845 00000000 		.4byte	0
 4785 0849 00000000 		.4byte	0
 4786              	.LLST52:
 4787 084d 00000000 		.4byte	.LVL164
 4788 0851 04000000 		.4byte	.LVL165
 4789 0855 0100     		.2byte	0x1
 4790 0857 50       		.byte	0x50
 4791 0858 04000000 		.4byte	.LVL165
 4792 085c 0C000000 		.4byte	.LFE64
 4793 0860 0400     		.2byte	0x4
 4794 0862 F3       		.byte	0xf3
 4795 0863 01       		.uleb128 0x1
 4796 0864 50       		.byte	0x50
 4797 0865 9F       		.byte	0x9f
 4798 0866 00000000 		.4byte	0
 4799 086a 00000000 		.4byte	0
 4800              	.LLST53:
 4801 086e 00000000 		.4byte	.LVL166
 4802 0872 04000000 		.4byte	.LVL167
 4803 0876 0100     		.2byte	0x1
 4804 0878 50       		.byte	0x50
 4805 0879 04000000 		.4byte	.LVL167
 4806 087d 0C000000 		.4byte	.LFE65
 4807 0881 0400     		.2byte	0x4
 4808 0883 F3       		.byte	0xf3
 4809 0884 01       		.uleb128 0x1
 4810 0885 50       		.byte	0x50
 4811 0886 9F       		.byte	0x9f
 4812 0887 00000000 		.4byte	0
 4813 088b 00000000 		.4byte	0
 4814              		.section	.debug_aranges,"",%progbits
 4815 0000 24010000 		.4byte	0x124
 4816 0004 0200     		.2byte	0x2
 4817 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 137


 4818 000a 04       		.byte	0x4
 4819 000b 00       		.byte	0
 4820 000c 0000     		.2byte	0
 4821 000e 0000     		.2byte	0
 4822 0010 00000000 		.4byte	.LFB34
 4823 0014 40000000 		.4byte	.LFE34-.LFB34
 4824 0018 00000000 		.4byte	.LFB35
 4825 001c 18000000 		.4byte	.LFE35-.LFB35
 4826 0020 00000000 		.4byte	.LFB36
 4827 0024 14000000 		.4byte	.LFE36-.LFB36
 4828 0028 00000000 		.4byte	.LFB37
 4829 002c 34000000 		.4byte	.LFE37-.LFB37
 4830 0030 00000000 		.4byte	.LFB42
 4831 0034 0C000000 		.4byte	.LFE42-.LFB42
 4832 0038 00000000 		.4byte	.LFB43
 4833 003c 0C000000 		.4byte	.LFE43-.LFB43
 4834 0040 00000000 		.4byte	.LFB44
 4835 0044 0C000000 		.4byte	.LFE44-.LFB44
 4836 0048 00000000 		.4byte	.LFB45
 4837 004c 0C000000 		.4byte	.LFE45-.LFB45
 4838 0050 00000000 		.4byte	.LFB46
 4839 0054 0C000000 		.4byte	.LFE46-.LFB46
 4840 0058 00000000 		.4byte	.LFB47
 4841 005c 0C000000 		.4byte	.LFE47-.LFB47
 4842 0060 00000000 		.4byte	.LFB48
 4843 0064 0C000000 		.4byte	.LFE48-.LFB48
 4844 0068 00000000 		.4byte	.LFB49
 4845 006c 0C000000 		.4byte	.LFE49-.LFB49
 4846 0070 00000000 		.4byte	.LFB50
 4847 0074 0C000000 		.4byte	.LFE50-.LFB50
 4848 0078 00000000 		.4byte	.LFB51
 4849 007c 0C000000 		.4byte	.LFE51-.LFB51
 4850 0080 00000000 		.4byte	.LFB52
 4851 0084 0C000000 		.4byte	.LFE52-.LFB52
 4852 0088 00000000 		.4byte	.LFB53
 4853 008c 0C000000 		.4byte	.LFE53-.LFB53
 4854 0090 00000000 		.4byte	.LFB54
 4855 0094 0C000000 		.4byte	.LFE54-.LFB54
 4856 0098 00000000 		.4byte	.LFB55
 4857 009c 0C000000 		.4byte	.LFE55-.LFB55
 4858 00a0 00000000 		.4byte	.LFB56
 4859 00a4 A8000000 		.4byte	.LFE56-.LFB56
 4860 00a8 00000000 		.4byte	.LFB57
 4861 00ac 2C000000 		.4byte	.LFE57-.LFB57
 4862 00b0 00000000 		.4byte	.LFB58
 4863 00b4 20000000 		.4byte	.LFE58-.LFB58
 4864 00b8 00000000 		.4byte	.LFB59
 4865 00bc 2C000000 		.4byte	.LFE59-.LFB59
 4866 00c0 00000000 		.4byte	.LFB60
 4867 00c4 2C000000 		.4byte	.LFE60-.LFB60
 4868 00c8 00000000 		.4byte	.LFB61
 4869 00cc 1C000000 		.4byte	.LFE61-.LFB61
 4870 00d0 00000000 		.4byte	.LFB62
 4871 00d4 0A000000 		.4byte	.LFE62-.LFB62
 4872 00d8 00000000 		.4byte	.LFB38
 4873 00dc 18010000 		.4byte	.LFE38-.LFB38
 4874 00e0 00000000 		.4byte	.LFB39
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 138


 4875 00e4 10000000 		.4byte	.LFE39-.LFB39
 4876 00e8 00000000 		.4byte	.LFB40
 4877 00ec 28000000 		.4byte	.LFE40-.LFB40
 4878 00f0 00000000 		.4byte	.LFB41
 4879 00f4 34000000 		.4byte	.LFE41-.LFB41
 4880 00f8 00000000 		.4byte	.LFB63
 4881 00fc 0C000000 		.4byte	.LFE63-.LFB63
 4882 0100 00000000 		.4byte	.LFB64
 4883 0104 0C000000 		.4byte	.LFE64-.LFB64
 4884 0108 00000000 		.4byte	.LFB65
 4885 010c 0C000000 		.4byte	.LFE65-.LFB65
 4886 0110 00000000 		.4byte	.LFB66
 4887 0114 10000000 		.4byte	.LFE66-.LFB66
 4888 0118 00000000 		.4byte	.LFB67
 4889 011c 10000000 		.4byte	.LFE67-.LFB67
 4890 0120 00000000 		.4byte	0
 4891 0124 00000000 		.4byte	0
 4892              		.section	.debug_ranges,"",%progbits
 4893              	.Ldebug_ranges0:
 4894 0000 00000000 		.4byte	.LFB34
 4895 0004 40000000 		.4byte	.LFE34
 4896 0008 00000000 		.4byte	.LFB35
 4897 000c 18000000 		.4byte	.LFE35
 4898 0010 00000000 		.4byte	.LFB36
 4899 0014 14000000 		.4byte	.LFE36
 4900 0018 00000000 		.4byte	.LFB37
 4901 001c 34000000 		.4byte	.LFE37
 4902 0020 00000000 		.4byte	.LFB42
 4903 0024 0C000000 		.4byte	.LFE42
 4904 0028 00000000 		.4byte	.LFB43
 4905 002c 0C000000 		.4byte	.LFE43
 4906 0030 00000000 		.4byte	.LFB44
 4907 0034 0C000000 		.4byte	.LFE44
 4908 0038 00000000 		.4byte	.LFB45
 4909 003c 0C000000 		.4byte	.LFE45
 4910 0040 00000000 		.4byte	.LFB46
 4911 0044 0C000000 		.4byte	.LFE46
 4912 0048 00000000 		.4byte	.LFB47
 4913 004c 0C000000 		.4byte	.LFE47
 4914 0050 00000000 		.4byte	.LFB48
 4915 0054 0C000000 		.4byte	.LFE48
 4916 0058 00000000 		.4byte	.LFB49
 4917 005c 0C000000 		.4byte	.LFE49
 4918 0060 00000000 		.4byte	.LFB50
 4919 0064 0C000000 		.4byte	.LFE50
 4920 0068 00000000 		.4byte	.LFB51
 4921 006c 0C000000 		.4byte	.LFE51
 4922 0070 00000000 		.4byte	.LFB52
 4923 0074 0C000000 		.4byte	.LFE52
 4924 0078 00000000 		.4byte	.LFB53
 4925 007c 0C000000 		.4byte	.LFE53
 4926 0080 00000000 		.4byte	.LFB54
 4927 0084 0C000000 		.4byte	.LFE54
 4928 0088 00000000 		.4byte	.LFB55
 4929 008c 0C000000 		.4byte	.LFE55
 4930 0090 00000000 		.4byte	.LFB56
 4931 0094 A8000000 		.4byte	.LFE56
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 139


 4932 0098 00000000 		.4byte	.LFB57
 4933 009c 2C000000 		.4byte	.LFE57
 4934 00a0 00000000 		.4byte	.LFB58
 4935 00a4 20000000 		.4byte	.LFE58
 4936 00a8 00000000 		.4byte	.LFB59
 4937 00ac 2C000000 		.4byte	.LFE59
 4938 00b0 00000000 		.4byte	.LFB60
 4939 00b4 2C000000 		.4byte	.LFE60
 4940 00b8 00000000 		.4byte	.LFB61
 4941 00bc 1C000000 		.4byte	.LFE61
 4942 00c0 00000000 		.4byte	.LFB62
 4943 00c4 0A000000 		.4byte	.LFE62
 4944 00c8 00000000 		.4byte	.LFB38
 4945 00cc 18010000 		.4byte	.LFE38
 4946 00d0 00000000 		.4byte	.LFB39
 4947 00d4 10000000 		.4byte	.LFE39
 4948 00d8 00000000 		.4byte	.LFB40
 4949 00dc 28000000 		.4byte	.LFE40
 4950 00e0 00000000 		.4byte	.LFB41
 4951 00e4 34000000 		.4byte	.LFE41
 4952 00e8 00000000 		.4byte	.LFB63
 4953 00ec 0C000000 		.4byte	.LFE63
 4954 00f0 00000000 		.4byte	.LFB64
 4955 00f4 0C000000 		.4byte	.LFE64
 4956 00f8 00000000 		.4byte	.LFB65
 4957 00fc 0C000000 		.4byte	.LFE65
 4958 0100 00000000 		.4byte	.LFB66
 4959 0104 10000000 		.4byte	.LFE66
 4960 0108 00000000 		.4byte	.LFB67
 4961 010c 10000000 		.4byte	.LFE67
 4962 0110 00000000 		.4byte	0
 4963 0114 00000000 		.4byte	0
 4964              		.section	.debug_line,"",%progbits
 4965              	.Ldebug_line0:
 4966 0000 C8030000 		.section	.debug_str,"MS",%progbits,1
 4966      02006C00 
 4966      00000201 
 4966      FB0E0D00 
 4966      01010101 
 4967              	.LASF10:
 4968 0000 75696E74 		.ascii	"uint16\000"
 4968      313600
 4969              	.LASF79:
 4970 0007 66696C74 		.ascii	"filteredRawData\000"
 4970      65726564 
 4970      52617744 
 4970      61746100 
 4971              	.LASF86:
 4972 0017 6C617374 		.ascii	"lastSensor\000"
 4972      53656E73 
 4972      6F7200
 4973              	.LASF107:
 4974 0022 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4974      656E7365 
 4974      5F726177 
 4974      44617461 
 4974      496E6465 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 140


 4975              	.LASF99:
 4976 0038 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4976      656E7365 
 4976      5F73656E 
 4976      736F724F 
 4976      6E4D6173 
 4977              	.LASF54:
 4978 004e 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4978      656E7365 
 4978      5F476574 
 4978      4E656761 
 4978      74697665 
 4979              	.LASF64:
 4980 0071 66696E67 		.ascii	"fingerThreshold\000"
 4980      65725468 
 4980      72657368 
 4980      6F6C6400 
 4981              	.LASF58:
 4982 0081 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4982      656E7365 
 4982      5F536574 
 4982      4E656761 
 4982      74697665 
 4983              	.LASF83:
 4984 00a4 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4984      656E7365 
 4984      5F557064 
 4984      61746557 
 4984      69646765 
 4985              	.LASF25:
 4986 00c2 70747247 		.ascii	"ptrGetRaw\000"
 4986      65745261 
 4986      7700
 4987              	.LASF89:
 4988 00cc 43617053 		.ascii	"CapSense_GetDebounce\000"
 4988      656E7365 
 4988      5F476574 
 4988      4465626F 
 4988      756E6365 
 4989              	.LASF73:
 4990 00e1 43617053 		.ascii	"CapSense_MedianFilter\000"
 4990      656E7365 
 4990      5F4D6564 
 4990      69616E46 
 4990      696C7465 
 4991              	.LASF115:
 4992 00f7 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4992      4320342E 
 4992      382E3420 
 4992      32303134 
 4992      30353236 
 4993 012a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4993      20726576 
 4993      6973696F 
 4993      6E203231 
 4993      31333538 
 4994 015d 67202D66 		.ascii	"g -ffunction-sections\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 141


 4994      66756E63 
 4994      74696F6E 
 4994      2D736563 
 4994      74696F6E 
 4995              	.LASF7:
 4996 0173 6C6F6E67 		.ascii	"long long unsigned int\000"
 4996      206C6F6E 
 4996      6720756E 
 4996      7369676E 
 4996      65642069 
 4997              	.LASF98:
 4998 018a 43617053 		.ascii	"CapSense_sensorSignal\000"
 4998      656E7365 
 4998      5F73656E 
 4998      736F7253 
 4998      69676E61 
 4999              	.LASF52:
 5000 01a0 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5000      656E7365 
 5000      5F476574 
 5000      4E6F6973 
 5000      65546872 
 5001              	.LASF43:
 5002 01bb 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5002      656E7365 
 5002      5F496E69 
 5002      7469616C 
 5002      697A6545 
 5003              	.LASF82:
 5004 01df 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5004      656E7365 
 5004      5F557064 
 5004      61746545 
 5004      6E61626C 
 5005              	.LASF6:
 5006 01ff 6C6F6E67 		.ascii	"long long int\000"
 5006      206C6F6E 
 5006      6720696E 
 5006      7400
 5007              	.LASF0:
 5008 020d 7369676E 		.ascii	"signed char\000"
 5008      65642063 
 5008      68617200 
 5009              	.LASF72:
 5010 0219 43617053 		.ascii	"CapSense_DisableWidget\000"
 5010      656E7365 
 5010      5F446973 
 5010      61626C65 
 5010      57696467 
 5011              	.LASF67:
 5012 0230 72617749 		.ascii	"rawIndex\000"
 5012      6E646578 
 5012      00
 5013              	.LASF24:
 5014 0239 6E756D62 		.ascii	"numberOfSensors\000"
 5014      65724F66 
 5014      53656E73 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 142


 5014      6F727300 
 5015              	.LASF21:
 5016 0249 77696467 		.ascii	"widgetNubmersTbl\000"
 5016      65744E75 
 5016      626D6572 
 5016      7354626C 
 5016      00
 5017              	.LASF47:
 5018 025a 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5018      656E7365 
 5018      5F476574 
 5018      42617365 
 5018      6C696E65 
 5019              	.LASF69:
 5020 0273 73746174 		.ascii	"state\000"
 5020      6500
 5021              	.LASF4:
 5022 0279 6C6F6E67 		.ascii	"long int\000"
 5022      20696E74 
 5022      00
 5023              	.LASF70:
 5024 0282 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5024      656E7365 
 5024      5F436865 
 5024      636B4973 
 5024      416E7957 
 5025              	.LASF9:
 5026 02a2 75696E74 		.ascii	"uint8\000"
 5026      3800
 5027              	.LASF101:
 5028 02a8 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5028      656E7365 
 5028      5F6C6F77 
 5028      42617365 
 5028      6C696E65 
 5029              	.LASF91:
 5030 02c2 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5030      656E7365 
 5030      5F446973 
 5030      61626C65 
 5030      52617744 
 5031              	.LASF13:
 5032 02e1 646F7562 		.ascii	"double\000"
 5032      6C6500
 5033              	.LASF95:
 5034 02e8 43617053 		.ascii	"CapSense_widgetNumber\000"
 5034      656E7365 
 5034      5F776964 
 5034      6765744E 
 5034      756D6265 
 5035              	.LASF11:
 5036 02fe 75696E74 		.ascii	"uint32\000"
 5036      333200
 5037              	.LASF65:
 5038 0305 68797374 		.ascii	"hysteresis\000"
 5038      65726573 
 5038      697300
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 143


 5039              	.LASF55:
 5040 0310 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5040      656E7365 
 5040      5F536574 
 5040      46696E67 
 5040      65725468 
 5041              	.LASF59:
 5042 032c 43617053 		.ascii	"CapSense_SetDebounce\000"
 5042      656E7365 
 5042      5F536574 
 5042      4465626F 
 5042      756E6365 
 5043              	.LASF34:
 5044 0341 73656E73 		.ascii	"sensetivitySeed\000"
 5044      65746976 
 5044      69747953 
 5044      65656400 
 5045              	.LASF33:
 5046 0351 746F7461 		.ascii	"totalSensorsNum\000"
 5046      6C53656E 
 5046      736F7273 
 5046      4E756D00 
 5047              	.LASF50:
 5048 0361 76616C75 		.ascii	"value\000"
 5048      6500
 5049              	.LASF60:
 5050 0367 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5050      656E7365 
 5050      5F536574 
 5050      4C6F7742 
 5050      6173656C 
 5051              	.LASF74:
 5052 0384 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5052      656E7365 
 5052      5F494952 
 5052      3446696C 
 5052      74657200 
 5053              	.LASF112:
 5054 0398 43617053 		.ascii	"CapSense_ScanSensor\000"
 5054      656E7365 
 5054      5F536361 
 5054      6E53656E 
 5054      736F7200 
 5055              	.LASF8:
 5056 03ac 756E7369 		.ascii	"unsigned int\000"
 5056      676E6564 
 5056      20696E74 
 5056      00
 5057              	.LASF5:
 5058 03b9 6C6F6E67 		.ascii	"long unsigned int\000"
 5058      20756E73 
 5058      69676E65 
 5058      6420696E 
 5058      7400
 5059              	.LASF97:
 5060 03cb 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5060      656E7365 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 144


 5060      5F73656E 
 5060      736F7242 
 5060      6173656C 
 5061              	.LASF22:
 5062 03e6 7265736F 		.ascii	"resolutionsTbl\000"
 5062      6C757469 
 5062      6F6E7354 
 5062      626C00
 5063              	.LASF28:
 5064 03f5 70747247 		.ascii	"ptrGetBitValue\000"
 5064      65744269 
 5064      7456616C 
 5064      756500
 5065              	.LASF106:
 5066 0404 43617053 		.ascii	"CapSense_debounce\000"
 5066      656E7365 
 5066      5F646562 
 5066      6F756E63 
 5066      6500
 5067              	.LASF46:
 5068 0416 64617461 		.ascii	"data\000"
 5068      00
 5069              	.LASF3:
 5070 041b 73686F72 		.ascii	"short unsigned int\000"
 5070      7420756E 
 5070      7369676E 
 5070      65642069 
 5070      6E7400
 5071              	.LASF18:
 5072 042e 73656E73 		.ascii	"sensetivityTbl\000"
 5072      65746976 
 5072      69747954 
 5072      626C00
 5073              	.LASF40:
 5074 043d 73656E73 		.ascii	"sensor\000"
 5074      6F7200
 5075              	.LASF94:
 5076 0444 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5076      656E7365 
 5076      5F73656E 
 5076      736F7245 
 5076      6E61626C 
 5077              	.LASF108:
 5078 045e 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5078      656E7365 
 5078      5F6E756D 
 5078      6265724F 
 5078      6653656E 
 5079              	.LASF81:
 5080 0477 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5080      656E7365 
 5080      5F557064 
 5080      61746553 
 5080      656E736F 
 5081              	.LASF76:
 5082 0495 63616C63 		.ascii	"calc\000"
 5082      00
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 145


 5083              	.LASF19:
 5084 049a 63686172 		.ascii	"chargeDivTbl\000"
 5084      67654469 
 5084      7654626C 
 5084      00
 5085              	.LASF118:
 5086 04a7 43617053 		.ascii	"CapSense_IsBusy\000"
 5086      656E7365 
 5086      5F497342 
 5086      75737900 
 5087              	.LASF116:
 5088 04b7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5088      6E657261 
 5088      7465645F 
 5088      536F7572 
 5088      63655C50 
 5089              	.LASF48:
 5090 04e0 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5090      656E7365 
 5090      5F476574 
 5090      44696666 
 5090      436F756E 
 5091              	.LASF36:
 5092 04fa 706F696E 		.ascii	"pointers\000"
 5092      74657273 
 5092      00
 5093              	.LASF62:
 5094 0503 6465626F 		.ascii	"debounce\000"
 5094      756E6365 
 5094      00
 5095              	.LASF35:
 5096 050c 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5096      6B467265 
 5096      715F4D48 
 5096      7A00
 5097              	.LASF15:
 5098 051a 73697A65 		.ascii	"sizetype\000"
 5098      74797065 
 5098      00
 5099              	.LASF71:
 5100 0523 43617053 		.ascii	"CapSense_EnableWidget\000"
 5100      656E7365 
 5100      5F456E61 
 5100      626C6557 
 5100      69646765 
 5101              	.LASF75:
 5102 0539 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5102      656E7365 
 5102      5F557064 
 5102      61746542 
 5102      6173656C 
 5103              	.LASF39:
 5104 055c 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5104      656E7365 
 5104      5F496E69 
 5104      7469616C 
 5104      697A6553 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 146


 5105              	.LASF57:
 5106 057e 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5106      656E7365 
 5106      5F536574 
 5106      46696E67 
 5106      65724879 
 5107              	.LASF61:
 5108 059b 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5108      656E7365 
 5108      5F436865 
 5108      636B4973 
 5108      53656E73 
 5109              	.LASF16:
 5110 05b8 69646163 		.ascii	"idac1LevelsTbl\000"
 5110      314C6576 
 5110      656C7354 
 5110      626C00
 5111              	.LASF17:
 5112 05c7 69646163 		.ascii	"idac2LevelsTbl\000"
 5112      324C6576 
 5112      656C7354 
 5112      626C00
 5113              	.LASF103:
 5114 05d6 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5114      656E7365 
 5114      5F6E6F69 
 5114      73655468 
 5114      72657368 
 5115              	.LASF102:
 5116 05ee 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5116      656E7365 
 5116      5F66696E 
 5116      67657254 
 5116      68726573 
 5117              	.LASF113:
 5118 0607 43617053 		.ascii	"CapSense_SetBitValue\000"
 5118      656E7365 
 5118      5F536574 
 5118      42697456 
 5118      616C7565 
 5119              	.LASF109:
 5120 061c 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5120      656E7365 
 5120      5F726177 
 5120      46696C74 
 5120      65724461 
 5121              	.LASF110:
 5122 0634 43617053 		.ascii	"CapSense_config\000"
 5122      656E7365 
 5122      5F636F6E 
 5122      66696700 
 5123              	.LASF12:
 5124 0644 666C6F61 		.ascii	"float\000"
 5124      7400
 5125              	.LASF88:
 5126 064a 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5126      656E7365 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 147


 5126      5F476574 
 5126      4C6F7742 
 5126      6173656C 
 5127              	.LASF66:
 5128 0667 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5128      656E7365 
 5128      5F436865 
 5128      636B4973 
 5128      57696467 
 5129              	.LASF1:
 5130 0684 756E7369 		.ascii	"unsigned char\000"
 5130      676E6564 
 5130      20636861 
 5130      7200
 5131              	.LASF41:
 5132 0692 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5132      656E7365 
 5132      5F496E69 
 5132      7469616C 
 5132      697A6541 
 5133              	.LASF27:
 5134 06b2 70747252 		.ascii	"ptrReadSensorRaw\000"
 5134      65616453 
 5134      656E736F 
 5134      72526177 
 5134      00
 5135              	.LASF45:
 5136 06c3 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5136      656E7365 
 5136      5F536574 
 5136      42617365 
 5136      6C696E65 
 5137              	.LASF80:
 5138 06dc 6E6F6973 		.ascii	"noiseThreshold\000"
 5138      65546872 
 5138      6573686F 
 5138      6C6400
 5139              	.LASF2:
 5140 06eb 73686F72 		.ascii	"short int\000"
 5140      7420696E 
 5140      7400
 5141              	.LASF42:
 5142 06f5 77696467 		.ascii	"widget\000"
 5142      657400
 5143              	.LASF20:
 5144 06fc 6D6F6444 		.ascii	"modDivTbl\000"
 5144      69765462 
 5144      6C00
 5145              	.LASF44:
 5146 0706 69735365 		.ascii	"isSensorEnabled\000"
 5146      6E736F72 
 5146      456E6162 
 5146      6C656400 
 5147              	.LASF38:
 5148 0716 43617053 		.ascii	"CapSense_BaseInit\000"
 5148      656E7365 
 5148      5F426173 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 148


 5148      65496E69 
 5148      7400
 5149              	.LASF37:
 5150 0728 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_20\000"
 5150      656E7365 
 5150      5F434F4E 
 5150      4649475F 
 5150      54595045 
 5151              	.LASF84:
 5152 0746 73656E73 		.ascii	"sensorsPerWidget\000"
 5152      6F727350 
 5152      65725769 
 5152      64676574 
 5152      00
 5153              	.LASF100:
 5154 0757 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5154      656E7365 
 5154      5F6C6F77 
 5154      42617365 
 5154      6C696E65 
 5155              	.LASF56:
 5156 0774 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5156      656E7365 
 5156      5F536574 
 5156      4E6F6973 
 5156      65546872 
 5157              	.LASF96:
 5158 078f 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5158      656E7365 
 5158      5F73656E 
 5158      736F7242 
 5158      6173656C 
 5159              	.LASF105:
 5160 07a7 43617053 		.ascii	"CapSense_hysteresis\000"
 5160      656E7365 
 5160      5F687973 
 5160      74657265 
 5160      73697300 
 5161              	.LASF14:
 5162 07bb 63686172 		.ascii	"char\000"
 5162      00
 5163              	.LASF117:
 5164 07c0 433A5C55 		.ascii	"C:\\Users\\11401393\\Desktop\\bachelorproef\\Softwa"
 5164      73657273 
 5164      5C313134 
 5164      30313339 
 5164      335C4465 
 5165 07ee 72655073 		.ascii	"rePsocPiano\\SoftwarePianoPsoc.cydsn\000"
 5165      6F635069 
 5165      616E6F5C 
 5165      536F6674 
 5165      77617265 
 5166              	.LASF111:
 5167 0812 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5167      656E7365 
 5167      5F656E61 
 5167      626C6552 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 149


 5167      61774669 
 5168              	.LASF53:
 5169 082c 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5169      656E7365 
 5169      5F476574 
 5169      46696E67 
 5169      65724879 
 5170              	.LASF85:
 5171 0849 66697273 		.ascii	"firstSensor\000"
 5171      7453656E 
 5171      736F7200 
 5172              	.LASF63:
 5173 0855 6465626F 		.ascii	"debounceIndex\000"
 5173      756E6365 
 5173      496E6465 
 5173      7800
 5174              	.LASF51:
 5175 0863 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5175      656E7365 
 5175      5F476574 
 5175      46696E67 
 5175      65725468 
 5176              	.LASF26:
 5177 087f 70747250 		.ascii	"ptrPreScan\000"
 5177      72655363 
 5177      616E00
 5178              	.LASF30:
 5179 088a 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_20\000"
 5179      656E7365 
 5179      5F434F4E 
 5179      4649475F 
 5179      54595045 
 5180              	.LASF121:
 5181 08b1 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 5181      656E7365 
 5181      5F557064 
 5181      61746554 
 5181      68726573 
 5182              	.LASF77:
 5183 08cb 7369676E 		.ascii	"sign\000"
 5183      00
 5184              	.LASF68:
 5185 08d0 6E756D4F 		.ascii	"numOfSensors\000"
 5185      6653656E 
 5185      736F7273 
 5185      00
 5186              	.LASF31:
 5187 08dd 746F7461 		.ascii	"totalScanslotsNum\000"
 5187      6C536361 
 5187      6E736C6F 
 5187      74734E75 
 5187      6D00
 5188              	.LASF93:
 5189 08ef 43617053 		.ascii	"CapSense_sensorRaw\000"
 5189      656E7365 
 5189      5F73656E 
 5189      736F7252 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 150


 5189      617700
 5190              	.LASF49:
 5191 0902 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5191      656E7365 
 5191      5F536574 
 5191      44696666 
 5191      436F756E 
 5192              	.LASF29:
 5193 091c 70747253 		.ascii	"ptrSetBitValue\000"
 5193      65744269 
 5193      7456616C 
 5193      756500
 5194              	.LASF120:
 5195 092b 43617053 		.ascii	"CapSense_GetBitValue\000"
 5195      656E7365 
 5195      5F476574 
 5195      42697456 
 5195      616C7565 
 5196              	.LASF87:
 5197 0940 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5197      656E7365 
 5197      5F476574 
 5197      57696467 
 5197      65744E75 
 5198              	.LASF119:
 5199 0959 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 5199      656E7365 
 5199      5F536361 
 5199      6E456E61 
 5199      626C6564 
 5200              	.LASF90:
 5201 0975 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5201      656E7365 
 5201      5F456E61 
 5201      626C6552 
 5201      61774461 
 5202              	.LASF92:
 5203 0993 43617053 		.ascii	"CapSense_debounceCounter\000"
 5203      656E7365 
 5203      5F646562 
 5203      6F756E63 
 5203      65436F75 
 5204              	.LASF23:
 5205 09ac 72617744 		.ascii	"rawDataIndex\000"
 5205      61746149 
 5205      6E646578 
 5205      00
 5206              	.LASF78:
 5207 09b9 74656D70 		.ascii	"tempRaw\000"
 5207      52617700 
 5208              	.LASF114:
 5209 09c1 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_20\000"
 5209      7572654E 
 5209      6F697365 
 5209      456E7665 
 5209      6C6F7065 
 5210              	.LASF32:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccf9nNdM.s 			page 151


 5211 09df 746F7461 		.ascii	"totalWidgetsNum\000"
 5211      6C576964 
 5211      67657473 
 5211      4E756D00 
 5212              	.LASF104:
 5213 09ef 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5213      656E7365 
 5213      5F6E6567 
 5213      61746976 
 5213      654E6F69 
 5214              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

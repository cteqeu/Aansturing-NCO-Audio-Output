ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB34:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_20 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 220u, 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button1__BTN */
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Button3__BTN */
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Button4__BTN */
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     4u, /* Button5__BTN */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* Button6__BTN */
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6u, /* Button7__BTN */
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     7u, /* Button8__BTN */
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     8u, /* Button9__BTN */
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     9u, /* Button10__BTN */
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     10u, /* Button11__BTN */
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     11u, /* Button12__BTN */
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button3__BTN */
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button4__BTN */
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button5__BTN */
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button6__BTN */
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button7__BTN */
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button8__BTN */
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button9__BTN */
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button10__BTN */
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button11__BTN */
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button12__BTN */
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 4


 147:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 159 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 70B5     		push	{r4, r5, r6, lr}
  30              		.cfi_def_cfa_offset 16
  31              		.cfi_offset 4, -16
  32              		.cfi_offset 5, -12
  33              		.cfi_offset 6, -8
  34              		.cfi_offset 14, -4
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  35              		.loc 1 162 0
  36 0002 0A4B     		ldr	r3, .L2
  37 0004 1C5C     		ldrb	r4, [r3, r0]
  38              	.LVL1:
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  39              		.loc 1 176 0
  40 0006 4200     		lsl	r2, r0, #1
  41 0008 094B     		ldr	r3, .L2+4
  42              	.LVL2:
  43 000a D15A     		ldrh	r1, [r2, r3]
  44 000c 094B     		ldr	r3, .L2+8
  45 000e D152     		strh	r1, [r2, r3]
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  46              		.loc 1 177 0
  47 0010 1E18     		add	r6, r3, r0
  48 0012 0025     		mov	r5, #0
  49 0014 3576     		strb	r5, [r6, #24]
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  50              		.loc 1 178 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 5


  51 0016 1E1C     		mov	r6, r3
  52 0018 2436     		add	r6, r6, #36
  53 001a 3554     		strb	r5, [r6, r0]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  54              		.loc 1 180 0
  55 001c 0648     		ldr	r0, .L2+12
  56              	.LVL3:
  57 001e 005D     		ldrb	r0, [r0, r4]
  58 0020 3033     		add	r3, r3, #48
  59 0022 1855     		strb	r0, [r3, r4]
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  60              		.loc 1 195 0
  61 0024 054B     		ldr	r3, .L2+16
  62 0026 D152     		strh	r1, [r2, r3]
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  63              		.loc 1 207 0
  64              		@ sp needed
  65              	.LVL4:
  66 0028 70BD     		pop	{r4, r5, r6, pc}
  67              	.L3:
  68 002a C046     		.align	2
  69              	.L2:
  70 002c 00000000 		.word	CapSense_widgetNumber
  71 0030 00000000 		.word	CapSense_sensorRaw
  72 0034 00000000 		.word	.LANCHOR0
  73 0038 00000000 		.word	.LANCHOR1
  74 003c 00000000 		.word	CapSense_rawFilterData1
  75              		.cfi_endproc
  76              	.LFE34:
  77              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  78              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 6


  79              		.align	2
  80              		.global	CapSense_InitializeSensorBaseline
  81              		.code	16
  82              		.thumb_func
  83              		.type	CapSense_InitializeSensorBaseline, %function
  84              	CapSense_InitializeSensorBaseline:
  85              	.LFB35:
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  86              		.loc 1 235 0
  87              		.cfi_startproc
  88              	.LVL5:
  89 0000 10B5     		push	{r4, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
  93 0002 041C     		mov	r4, r0
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  94              		.loc 1 237 0
  95 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  96              	.LVL6:
  97              	.L5:
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  98              		.loc 1 238 0 discriminator 1
  99 0008 FFF7FEFF 		bl	CapSense_IsBusy
 100              	.LVL7:
 101 000c 0028     		cmp	r0, #0
 102 000e FBD1     		bne	.L5
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 7


 241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 103              		.loc 1 244 0
 104 0010 201C     		mov	r0, r4
 105 0012 FFF7FEFF 		bl	CapSense_BaseInit
 106              	.LVL8:
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 107              		.loc 1 245 0
 108              		@ sp needed
 109              	.LVL9:
 110 0016 10BD     		pop	{r4, pc}
 111              		.cfi_endproc
 112              	.LFE35:
 113              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 114              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 115              		.align	2
 116              		.global	CapSense_InitializeAllBaselines
 117              		.code	16
 118              		.thumb_func
 119              		.type	CapSense_InitializeAllBaselines, %function
 120              	CapSense_InitializeAllBaselines:
 121              	.LFB36:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 122              		.loc 1 272 0
 123              		.cfi_startproc
 124 0000 10B5     		push	{r4, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 8


 128              	.LVL10:
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 129              		.loc 1 275 0
 130 0002 0024     		mov	r4, #0
 131 0004 03E0     		b	.L8
 132              	.LVL11:
 133              	.L9:
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 134              		.loc 1 277 0 discriminator 2
 135 0006 201C     		mov	r0, r4
 136 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 137              	.LVL12:
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 138              		.loc 1 275 0 discriminator 2
 139 000c 0134     		add	r4, r4, #1
 140              	.LVL13:
 141              	.L8:
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 142              		.loc 1 275 0 is_stmt 0 discriminator 1
 143 000e 0B2C     		cmp	r4, #11
 144 0010 F9D9     		bls	.L9
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 145              		.loc 1 279 0 is_stmt 1
 146              		@ sp needed
 147              	.LVL14:
 148 0012 10BD     		pop	{r4, pc}
 149              		.cfi_endproc
 150              	.LFE36:
 151              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 152              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 153              		.align	2
 154              		.global	CapSense_InitializeEnabledBaselines
 155              		.code	16
 156              		.thumb_func
 157              		.type	CapSense_InitializeEnabledBaselines, %function
 158              	CapSense_InitializeEnabledBaselines:
 159              	.LFB37:
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 9


 296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 160              		.loc 1 307 0
 161              		.cfi_startproc
 162 0000 38B5     		push	{r3, r4, r5, lr}
 163              		.cfi_def_cfa_offset 16
 164              		.cfi_offset 3, -16
 165              		.cfi_offset 4, -12
 166              		.cfi_offset 5, -8
 167              		.cfi_offset 14, -4
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 168              		.loc 1 311 0
 169 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 170              	.LVL15:
 171              	.L11:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 172              		.loc 1 312 0 discriminator 1
 173 0006 FFF7FEFF 		bl	CapSense_IsBusy
 174              	.LVL16:
 175 000a 0028     		cmp	r0, #0
 176 000c FBD1     		bne	.L11
 177 000e 0024     		mov	r4, #0
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 178              		.loc 1 319 0
 179 0010 074D     		ldr	r5, .L16
 180 0012 09E0     		b	.L12
 181              	.LVL17:
 182              	.L14:
 183 0014 281C     		mov	r0, r5
 184 0016 211C     		mov	r1, r4
 185 0018 FFF7FEFF 		bl	CapSense_GetBitValue
 186              	.LVL18:
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 187              		.loc 1 322 0
 188 001c 0028     		cmp	r0, #0
 189 001e 02D0     		beq	.L13
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 10


 323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 190              		.loc 1 325 0
 191 0020 201C     		mov	r0, r4
 192              	.LVL19:
 193 0022 FFF7FEFF 		bl	CapSense_BaseInit
 194              	.LVL20:
 195              	.L13:
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 196              		.loc 1 317 0
 197 0026 0134     		add	r4, r4, #1
 198              	.LVL21:
 199              	.L12:
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 200              		.loc 1 317 0 is_stmt 0 discriminator 1
 201 0028 0B2C     		cmp	r4, #11
 202 002a F3D9     		bls	.L14
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 203              		.loc 1 328 0 is_stmt 1
 204              		@ sp needed
 205              	.LVL22:
 206 002c 38BD     		pop	{r3, r4, r5, pc}
 207              	.L17:
 208 002e C046     		.align	2
 209              	.L16:
 210 0030 00000000 		.word	CapSense_sensorEnableMask
 211              		.cfi_endproc
 212              	.LFE37:
 213              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 214              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 215              		.align	2
 216              		.global	CapSense_GetBaselineData
 217              		.code	16
 218              		.thumb_func
 219              		.type	CapSense_GetBaselineData, %function
 220              	CapSense_GetBaselineData:
 221              	.LFB42:
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 11


 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 12


 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 13


 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 14


 517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 15


 574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 16


 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 17


 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 222              		.loc 1 711 0
 223              		.cfi_startproc
 224              	.LVL23:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 225              		.loc 1 712 0
 226 0000 4000     		lsl	r0, r0, #1
 227              	.LVL24:
 228 0002 014B     		ldr	r3, .L19
 229 0004 185A     		ldrh	r0, [r3, r0]
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 230              		.loc 1 713 0
 231              		@ sp needed
 232 0006 7047     		bx	lr
 233              	.L20:
 234              		.align	2
 235              	.L19:
 236 0008 00000000 		.word	.LANCHOR0
 237              		.cfi_endproc
 238              	.LFE42:
 239              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 240              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 241              		.align	2
 242              		.global	CapSense_SetBaselineData
 243              		.code	16
 244              		.thumb_func
 245              		.type	CapSense_SetBaselineData, %function
 246              	CapSense_SetBaselineData:
 247              	.LFB43:
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 18


 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 248              		.loc 1 738 0
 249              		.cfi_startproc
 250              	.LVL25:
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 251              		.loc 1 739 0
 252 0000 4000     		lsl	r0, r0, #1
 253              	.LVL26:
 254 0002 014B     		ldr	r3, .L22
 255 0004 C152     		strh	r1, [r0, r3]
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 256              		.loc 1 740 0
 257              		@ sp needed
 258 0006 7047     		bx	lr
 259              	.L23:
 260              		.align	2
 261              	.L22:
 262 0008 00000000 		.word	.LANCHOR0
 263              		.cfi_endproc
 264              	.LFE43:
 265              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 266              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 267              		.align	2
 268              		.global	CapSense_GetDiffCountData
 269              		.code	16
 270              		.thumb_func
 271              		.type	CapSense_GetDiffCountData, %function
 272              	CapSense_GetDiffCountData:
 273              	.LFB44:
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 19


 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 274              		.loc 1 765 0
 275              		.cfi_startproc
 276              	.LVL27:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 277              		.loc 1 766 0
 278 0000 014B     		ldr	r3, .L25
 279 0002 2433     		add	r3, r3, #36
 280 0004 185C     		ldrb	r0, [r3, r0]
 281              	.LVL28:
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 282              		.loc 1 767 0
 283              		@ sp needed
 284 0006 7047     		bx	lr
 285              	.L26:
 286              		.align	2
 287              	.L25:
 288 0008 00000000 		.word	.LANCHOR0
 289              		.cfi_endproc
 290              	.LFE44:
 291              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 292              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 293              		.align	2
 294              		.global	CapSense_SetDiffCountData
 295              		.code	16
 296              		.thumb_func
 297              		.type	CapSense_SetDiffCountData, %function
 298              	CapSense_SetDiffCountData:
 299              	.LFB45:
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 20


 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 300              		.loc 1 792 0
 301              		.cfi_startproc
 302              	.LVL29:
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 303              		.loc 1 793 0
 304 0000 014B     		ldr	r3, .L28
 305 0002 2433     		add	r3, r3, #36
 306 0004 1954     		strb	r1, [r3, r0]
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 307              		.loc 1 794 0
 308              		@ sp needed
 309 0006 7047     		bx	lr
 310              	.L29:
 311              		.align	2
 312              	.L28:
 313 0008 00000000 		.word	.LANCHOR0
 314              		.cfi_endproc
 315              	.LFE45:
 316              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 317              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 318              		.align	2
 319              		.global	CapSense_GetFingerThreshold
 320              		.code	16
 321              		.thumb_func
 322              		.type	CapSense_GetFingerThreshold, %function
 323              	CapSense_GetFingerThreshold:
 324              	.LFB46:
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 21


 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 325              		.loc 1 819 0
 326              		.cfi_startproc
 327              	.LVL30:
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 328              		.loc 1 820 0
 329 0000 014B     		ldr	r3, .L31
 330 0002 1818     		add	r0, r3, r0
 331              	.LVL31:
 332 0004 007B     		ldrb	r0, [r0, #12]
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 333              		.loc 1 821 0
 334              		@ sp needed
 335 0006 7047     		bx	lr
 336              	.L32:
 337              		.align	2
 338              	.L31:
 339 0008 00000000 		.word	.LANCHOR1
 340              		.cfi_endproc
 341              	.LFE46:
 342              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 343              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 344              		.align	2
 345              		.global	CapSense_GetNoiseThreshold
 346              		.code	16
 347              		.thumb_func
 348              		.type	CapSense_GetNoiseThreshold, %function
 349              	CapSense_GetNoiseThreshold:
 350              	.LFB47:
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 22


 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 351              		.loc 1 846 0
 352              		.cfi_startproc
 353              	.LVL32:
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 354              		.loc 1 847 0
 355 0000 014B     		ldr	r3, .L34
 356 0002 185C     		ldrb	r0, [r3, r0]
 357              	.LVL33:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 358              		.loc 1 848 0
 359              		@ sp needed
 360 0004 7047     		bx	lr
 361              	.L35:
 362 0006 C046     		.align	2
 363              	.L34:
 364 0008 00000000 		.word	CapSense_noiseThreshold
 365              		.cfi_endproc
 366              	.LFE47:
 367              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 368              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 369              		.align	2
 370              		.global	CapSense_GetFingerHysteresis
 371              		.code	16
 372              		.thumb_func
 373              		.type	CapSense_GetFingerHysteresis, %function
 374              	CapSense_GetFingerHysteresis:
 375              	.LFB48:
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 376              		.loc 1 874 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 23


 377              		.cfi_startproc
 378              	.LVL34:
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 379              		.loc 1 875 0
 380 0000 014B     		ldr	r3, .L37
 381 0002 185C     		ldrb	r0, [r3, r0]
 382              	.LVL35:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 383              		.loc 1 876 0
 384              		@ sp needed
 385 0004 7047     		bx	lr
 386              	.L38:
 387 0006 C046     		.align	2
 388              	.L37:
 389 0008 00000000 		.word	CapSense_hysteresis
 390              		.cfi_endproc
 391              	.LFE48:
 392              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 393              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 394              		.align	2
 395              		.global	CapSense_GetNegativeNoiseThreshold
 396              		.code	16
 397              		.thumb_func
 398              		.type	CapSense_GetNegativeNoiseThreshold, %function
 399              	CapSense_GetNegativeNoiseThreshold:
 400              	.LFB49:
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 401              		.loc 1 902 0
 402              		.cfi_startproc
 403              	.LVL36:
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 24


 404              		.loc 1 904 0
 405 0000 014B     		ldr	r3, .L40
 406 0002 185C     		ldrb	r0, [r3, r0]
 407              	.LVL37:
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 408              		.loc 1 908 0
 409              		@ sp needed
 410 0004 7047     		bx	lr
 411              	.L41:
 412 0006 C046     		.align	2
 413              	.L40:
 414 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 415              		.cfi_endproc
 416              	.LFE49:
 417              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 418              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 419              		.align	2
 420              		.global	CapSense_SetFingerThreshold
 421              		.code	16
 422              		.thumb_func
 423              		.type	CapSense_SetFingerThreshold, %function
 424              	CapSense_SetFingerThreshold:
 425              	.LFB50:
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 426              		.loc 1 935 0
 427              		.cfi_startproc
 428              	.LVL38:
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 25


 429              		.loc 1 936 0
 430 0000 014B     		ldr	r3, .L43
 431 0002 1818     		add	r0, r3, r0
 432              	.LVL39:
 433 0004 0173     		strb	r1, [r0, #12]
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 434              		.loc 1 937 0
 435              		@ sp needed
 436 0006 7047     		bx	lr
 437              	.L44:
 438              		.align	2
 439              	.L43:
 440 0008 00000000 		.word	.LANCHOR1
 441              		.cfi_endproc
 442              	.LFE50:
 443              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 444              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 445              		.align	2
 446              		.global	CapSense_SetNoiseThreshold
 447              		.code	16
 448              		.thumb_func
 449              		.type	CapSense_SetNoiseThreshold, %function
 450              	CapSense_SetNoiseThreshold:
 451              	.LFB51:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 452              		.loc 1 963 0
 453              		.cfi_startproc
 454              	.LVL40:
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 455              		.loc 1 964 0
 456 0000 014B     		ldr	r3, .L46
 457 0002 1954     		strb	r1, [r3, r0]
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 26


 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 458              		.loc 1 965 0
 459              		@ sp needed
 460 0004 7047     		bx	lr
 461              	.L47:
 462 0006 C046     		.align	2
 463              	.L46:
 464 0008 00000000 		.word	CapSense_noiseThreshold
 465              		.cfi_endproc
 466              	.LFE51:
 467              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 468              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 469              		.align	2
 470              		.global	CapSense_SetFingerHysteresis
 471              		.code	16
 472              		.thumb_func
 473              		.type	CapSense_SetFingerHysteresis, %function
 474              	CapSense_SetFingerHysteresis:
 475              	.LFB52:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 476              		.loc 1 991 0
 477              		.cfi_startproc
 478              	.LVL41:
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 479              		.loc 1 992 0
 480 0000 014B     		ldr	r3, .L49
 481 0002 1954     		strb	r1, [r3, r0]
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 482              		.loc 1 993 0
 483              		@ sp needed
 484 0004 7047     		bx	lr
 485              	.L50:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 27


 486 0006 C046     		.align	2
 487              	.L49:
 488 0008 00000000 		.word	CapSense_hysteresis
 489              		.cfi_endproc
 490              	.LFE52:
 491              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 492              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 493              		.align	2
 494              		.global	CapSense_SetNegativeNoiseThreshold
 495              		.code	16
 496              		.thumb_func
 497              		.type	CapSense_SetNegativeNoiseThreshold, %function
 498              	CapSense_SetNegativeNoiseThreshold:
 499              	.LFB53:
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 500              		.loc 1 1020 0
 501              		.cfi_startproc
 502              	.LVL42:
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 503              		.loc 1 1021 0
 504 0000 014B     		ldr	r3, .L52
 505 0002 1954     		strb	r1, [r3, r0]
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 506              		.loc 1 1022 0
 507              		@ sp needed
 508 0004 7047     		bx	lr
 509              	.L53:
 510 0006 C046     		.align	2
 511              	.L52:
 512 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 513              		.cfi_endproc
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 28


 514              	.LFE53:
 515              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 516              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 517              		.align	2
 518              		.global	CapSense_SetDebounce
 519              		.code	16
 520              		.thumb_func
 521              		.type	CapSense_SetDebounce, %function
 522              	CapSense_SetDebounce:
 523              	.LFB54:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 524              		.loc 1 1048 0
 525              		.cfi_startproc
 526              	.LVL43:
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 527              		.loc 1 1049 0
 528 0000 014B     		ldr	r3, .L55
 529 0002 1954     		strb	r1, [r3, r0]
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 530              		.loc 1 1050 0
 531              		@ sp needed
 532 0004 7047     		bx	lr
 533              	.L56:
 534 0006 C046     		.align	2
 535              	.L55:
 536 0008 00000000 		.word	.LANCHOR1
 537              		.cfi_endproc
 538              	.LFE54:
 539              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 540              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 541              		.align	2
 542              		.global	CapSense_SetLowBaselineReset
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 29


 543              		.code	16
 544              		.thumb_func
 545              		.type	CapSense_SetLowBaselineReset, %function
 546              	CapSense_SetLowBaselineReset:
 547              	.LFB55:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 548              		.loc 1 1076 0
 549              		.cfi_startproc
 550              	.LVL44:
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 551              		.loc 1 1077 0
 552 0000 014B     		ldr	r3, .L58
 553 0002 1818     		add	r0, r3, r0
 554              	.LVL45:
 555 0004 0176     		strb	r1, [r0, #24]
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 556              		.loc 1 1078 0
 557              		@ sp needed
 558 0006 7047     		bx	lr
 559              	.L59:
 560              		.align	2
 561              	.L58:
 562 0008 00000000 		.word	.LANCHOR1
 563              		.cfi_endproc
 564              	.LFE55:
 565              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 566              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 567              		.align	2
 568              		.global	CapSense_CheckIsSensorActive
 569              		.code	16
 570              		.thumb_func
 571              		.type	CapSense_CheckIsSensorActive, %function
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 30


 572              	CapSense_CheckIsSensorActive:
 573              	.LFB56:
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 574              		.loc 1 1122 0
 575              		.cfi_startproc
 576              	.LVL46:
 577 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 578              		.cfi_def_cfa_offset 20
 579              		.cfi_offset 4, -20
 580              		.cfi_offset 5, -16
 581              		.cfi_offset 6, -12
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 4746     		mov	r7, r8
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 31


 585 0004 80B4     		push	{r7}
 586              		.cfi_def_cfa_offset 24
 587              		.cfi_offset 8, -24
 588 0006 041C     		mov	r4, r0
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 589              		.loc 1 1132 0
 590 0008 234B     		ldr	r3, .L66
 591 000a 1D5C     		ldrb	r5, [r3, r0]
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 592              		.loc 1 1134 0
 593 000c 234B     		ldr	r3, .L66+4
 594 000e 5A19     		add	r2, r3, r5
 595 0010 177B     		ldrb	r7, [r2, #12]
 596              	.LVL47:
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 597              		.loc 1 1135 0
 598 0012 234A     		ldr	r2, .L66+8
 599              	.LVL48:
 600 0014 565D     		ldrb	r6, [r2, r5]
 601              	.LVL49:
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 602              		.loc 1 1136 0
 603 0016 5B5D     		ldrb	r3, [r3, r5]
 604              	.LVL50:
 605 0018 9846     		mov	r8, r3
 606              	.LVL51:
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = widget;
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 607              		.loc 1 1142 0
 608 001a 2248     		ldr	r0, .L66+12
 609              	.LVL52:
 610 001c 4030     		add	r0, r0, #64
 611 001e 211C     		mov	r1, r4
 612 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 613              	.LVL53:
 614 0024 0028     		cmp	r0, #0
 615 0026 10D0     		beq	.L61
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 616              		.loc 1 1145 0
 617 0028 1E4B     		ldr	r3, .L66+12
 618 002a 2433     		add	r3, r3, #36
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 32


 619 002c 1B5D     		ldrb	r3, [r3, r4]
 620 002e BE1B     		sub	r6, r7, r6
 621              	.LVL54:
 622 0030 B342     		cmp	r3, r6
 623 0032 23DA     		bge	.L62
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 624              		.loc 1 1147 0
 625 0034 1B4E     		ldr	r6, .L66+12
 626 0036 301C     		mov	r0, r6
 627 0038 4030     		add	r0, r0, #64
 628 003a 211C     		mov	r1, r4
 629 003c 0022     		mov	r2, #0
 630 003e FFF7FEFF 		bl	CapSense_SetBitValue
 631              	.LVL55:
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 632              		.loc 1 1149 0
 633 0042 3036     		add	r6, r6, #48
 634 0044 4246     		mov	r2, r8
 635 0046 7255     		strb	r2, [r6, r5]
 636 0048 18E0     		b	.L62
 637              	.LVL56:
 638              	.L61:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 639              		.loc 1 1155 0
 640 004a 164B     		ldr	r3, .L66+12
 641 004c 2433     		add	r3, r3, #36
 642 004e 1B5D     		ldrb	r3, [r3, r4]
 643 0050 BE19     		add	r6, r7, r6
 644              	.LVL57:
 645 0052 B342     		cmp	r3, r6
 646 0054 0EDB     		blt	.L63
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 647              		.loc 1 1157 0
 648 0056 134A     		ldr	r2, .L66+12
 649 0058 3032     		add	r2, r2, #48
 650 005a 535D     		ldrb	r3, [r2, r5]
 651 005c 013B     		sub	r3, r3, #1
 652 005e DBB2     		uxtb	r3, r3
 653 0060 5355     		strb	r3, [r2, r5]
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 654              		.loc 1 1159 0
 655 0062 002B     		cmp	r3, #0
 656 0064 0AD1     		bne	.L62
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 657              		.loc 1 1161 0
 658 0066 0F48     		ldr	r0, .L66+12
 659 0068 4030     		add	r0, r0, #64
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 33


 660 006a 211C     		mov	r1, r4
 661 006c 0122     		mov	r2, #1
 662 006e FFF7FEFF 		bl	CapSense_SetBitValue
 663              	.LVL58:
 664 0072 03E0     		b	.L62
 665              	.L63:
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 666              		.loc 1 1167 0
 667 0074 0B4B     		ldr	r3, .L66+12
 668 0076 3033     		add	r3, r3, #48
 669 0078 4246     		mov	r2, r8
 670 007a 5A55     		strb	r2, [r3, r5]
 671              	.L62:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 672              		.loc 1 1171 0
 673 007c 0948     		ldr	r0, .L66+12
 674 007e 4030     		add	r0, r0, #64
 675 0080 211C     		mov	r1, r4
 676 0082 FFF7FEFF 		bl	CapSense_GetBitValue
 677              	.LVL59:
 678 0086 0028     		cmp	r0, #0
 679 0088 01D0     		beq	.L65
 680 008a 0120     		mov	r0, #1
 681 008c 00E0     		b	.L64
 682              	.L65:
 683 008e 0020     		mov	r0, #0
 684              	.L64:
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 685              		.loc 1 1172 0 discriminator 3
 686              		@ sp needed
 687              	.LVL60:
 688              	.LVL61:
 689              	.LVL62:
 690 0090 04BC     		pop	{r2}
 691 0092 9046     		mov	r8, r2
 692 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 693              	.L67:
 694 0096 C046     		.align	2
 695              	.L66:
 696 0098 00000000 		.word	CapSense_widgetNumber
 697 009c 00000000 		.word	.LANCHOR1
 698 00a0 00000000 		.word	CapSense_hysteresis
 699 00a4 00000000 		.word	.LANCHOR0
 700              		.cfi_endproc
 701              	.LFE56:
 702              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 703              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 704              		.align	2
 705              		.global	CapSense_CheckIsWidgetActive
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 34


 706              		.code	16
 707              		.thumb_func
 708              		.type	CapSense_CheckIsWidgetActive, %function
 709              	CapSense_CheckIsWidgetActive:
 710              	.LFB57:
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 711              		.loc 1 1204 0
 712              		.cfi_startproc
 713              	.LVL63:
 714 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 715              		.cfi_def_cfa_offset 24
 716              		.cfi_offset 3, -24
 717              		.cfi_offset 4, -20
 718              		.cfi_offset 5, -16
 719              		.cfi_offset 6, -12
 720              		.cfi_offset 7, -8
 721              		.cfi_offset 14, -4
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 722              		.loc 1 1205 0
 723 0002 094B     		ldr	r3, .L73
 724 0004 1C5C     		ldrb	r4, [r3, r0]
 725              	.LVL64:
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 726              		.loc 1 1206 0
 727 0006 1818     		add	r0, r3, r0
 728              	.LVL65:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 35


 729 0008 057B     		ldrb	r5, [r0, #12]
 730 000a 2D19     		add	r5, r5, r4
 731              	.LVL66:
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 732              		.loc 1 1207 0
 733 000c 0026     		mov	r6, #0
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 734              		.loc 1 1214 0
 735 000e 0127     		mov	r7, #1
 736              	.LVL67:
 737              	.L70:
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 738              		.loc 1 1212 0
 739 0010 201C     		mov	r0, r4
 740 0012 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 741              	.LVL68:
 742 0016 0028     		cmp	r0, #0
 743 0018 00D0     		beq	.L69
 744              		.loc 1 1214 0
 745 001a 3E1C     		mov	r6, r7
 746              	.LVL69:
 747              	.L69:
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 748              		.loc 1 1216 0
 749 001c 0134     		add	r4, r4, #1
 750              	.LVL70:
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 751              		.loc 1 1218 0
 752 001e AC42     		cmp	r4, r5
 753 0020 F6D3     		bcc	.L70
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 754              		.loc 1 1223 0
 755 0022 301C     		mov	r0, r6
 756              		@ sp needed
 757              	.LVL71:
 758              	.LVL72:
 759              	.LVL73:
 760 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 761              	.L74:
 762 0026 C046     		.align	2
 763              	.L73:
 764 0028 00000000 		.word	.LANCHOR2
 765              		.cfi_endproc
 766              	.LFE57:
 767              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 36


 768              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 769              		.align	2
 770              		.global	CapSense_CheckIsAnyWidgetActive
 771              		.code	16
 772              		.thumb_func
 773              		.type	CapSense_CheckIsAnyWidgetActive, %function
 774              	CapSense_CheckIsAnyWidgetActive:
 775              	.LFB58:
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 776              		.loc 1 1250 0
 777              		.cfi_startproc
 778 0000 70B5     		push	{r4, r5, r6, lr}
 779              		.cfi_def_cfa_offset 16
 780              		.cfi_offset 4, -16
 781              		.cfi_offset 5, -12
 782              		.cfi_offset 6, -8
 783              		.cfi_offset 14, -4
 784              	.LVL74:
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 785              		.loc 1 1253 0
 786 0002 0025     		mov	r5, #0
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 787              		.loc 1 1255 0
 788 0004 0024     		mov	r4, #0
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 37


 789              		.loc 1 1259 0
 790 0006 0126     		mov	r6, #1
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 791              		.loc 1 1255 0
 792 0008 06E0     		b	.L76
 793              	.LVL75:
 794              	.L78:
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 795              		.loc 1 1257 0
 796 000a 201C     		mov	r0, r4
 797 000c FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 798              	.LVL76:
 799 0010 0028     		cmp	r0, #0
 800 0012 00D0     		beq	.L77
 801              		.loc 1 1259 0
 802 0014 351C     		mov	r5, r6
 803              	.LVL77:
 804              	.L77:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 805              		.loc 1 1255 0
 806 0016 0134     		add	r4, r4, #1
 807              	.LVL78:
 808              	.L76:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 809              		.loc 1 1255 0 is_stmt 0 discriminator 1
 810 0018 0B2C     		cmp	r4, #11
 811 001a F6D9     		bls	.L78
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 812              		.loc 1 1266 0 is_stmt 1
 813 001c 281C     		mov	r0, r5
 814              		@ sp needed
 815              	.LVL79:
 816              	.LVL80:
 817 001e 70BD     		pop	{r4, r5, r6, pc}
 818              		.cfi_endproc
 819              	.LFE58:
 820              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 821              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 822              		.align	2
 823              		.global	CapSense_EnableWidget
 824              		.code	16
 825              		.thumb_func
 826              		.type	CapSense_EnableWidget, %function
 827              	CapSense_EnableWidget:
 828              	.LFB59:
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 38


1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 829              		.loc 1 1297 0
 830              		.cfi_startproc
 831              	.LVL81:
 832 0000 70B5     		push	{r4, r5, r6, lr}
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 4, -16
 835              		.cfi_offset 5, -12
 836              		.cfi_offset 6, -8
 837              		.cfi_offset 14, -4
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 838              		.loc 1 1299 0
 839 0002 084B     		ldr	r3, .L83
 840 0004 1C5C     		ldrb	r4, [r3, r0]
 841              	.LVL82:
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 842              		.loc 1 1300 0
 843 0006 1818     		add	r0, r3, r0
 844              	.LVL83:
 845 0008 067B     		ldrb	r6, [r0, #12]
 846 000a 3619     		add	r6, r6, r4
 847 000c F6B2     		uxtb	r6, r6
 848              	.LVL84:
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 849              		.loc 1 1305 0
 850 000e 064D     		ldr	r5, .L83+4
 851              	.LVL85:
 852              	.L81:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 39


 853              		.loc 1 1305 0 is_stmt 0 discriminator 1
 854 0010 281C     		mov	r0, r5
 855 0012 211C     		mov	r1, r4
 856 0014 0122     		mov	r2, #1
 857 0016 FFF7FEFF 		bl	CapSense_SetBitValue
 858              	.LVL86:
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 859              		.loc 1 1306 0 is_stmt 1 discriminator 1
 860 001a 0134     		add	r4, r4, #1
 861              	.LVL87:
 862 001c E4B2     		uxtb	r4, r4
 863              	.LVL88:
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 864              		.loc 1 1308 0 discriminator 1
 865 001e B442     		cmp	r4, r6
 866 0020 F6D3     		bcc	.L81
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 867              		.loc 1 1309 0
 868              		@ sp needed
 869              	.LVL89:
 870              	.LVL90:
 871 0022 70BD     		pop	{r4, r5, r6, pc}
 872              	.L84:
 873              		.align	2
 874              	.L83:
 875 0024 00000000 		.word	.LANCHOR2
 876 0028 00000000 		.word	CapSense_sensorEnableMask
 877              		.cfi_endproc
 878              	.LFE59:
 879              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 880              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 881              		.align	2
 882              		.global	CapSense_DisableWidget
 883              		.code	16
 884              		.thumb_func
 885              		.type	CapSense_DisableWidget, %function
 886              	CapSense_DisableWidget:
 887              	.LFB60:
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 40


1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 888              		.loc 1 1340 0
 889              		.cfi_startproc
 890              	.LVL91:
 891 0000 70B5     		push	{r4, r5, r6, lr}
 892              		.cfi_def_cfa_offset 16
 893              		.cfi_offset 4, -16
 894              		.cfi_offset 5, -12
 895              		.cfi_offset 6, -8
 896              		.cfi_offset 14, -4
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 897              		.loc 1 1341 0
 898 0002 084B     		ldr	r3, .L88
 899 0004 1C5C     		ldrb	r4, [r3, r0]
 900              	.LVL92:
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 901              		.loc 1 1342 0
 902 0006 1818     		add	r0, r3, r0
 903              	.LVL93:
 904 0008 067B     		ldrb	r6, [r0, #12]
 905 000a 3619     		add	r6, r6, r4
 906 000c F6B2     		uxtb	r6, r6
 907              	.LVL94:
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 908              		.loc 1 1348 0
 909 000e 064D     		ldr	r5, .L88+4
 910              	.LVL95:
 911              	.L86:
 912              		.loc 1 1348 0 is_stmt 0 discriminator 1
 913 0010 281C     		mov	r0, r5
 914 0012 211C     		mov	r1, r4
 915 0014 0022     		mov	r2, #0
 916 0016 FFF7FEFF 		bl	CapSense_SetBitValue
 917              	.LVL96:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 918              		.loc 1 1349 0 is_stmt 1 discriminator 1
 919 001a 0134     		add	r4, r4, #1
 920              	.LVL97:
 921 001c E4B2     		uxtb	r4, r4
 922              	.LVL98:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 41


1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 923              		.loc 1 1351 0 discriminator 1
 924 001e B442     		cmp	r4, r6
 925 0020 F6D3     		bcc	.L86
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 926              		.loc 1 1352 0
 927              		@ sp needed
 928              	.LVL99:
 929              	.LVL100:
 930 0022 70BD     		pop	{r4, r5, r6, pc}
 931              	.L89:
 932              		.align	2
 933              	.L88:
 934 0024 00000000 		.word	.LANCHOR2
 935 0028 00000000 		.word	CapSense_sensorEnableMask
 936              		.cfi_endproc
 937              	.LFE60:
 938              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 939              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 940              		.align	2
 941              		.global	CapSense_MedianFilter
 942              		.code	16
 943              		.thumb_func
 944              		.type	CapSense_MedianFilter, %function
 945              	CapSense_MedianFilter:
 946              	.LFB61:
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 42


1383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 43


1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 44


1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 45


1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 46


1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 47


1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 48


1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 49


1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 50


1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 51


1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 52


1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 53


2010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 54


2067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 55


2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 56


2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 57


2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 58


2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 59


2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 947              		.loc 1 2392 0
 948              		.cfi_startproc
 949              	.LVL101:
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 950              		.loc 1 2395 0
 951 0000 8842     		cmp	r0, r1
 952 0002 02D9     		bls	.L91
 953 0004 031C     		mov	r3, r0
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 954              		.loc 1 2399 0
 955 0006 081C     		mov	r0, r1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 60


 956              	.LVL102:
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 957              		.loc 1 2398 0
 958 0008 191C     		mov	r1, r3
 959              	.LVL103:
 960              	.L91:
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 961              		.loc 1 2402 0
 962 000a 9142     		cmp	r1, r2
 963 000c 00D9     		bls	.L92
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 964              		.loc 1 2404 0
 965 000e 111C     		mov	r1, r2
 966              	.LVL104:
 967              	.L92:
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 968              		.loc 1 2407 0
 969 0010 0B1C     		add	r3, r1, #0
 970 0012 8142     		cmp	r1, r0
 971 0014 00D2     		bcs	.L93
 972 0016 031C     		add	r3, r0, #0
 973              	.L93:
 974 0018 98B2     		uxth	r0, r3
 975              	.LVL105:
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 976              		.loc 1 2408 0
 977              		@ sp needed
 978 001a 7047     		bx	lr
 979              		.cfi_endproc
 980              	.LFE61:
 981              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 982              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 983              		.align	2
 984              		.global	CapSense_IIR4Filter
 985              		.code	16
 986              		.thumb_func
 987              		.type	CapSense_IIR4Filter, %function
 988              	CapSense_IIR4Filter:
 989              	.LFB62:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 61


2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 62


2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 990              		.loc 1 2512 0
 991              		.cfi_startproc
 992              	.LVL106:
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 993              		.loc 1 2516 0
 994 0000 4018     		add	r0, r0, r1
 995              	.LVL107:
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 996              		.loc 1 2517 0
 997 0002 4900     		lsl	r1, r1, #1
 998              	.LVL108:
 999 0004 0818     		add	r0, r1, r0
 1000              	.LVL109:
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1001              		.loc 1 2520 0
 1002 0006 8008     		lsr	r0, r0, #2
 1003              	.LVL110:
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 63


 1004              		.loc 1 2521 0
 1005              		@ sp needed
 1006 0008 7047     		bx	lr
 1007              		.cfi_endproc
 1008              	.LFE62:
 1009              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1010 000a C046     		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1011              		.align	2
 1012              		.global	CapSense_UpdateBaselineNoThreshold
 1013              		.code	16
 1014              		.thumb_func
 1015              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1016              	CapSense_UpdateBaselineNoThreshold:
 1017              	.LFB38:
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1018              		.loc 1 372 0
 1019              		.cfi_startproc
 1020              	.LVL111:
 1021 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1022              		.cfi_def_cfa_offset 20
 1023              		.cfi_offset 4, -20
 1024              		.cfi_offset 5, -16
 1025              		.cfi_offset 6, -12
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 5746     		mov	r7, r10
 1029 0004 4E46     		mov	r6, r9
 1030 0006 4546     		mov	r5, r8
 1031 0008 E0B4     		push	{r5, r6, r7}
 1032              		.cfi_def_cfa_offset 32
 1033              		.cfi_offset 8, -32
 1034              		.cfi_offset 9, -28
 1035              		.cfi_offset 10, -24
 1036 000a 041C     		mov	r4, r0
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 1037              		.loc 1 377 0
 1038 000c 374B     		ldr	r3, .L107
 1039 000e 1B5C     		ldrb	r3, [r3, r0]
 1040 0010 9846     		mov	r8, r3
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 1041              		.loc 1 378 0
 1042 0012 374B     		ldr	r3, .L107+4
 1043 0014 4046     		mov	r0, r8
 1044              	.LVL112:
 1045 0016 1B5C     		ldrb	r3, [r3, r0]
 1046 0018 9946     		mov	r9, r3
 1047              	.LVL113:
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1048              		.loc 1 386 0
 1049 001a 6200     		lsl	r2, r4, #1
 1050 001c 354B     		ldr	r3, .L107+8
 1051 001e D55A     		ldrh	r5, [r2, r3]
 1052              	.LVL114:
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 1053              		.loc 1 389 0
 1054 0020 2423     		mov	r3, #36
 1055              	.LVL115:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 64


 1056 0022 354A     		ldr	r2, .L107+12
 1057              	.LVL116:
 1058 0024 D35C     		ldrb	r3, [r2, r3]
 1059 0026 002B     		cmp	r3, #0
 1060 0028 07D0     		beq	.L98
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 1061              		.loc 1 410 0
 1062 002a 344E     		ldr	r6, .L107+16
 1063 002c 6700     		lsl	r7, r4, #1
 1064              	.LVL117:
 1065 002e B95B     		ldrh	r1, [r7, r6]
 1066 0030 281C     		mov	r0, r5
 1067              	.LVL118:
 1068 0032 FFF7FEFF 		bl	CapSense_IIR4Filter
 1069              	.LVL119:
 1070 0036 051C     		mov	r5, r0
 1071              	.LVL120:
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 1072              		.loc 1 411 0
 1073 0038 B853     		strh	r0, [r7, r6]
 1074              	.LVL121:
 1075              	.L98:
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 1076              		.loc 1 432 0
 1077 003a E1B2     		uxtb	r1, r4
 1078 003c 3048     		ldr	r0, .L107+20
 1079 003e 2D4A     		ldr	r2, .L107+8
 1080 0040 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_20
 1081              	.LVL122:
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 1082              		.loc 1 437 0
 1083 0044 6300     		lsl	r3, r4, #1
 1084 0046 2F4A     		ldr	r2, .L107+24
 1085 0048 9B5A     		ldrh	r3, [r3, r2]
 1086 004a AB42     		cmp	r3, r5
 1087 004c 06D8     		bhi	.L99
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 1088              		.loc 1 439 0
 1089 004e 0021     		mov	r1, #0
 1090 0050 2D4A     		ldr	r2, .L107+28
 1091 0052 1155     		strb	r1, [r2, r4]
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1092              		.loc 1 440 0
 1093 0054 EE1A     		sub	r6, r5, r3
 1094 0056 B6B2     		uxth	r6, r6
 1095              	.LVL123:
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1096              		.loc 1 441 0
 1097 0058 0127     		mov	r7, #1
 1098 005a 02E0     		b	.L100
 1099              	.LVL124:
 1100              	.L99:
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 1101              		.loc 1 445 0
 1102 005c 5E1B     		sub	r6, r3, r5
 1103 005e B6B2     		uxth	r6, r6
 1104              	.LVL125:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 65


 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1105              		.loc 1 446 0
 1106 0060 0027     		mov	r7, #0
 1107              	.LVL126:
 1108              	.L100:
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 1109              		.loc 1 450 0
 1110 0062 002F     		cmp	r7, #0
 1111 0064 16D1     		bne	.L101
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 1112              		.loc 1 450 0 is_stmt 0 discriminator 1
 1113 0066 294A     		ldr	r2, .L107+32
 1114 0068 4146     		mov	r1, r8
 1115 006a 525C     		ldrb	r2, [r2, r1]
 1116 006c B242     		cmp	r2, r6
 1117 006e 11D2     		bcs	.L101
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 1118              		.loc 1 455 0 is_stmt 1
 1119 0070 254B     		ldr	r3, .L107+28
 1120 0072 1B5D     		ldrb	r3, [r3, r4]
 1121 0074 204A     		ldr	r2, .L107+12
 1122 0076 1219     		add	r2, r2, r4
 1123 0078 127E     		ldrb	r2, [r2, #24]
 1124 007a 9342     		cmp	r3, r2
 1125 007c 06D3     		bcc	.L102
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 1126              		.loc 1 457 0
 1127 007e 201C     		mov	r0, r4
 1128 0080 FFF7FEFF 		bl	CapSense_BaseInit
 1129              	.LVL127:
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1130              		.loc 1 458 0
 1131 0084 0022     		mov	r2, #0
 1132 0086 204B     		ldr	r3, .L107+28
 1133 0088 1A55     		strb	r2, [r3, r4]
 1134 008a 16E0     		b	.L103
 1135              	.L102:
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 1136              		.loc 1 462 0
 1137 008c 0133     		add	r3, r3, #1
 1138 008e 1E4A     		ldr	r2, .L107+28
 1139 0090 1355     		strb	r3, [r2, r4]
 1140 0092 12E0     		b	.L103
 1141              	.L101:
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 1142              		.loc 1 483 0
 1143 0094 1A02     		lsl	r2, r3, #8
 1144 0096 9046     		mov	r8, r2
 1145              	.LVL128:
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1146              		.loc 1 484 0
 1147 0098 1A49     		ldr	r1, .L107+24
 1148 009a 0819     		add	r0, r1, r4
 1149 009c 8246     		mov	r10, r0
 1150 009e 027E     		ldrb	r2, [r0, #24]
 1151              	.LVL129:
 1152 00a0 4046     		mov	r0, r8
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 66


 1153 00a2 1043     		orr	r0, r2
 1154 00a4 8446     		mov	ip, r0
 1155              	.LVL130:
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 1156              		.loc 1 487 0
 1157 00a6 6544     		add	r5, r5, ip
 1158              	.LVL131:
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 1159              		.loc 1 490 0
 1160 00a8 EB1A     		sub	r3, r5, r3
 1161              	.LVL132:
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 1162              		.loc 1 493 0
 1163 00aa 1D0A     		lsr	r5, r3, #8
 1164 00ac 6000     		lsl	r0, r4, #1
 1165 00ae 0D52     		strh	r5, [r1, r0]
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1166              		.loc 1 494 0
 1167 00b0 5146     		mov	r1, r10
 1168 00b2 0B76     		strb	r3, [r1, #24]
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 1169              		.loc 1 496 0
 1170 00b4 0022     		mov	r2, #0
 1171 00b6 144B     		ldr	r3, .L107+28
 1172              	.LVL133:
 1173 00b8 1A55     		strb	r2, [r3, r4]
 1174              	.L103:
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 1175              		.loc 1 503 0
 1176 00ba B145     		cmp	r9, r6
 1177 00bc 0CD2     		bcs	.L104
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 1178              		.loc 1 503 0 is_stmt 0 discriminator 1
 1179 00be 002F     		cmp	r7, #0
 1180 00c0 0AD0     		beq	.L104
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 1181              		.loc 1 507 0 is_stmt 1
 1182 00c2 FF2E     		cmp	r6, #255
 1183 00c4 04D9     		bls	.L105
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 1184              		.loc 1 509 0
 1185 00c6 FF22     		mov	r2, #255
 1186 00c8 0E4B     		ldr	r3, .L107+24
 1187 00ca 2433     		add	r3, r3, #36
 1188 00cc 1A55     		strb	r2, [r3, r4]
 1189 00ce 07E0     		b	.L97
 1190              	.L105:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 1191              		.loc 1 513 0
 1192 00d0 0C4B     		ldr	r3, .L107+24
 1193 00d2 2433     		add	r3, r3, #36
 1194 00d4 1E55     		strb	r6, [r3, r4]
 1195 00d6 03E0     		b	.L97
 1196              	.L104:
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 1197              		.loc 1 522 0
 1198 00d8 0022     		mov	r2, #0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 67


 1199 00da 0A4B     		ldr	r3, .L107+24
 1200 00dc 2433     		add	r3, r3, #36
 1201 00de 1A55     		strb	r2, [r3, r4]
 1202              	.L97:
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1203              		.loc 1 529 0
 1204              		@ sp needed
 1205              	.LVL134:
 1206              	.LVL135:
 1207              	.LVL136:
 1208              	.LVL137:
 1209 00e0 1CBC     		pop	{r2, r3, r4}
 1210 00e2 9046     		mov	r8, r2
 1211 00e4 9946     		mov	r9, r3
 1212 00e6 A246     		mov	r10, r4
 1213 00e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1214              	.L108:
 1215 00ea C046     		.align	2
 1216              	.L107:
 1217 00ec 00000000 		.word	CapSense_widgetNumber
 1218 00f0 00000000 		.word	CapSense_noiseThreshold
 1219 00f4 00000000 		.word	CapSense_sensorRaw
 1220 00f8 00000000 		.word	.LANCHOR1
 1221 00fc 00000000 		.word	CapSense_rawFilterData1
 1222 0100 00000000 		.word	CapSense_config
 1223 0104 00000000 		.word	.LANCHOR0
 1224 0108 00000000 		.word	CapSense_lowBaselineResetCnt
 1225 010c 00000000 		.word	CapSense_negativeNoiseThreshold
 1226              		.cfi_endproc
 1227              	.LFE38:
 1228              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1229              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1230              		.align	2
 1231              		.global	CapSense_UpdateSensorBaseline
 1232              		.code	16
 1233              		.thumb_func
 1234              		.type	CapSense_UpdateSensorBaseline, %function
 1235              	CapSense_UpdateSensorBaseline:
 1236              	.LFB39:
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1237              		.loc 1 563 0
 1238              		.cfi_startproc
 1239              	.LVL138:
 1240 0000 10B5     		push	{r4, lr}
 1241              		.cfi_def_cfa_offset 8
 1242              		.cfi_offset 4, -8
 1243              		.cfi_offset 14, -4
 1244 0002 041C     		mov	r4, r0
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 1245              		.loc 1 575 0
 1246 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1247              	.LVL139:
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 1248              		.loc 1 578 0
 1249 0008 201C     		mov	r0, r4
 1250 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1251              	.LVL140:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 68


 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1252              		.loc 1 584 0
 1253              		@ sp needed
 1254              	.LVL141:
 1255 000e 10BD     		pop	{r4, pc}
 1256              		.cfi_endproc
 1257              	.LFE39:
 1258              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1259              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1260              		.align	2
 1261              		.global	CapSense_UpdateEnabledBaselines
 1262              		.code	16
 1263              		.thumb_func
 1264              		.type	CapSense_UpdateEnabledBaselines, %function
 1265              	CapSense_UpdateEnabledBaselines:
 1266              	.LFB40:
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1267              		.loc 1 617 0
 1268              		.cfi_startproc
 1269 0000 38B5     		push	{r3, r4, r5, lr}
 1270              		.cfi_def_cfa_offset 16
 1271              		.cfi_offset 3, -16
 1272              		.cfi_offset 4, -12
 1273              		.cfi_offset 5, -8
 1274              		.cfi_offset 14, -4
 1275              	.LVL142:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1276              		.loc 1 621 0
 1277 0002 0024     		mov	r4, #0
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1278              		.loc 1 623 0
 1279 0004 074D     		ldr	r5, .L114
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1280              		.loc 1 621 0
 1281 0006 09E0     		b	.L111
 1282              	.LVL143:
 1283              	.L113:
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1284              		.loc 1 623 0
 1285 0008 281C     		mov	r0, r5
 1286 000a 211C     		mov	r1, r4
 1287 000c FFF7FEFF 		bl	CapSense_GetBitValue
 1288              	.LVL144:
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 1289              		.loc 1 625 0
 1290 0010 0028     		cmp	r0, #0
 1291 0012 02D0     		beq	.L112
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 1292              		.loc 1 627 0
 1293 0014 201C     		mov	r0, r4
 1294              	.LVL145:
 1295 0016 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1296              	.LVL146:
 1297              	.L112:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1298              		.loc 1 621 0
 1299 001a 0134     		add	r4, r4, #1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 69


 1300              	.LVL147:
 1301              	.L111:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1302              		.loc 1 621 0 is_stmt 0 discriminator 1
 1303 001c 0B2C     		cmp	r4, #11
 1304 001e F3D9     		bls	.L113
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1305              		.loc 1 630 0 is_stmt 1
 1306              		@ sp needed
 1307              	.LVL148:
 1308 0020 38BD     		pop	{r3, r4, r5, pc}
 1309              	.L115:
 1310 0022 C046     		.align	2
 1311              	.L114:
 1312 0024 00000000 		.word	CapSense_sensorEnableMask
 1313              		.cfi_endproc
 1314              	.LFE40:
 1315              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1316              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1317              		.align	2
 1318              		.global	CapSense_UpdateWidgetBaseline
 1319              		.code	16
 1320              		.thumb_func
 1321              		.type	CapSense_UpdateWidgetBaseline, %function
 1322              	CapSense_UpdateWidgetBaseline:
 1323              	.LFB41:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1324              		.loc 1 662 0
 1325              		.cfi_startproc
 1326              	.LVL149:
 1327 0000 70B5     		push	{r4, r5, r6, lr}
 1328              		.cfi_def_cfa_offset 16
 1329              		.cfi_offset 4, -16
 1330              		.cfi_offset 5, -12
 1331              		.cfi_offset 6, -8
 1332              		.cfi_offset 14, -4
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 1333              		.loc 1 670 0
 1334 0002 0A4B     		ldr	r3, .L120
 1335 0004 1A18     		add	r2, r3, r0
 1336 0006 157B     		ldrb	r5, [r2, #12]
 1337              	.LVL150:
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 1338              		.loc 1 673 0
 1339 0008 1C5C     		ldrb	r4, [r3, r0]
 1340              	.LVL151:
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 1341              		.loc 1 676 0
 1342 000a 2D19     		add	r5, r5, r4
 1343              	.LVL152:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1344              		.loc 1 680 0
 1345 000c 084E     		ldr	r6, .L120+4
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1346              		.loc 1 678 0
 1347 000e 09E0     		b	.L117
 1348              	.LVL153:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 70


 1349              	.L119:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1350              		.loc 1 680 0
 1351 0010 301C     		mov	r0, r6
 1352 0012 211C     		mov	r1, r4
 1353 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 1354              	.LVL154:
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 1355              		.loc 1 682 0
 1356 0018 0028     		cmp	r0, #0
 1357 001a 02D0     		beq	.L118
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 1358              		.loc 1 684 0
 1359 001c 201C     		mov	r0, r4
 1360              	.LVL155:
 1361 001e FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1362              	.LVL156:
 1363              	.L118:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1364              		.loc 1 678 0
 1365 0022 0134     		add	r4, r4, #1
 1366              	.LVL157:
 1367              	.L117:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1368              		.loc 1 678 0 is_stmt 0 discriminator 1
 1369 0024 AC42     		cmp	r4, r5
 1370 0026 F3D3     		bcc	.L119
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1371              		.loc 1 687 0 is_stmt 1
 1372              		@ sp needed
 1373              	.LVL158:
 1374              	.LVL159:
 1375 0028 70BD     		pop	{r4, r5, r6, pc}
 1376              	.L121:
 1377 002a C046     		.align	2
 1378              	.L120:
 1379 002c 00000000 		.word	.LANCHOR2
 1380 0030 00000000 		.word	CapSense_sensorEnableMask
 1381              		.cfi_endproc
 1382              	.LFE41:
 1383              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1384              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1385              		.align	2
 1386              		.global	CapSense_GetWidgetNumber
 1387              		.code	16
 1388              		.thumb_func
 1389              		.type	CapSense_GetWidgetNumber, %function
 1390              	CapSense_GetWidgetNumber:
 1391              	.LFB63:
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 71


2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 72


2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 73


2644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 74


2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1392              		.loc 1 2745 0
 1393              		.cfi_startproc
 1394              	.LVL160:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 1395              		.loc 1 2746 0
 1396 0000 014B     		ldr	r3, .L123
 1397 0002 185C     		ldrb	r0, [r3, r0]
 1398              	.LVL161:
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1399              		.loc 1 2747 0
 1400              		@ sp needed
 1401 0004 7047     		bx	lr
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 75


 1402              	.L124:
 1403 0006 C046     		.align	2
 1404              	.L123:
 1405 0008 00000000 		.word	CapSense_widgetNumber
 1406              		.cfi_endproc
 1407              	.LFE63:
 1408              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1409              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1410              		.align	2
 1411              		.global	CapSense_GetLowBaselineReset
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	CapSense_GetLowBaselineReset, %function
 1415              	CapSense_GetLowBaselineReset:
 1416              	.LFB64:
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1417              		.loc 1 2771 0
 1418              		.cfi_startproc
 1419              	.LVL162:
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 1420              		.loc 1 2772 0
 1421 0000 014B     		ldr	r3, .L126
 1422 0002 1818     		add	r0, r3, r0
 1423              	.LVL163:
 1424 0004 007E     		ldrb	r0, [r0, #24]
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1425              		.loc 1 2773 0
 1426              		@ sp needed
 1427 0006 7047     		bx	lr
 1428              	.L127:
 1429              		.align	2
 1430              	.L126:
 1431 0008 00000000 		.word	.LANCHOR1
 1432              		.cfi_endproc
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 76


 1433              	.LFE64:
 1434              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1435              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1436              		.align	2
 1437              		.global	CapSense_GetDebounce
 1438              		.code	16
 1439              		.thumb_func
 1440              		.type	CapSense_GetDebounce, %function
 1441              	CapSense_GetDebounce:
 1442              	.LFB65:
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1443              		.loc 1 2797 0
 1444              		.cfi_startproc
 1445              	.LVL164:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 1446              		.loc 1 2798 0
 1447 0000 014B     		ldr	r3, .L129
 1448 0002 185C     		ldrb	r0, [r3, r0]
 1449              	.LVL165:
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1450              		.loc 1 2799 0
 1451              		@ sp needed
 1452 0004 7047     		bx	lr
 1453              	.L130:
 1454 0006 C046     		.align	2
 1455              	.L129:
 1456 0008 00000000 		.word	.LANCHOR1
 1457              		.cfi_endproc
 1458              	.LFE65:
 1459              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1460              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1461              		.align	2
 1462              		.global	CapSense_EnableRawDataFilters
 1463              		.code	16
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 77


 1464              		.thumb_func
 1465              		.type	CapSense_EnableRawDataFilters, %function
 1466              	CapSense_EnableRawDataFilters:
 1467              	.LFB66:
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1468              		.loc 1 2823 0
 1469              		.cfi_startproc
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1470              		.loc 1 2824 0
 1471 0000 0121     		mov	r1, #1
 1472 0002 2423     		mov	r3, #36
 1473 0004 014A     		ldr	r2, .L132
 1474 0006 D154     		strb	r1, [r2, r3]
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1475              		.loc 1 2825 0
 1476              		@ sp needed
 1477 0008 7047     		bx	lr
 1478              	.L133:
 1479 000a C046     		.align	2
 1480              	.L132:
 1481 000c 00000000 		.word	.LANCHOR1
 1482              		.cfi_endproc
 1483              	.LFE66:
 1484              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1485              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1486              		.align	2
 1487              		.global	CapSense_DisableRawDataFilters
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	CapSense_DisableRawDataFilters, %function
 1491              	CapSense_DisableRawDataFilters:
 1492              	.LFB67:
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 78


2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1493              		.loc 1 2848 0
 1494              		.cfi_startproc
2849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1495              		.loc 1 2849 0
 1496 0000 0021     		mov	r1, #0
 1497 0002 2423     		mov	r3, #36
 1498 0004 014A     		ldr	r2, .L135
 1499 0006 D154     		strb	r1, [r2, r3]
2850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1500              		.loc 1 2850 0
 1501              		@ sp needed
 1502 0008 7047     		bx	lr
 1503              	.L136:
 1504 000a C046     		.align	2
 1505              	.L135:
 1506 000c 00000000 		.word	.LANCHOR1
 1507              		.cfi_endproc
 1508              	.LFE67:
 1509              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1510              		.global	CapSense_numberOfSensors
 1511              		.global	CapSense_rawDataIndex
 1512              		.global	CapSense_debounce
 1513              		.comm	CapSense_hysteresis,12,4
 1514              		.comm	CapSense_negativeNoiseThreshold,12,4
 1515              		.comm	CapSense_noiseThreshold,12,4
 1516              		.global	CapSense_fingerThreshold
 1517              		.global	CapSense_enableRawFilters
 1518              		.global	CapSense_lowBaselineReset
 1519              		.comm	CapSense_lowBaselineResetCnt,12,4
 1520              		.global	CapSense_sensorOnMask
 1521              		.global	CapSense_sensorSignal
 1522              		.global	CapSense_sensorBaselineLow
 1523              		.global	CapSense_sensorBaseline
 1524              		.comm	CapSense_rawFilterData1,24,4
 1525              		.section	.rodata
 1526              		.align	2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 79


 1527              		.set	.LANCHOR2,. + 0
 1528              		.type	CapSense_rawDataIndex, %object
 1529              		.size	CapSense_rawDataIndex, 12
 1530              	CapSense_rawDataIndex:
 1531 0000 00       		.byte	0
 1532 0001 01       		.byte	1
 1533 0002 02       		.byte	2
 1534 0003 03       		.byte	3
 1535 0004 04       		.byte	4
 1536 0005 05       		.byte	5
 1537 0006 06       		.byte	6
 1538 0007 07       		.byte	7
 1539 0008 08       		.byte	8
 1540 0009 09       		.byte	9
 1541 000a 0A       		.byte	10
 1542 000b 0B       		.byte	11
 1543              		.type	CapSense_numberOfSensors, %object
 1544              		.size	CapSense_numberOfSensors, 12
 1545              	CapSense_numberOfSensors:
 1546 000c 01       		.byte	1
 1547 000d 01       		.byte	1
 1548 000e 01       		.byte	1
 1549 000f 01       		.byte	1
 1550 0010 01       		.byte	1
 1551 0011 01       		.byte	1
 1552 0012 01       		.byte	1
 1553 0013 01       		.byte	1
 1554 0014 01       		.byte	1
 1555 0015 01       		.byte	1
 1556 0016 01       		.byte	1
 1557 0017 01       		.byte	1
 1558              		.data
 1559              		.align	2
 1560              		.set	.LANCHOR1,. + 0
 1561              		.type	CapSense_debounce, %object
 1562              		.size	CapSense_debounce, 12
 1563              	CapSense_debounce:
 1564 0000 05       		.byte	5
 1565 0001 05       		.byte	5
 1566 0002 05       		.byte	5
 1567 0003 05       		.byte	5
 1568 0004 05       		.byte	5
 1569 0005 05       		.byte	5
 1570 0006 05       		.byte	5
 1571 0007 05       		.byte	5
 1572 0008 05       		.byte	5
 1573 0009 05       		.byte	5
 1574 000a 05       		.byte	5
 1575 000b 05       		.byte	5
 1576              		.type	CapSense_fingerThreshold, %object
 1577              		.size	CapSense_fingerThreshold, 12
 1578              	CapSense_fingerThreshold:
 1579 000c 64       		.byte	100
 1580 000d 64       		.byte	100
 1581 000e 64       		.byte	100
 1582 000f 64       		.byte	100
 1583 0010 64       		.byte	100
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 80


 1584 0011 64       		.byte	100
 1585 0012 64       		.byte	100
 1586 0013 64       		.byte	100
 1587 0014 64       		.byte	100
 1588 0015 64       		.byte	100
 1589 0016 64       		.byte	100
 1590 0017 DC       		.byte	-36
 1591              		.type	CapSense_lowBaselineReset, %object
 1592              		.size	CapSense_lowBaselineReset, 12
 1593              	CapSense_lowBaselineReset:
 1594 0018 1E       		.byte	30
 1595 0019 1E       		.byte	30
 1596 001a 1E       		.byte	30
 1597 001b 1E       		.byte	30
 1598 001c 1E       		.byte	30
 1599 001d 1E       		.byte	30
 1600 001e 1E       		.byte	30
 1601 001f 1E       		.byte	30
 1602 0020 1E       		.byte	30
 1603 0021 1E       		.byte	30
 1604 0022 1E       		.byte	30
 1605 0023 1E       		.byte	30
 1606              		.type	CapSense_enableRawFilters, %object
 1607              		.size	CapSense_enableRawFilters, 1
 1608              	CapSense_enableRawFilters:
 1609 0024 01       		.byte	1
 1610 0025 000000   		.bss
 1611              		.align	2
 1612              		.set	.LANCHOR0,. + 0
 1613              		.type	CapSense_sensorBaseline, %object
 1614              		.size	CapSense_sensorBaseline, 24
 1615              	CapSense_sensorBaseline:
 1616 0000 00000000 		.space	24
 1616      00000000 
 1616      00000000 
 1616      00000000 
 1616      00000000 
 1617              		.type	CapSense_sensorBaselineLow, %object
 1618              		.size	CapSense_sensorBaselineLow, 12
 1619              	CapSense_sensorBaselineLow:
 1620 0018 00000000 		.space	12
 1620      00000000 
 1620      00000000 
 1621              		.type	CapSense_sensorSignal, %object
 1622              		.size	CapSense_sensorSignal, 12
 1623              	CapSense_sensorSignal:
 1624 0024 00000000 		.space	12
 1624      00000000 
 1624      00000000 
 1625              		.type	CapSense_debounceCounter, %object
 1626              		.size	CapSense_debounceCounter, 13
 1627              	CapSense_debounceCounter:
 1628 0030 00000000 		.space	13
 1628      00000000 
 1628      00000000 
 1628      00
 1629 003d 000000   		.space	3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 81


 1630              		.type	CapSense_sensorOnMask, %object
 1631              		.size	CapSense_sensorOnMask, 2
 1632              	CapSense_sensorOnMask:
 1633 0040 0000     		.space	2
 1634 0042 0000     		.text
 1635              	.Letext0:
 1636              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1637              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1638              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1639              		.section	.debug_info,"",%progbits
 1640              	.Ldebug_info0:
 1641 0000 C90D0000 		.4byte	0xdc9
 1642 0004 0400     		.2byte	0x4
 1643 0006 00000000 		.4byte	.Ldebug_abbrev0
 1644 000a 04       		.byte	0x4
 1645 000b 01       		.uleb128 0x1
 1646 000c 54010000 		.4byte	.LASF115
 1647 0010 01       		.byte	0x1
 1648 0011 14050000 		.4byte	.LASF116
 1649 0015 22000000 		.4byte	.LASF117
 1650 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1651 001d 00000000 		.4byte	0
 1652 0021 00000000 		.4byte	.Ldebug_line0
 1653 0025 02       		.uleb128 0x2
 1654 0026 01       		.byte	0x1
 1655 0027 06       		.byte	0x6
 1656 0028 6A020000 		.4byte	.LASF0
 1657 002c 02       		.uleb128 0x2
 1658 002d 01       		.byte	0x1
 1659 002e 08       		.byte	0x8
 1660 002f E1060000 		.4byte	.LASF1
 1661 0033 02       		.uleb128 0x2
 1662 0034 02       		.byte	0x2
 1663 0035 05       		.byte	0x5
 1664 0036 48070000 		.4byte	.LASF2
 1665 003a 02       		.uleb128 0x2
 1666 003b 02       		.byte	0x2
 1667 003c 07       		.byte	0x7
 1668 003d 78040000 		.4byte	.LASF3
 1669 0041 02       		.uleb128 0x2
 1670 0042 04       		.byte	0x4
 1671 0043 05       		.byte	0x5
 1672 0044 D6020000 		.4byte	.LASF4
 1673 0048 02       		.uleb128 0x2
 1674 0049 04       		.byte	0x4
 1675 004a 07       		.byte	0x7
 1676 004b 16040000 		.4byte	.LASF5
 1677 004f 02       		.uleb128 0x2
 1678 0050 08       		.byte	0x8
 1679 0051 05       		.byte	0x5
 1680 0052 5C020000 		.4byte	.LASF6
 1681 0056 02       		.uleb128 0x2
 1682 0057 08       		.byte	0x8
 1683 0058 07       		.byte	0x7
 1684 0059 D0010000 		.4byte	.LASF7
 1685 005d 03       		.uleb128 0x3
 1686 005e 04       		.byte	0x4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 82


 1687 005f 05       		.byte	0x5
 1688 0060 696E7400 		.ascii	"int\000"
 1689 0064 02       		.uleb128 0x2
 1690 0065 04       		.byte	0x4
 1691 0066 07       		.byte	0x7
 1692 0067 09040000 		.4byte	.LASF8
 1693 006b 04       		.uleb128 0x4
 1694 006c FF020000 		.4byte	.LASF9
 1695 0070 02       		.byte	0x2
 1696 0071 B3       		.byte	0xb3
 1697 0072 2C000000 		.4byte	0x2c
 1698 0076 04       		.uleb128 0x4
 1699 0077 00000000 		.4byte	.LASF10
 1700 007b 02       		.byte	0x2
 1701 007c B4       		.byte	0xb4
 1702 007d 3A000000 		.4byte	0x3a
 1703 0081 04       		.uleb128 0x4
 1704 0082 5B030000 		.4byte	.LASF11
 1705 0086 02       		.byte	0x2
 1706 0087 B5       		.byte	0xb5
 1707 0088 48000000 		.4byte	0x48
 1708 008c 02       		.uleb128 0x2
 1709 008d 04       		.byte	0x4
 1710 008e 04       		.byte	0x4
 1711 008f A1060000 		.4byte	.LASF12
 1712 0093 02       		.uleb128 0x2
 1713 0094 08       		.byte	0x8
 1714 0095 04       		.byte	0x4
 1715 0096 3E030000 		.4byte	.LASF13
 1716 009a 02       		.uleb128 0x2
 1717 009b 01       		.byte	0x1
 1718 009c 08       		.byte	0x8
 1719 009d 18080000 		.4byte	.LASF14
 1720 00a1 02       		.uleb128 0x2
 1721 00a2 04       		.byte	0x4
 1722 00a3 07       		.byte	0x7
 1723 00a4 77050000 		.4byte	.LASF15
 1724 00a8 05       		.uleb128 0x5
 1725 00a9 38       		.byte	0x38
 1726 00aa 03       		.byte	0x3
 1727 00ab 2F       		.byte	0x2f
 1728 00ac 59010000 		.4byte	0x159
 1729 00b0 06       		.uleb128 0x6
 1730 00b1 15060000 		.4byte	.LASF16
 1731 00b5 03       		.byte	0x3
 1732 00b6 31       		.byte	0x31
 1733 00b7 59010000 		.4byte	0x159
 1734 00bb 00       		.byte	0
 1735 00bc 06       		.uleb128 0x6
 1736 00bd 24060000 		.4byte	.LASF17
 1737 00c1 03       		.byte	0x3
 1738 00c2 32       		.byte	0x32
 1739 00c3 59010000 		.4byte	0x159
 1740 00c7 04       		.byte	0x4
 1741 00c8 06       		.uleb128 0x6
 1742 00c9 8B040000 		.4byte	.LASF18
 1743 00cd 03       		.byte	0x3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 83


 1744 00ce 33       		.byte	0x33
 1745 00cf 59010000 		.4byte	0x159
 1746 00d3 08       		.byte	0x8
 1747 00d4 06       		.uleb128 0x6
 1748 00d5 F7040000 		.4byte	.LASF19
 1749 00d9 03       		.byte	0x3
 1750 00da 34       		.byte	0x34
 1751 00db 59010000 		.4byte	0x159
 1752 00df 0C       		.byte	0xc
 1753 00e0 06       		.uleb128 0x6
 1754 00e1 59070000 		.4byte	.LASF20
 1755 00e5 03       		.byte	0x3
 1756 00e6 35       		.byte	0x35
 1757 00e7 59010000 		.4byte	0x159
 1758 00eb 10       		.byte	0x10
 1759 00ec 06       		.uleb128 0x6
 1760 00ed A6020000 		.4byte	.LASF21
 1761 00f1 03       		.byte	0x3
 1762 00f2 36       		.byte	0x36
 1763 00f3 5F010000 		.4byte	0x15f
 1764 00f7 14       		.byte	0x14
 1765 00f8 06       		.uleb128 0x6
 1766 00f9 43040000 		.4byte	.LASF22
 1767 00fd 03       		.byte	0x3
 1768 00fe 37       		.byte	0x37
 1769 00ff 6A010000 		.4byte	0x16a
 1770 0103 18       		.byte	0x18
 1771 0104 06       		.uleb128 0x6
 1772 0105 B7090000 		.4byte	.LASF23
 1773 0109 03       		.byte	0x3
 1774 010a 38       		.byte	0x38
 1775 010b 5F010000 		.4byte	0x15f
 1776 010f 1C       		.byte	0x1c
 1777 0110 06       		.uleb128 0x6
 1778 0111 96020000 		.4byte	.LASF24
 1779 0115 03       		.byte	0x3
 1780 0116 39       		.byte	0x39
 1781 0117 5F010000 		.4byte	0x15f
 1782 011b 20       		.byte	0x20
 1783 011c 06       		.uleb128 0x6
 1784 011d 1F010000 		.4byte	.LASF25
 1785 0121 03       		.byte	0x3
 1786 0122 3A       		.byte	0x3a
 1787 0123 7F010000 		.4byte	0x17f
 1788 0127 24       		.byte	0x24
 1789 0128 06       		.uleb128 0x6
 1790 0129 8A080000 		.4byte	.LASF26
 1791 012d 03       		.byte	0x3
 1792 012e 3B       		.byte	0x3b
 1793 012f 90010000 		.4byte	0x190
 1794 0133 28       		.byte	0x28
 1795 0134 06       		.uleb128 0x6
 1796 0135 0F070000 		.4byte	.LASF27
 1797 0139 03       		.byte	0x3
 1798 013a 3C       		.byte	0x3c
 1799 013b 7F010000 		.4byte	0x17f
 1800 013f 2C       		.byte	0x2c
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 84


 1801 0140 06       		.uleb128 0x6
 1802 0141 52040000 		.4byte	.LASF28
 1803 0145 03       		.byte	0x3
 1804 0146 3D       		.byte	0x3d
 1805 0147 AA010000 		.4byte	0x1aa
 1806 014b 30       		.byte	0x30
 1807 014c 06       		.uleb128 0x6
 1808 014d 27090000 		.4byte	.LASF29
 1809 0151 03       		.byte	0x3
 1810 0152 3E       		.byte	0x3e
 1811 0153 C5010000 		.4byte	0x1c5
 1812 0157 34       		.byte	0x34
 1813 0158 00       		.byte	0
 1814 0159 07       		.uleb128 0x7
 1815 015a 04       		.byte	0x4
 1816 015b 6B000000 		.4byte	0x6b
 1817 015f 07       		.uleb128 0x7
 1818 0160 04       		.byte	0x4
 1819 0161 65010000 		.4byte	0x165
 1820 0165 08       		.uleb128 0x8
 1821 0166 6B000000 		.4byte	0x6b
 1822 016a 07       		.uleb128 0x7
 1823 016b 04       		.byte	0x4
 1824 016c 81000000 		.4byte	0x81
 1825 0170 09       		.uleb128 0x9
 1826 0171 76000000 		.4byte	0x76
 1827 0175 7F010000 		.4byte	0x17f
 1828 0179 0A       		.uleb128 0xa
 1829 017a 81000000 		.4byte	0x81
 1830 017e 00       		.byte	0
 1831 017f 07       		.uleb128 0x7
 1832 0180 04       		.byte	0x4
 1833 0181 70010000 		.4byte	0x170
 1834 0185 0B       		.uleb128 0xb
 1835 0186 90010000 		.4byte	0x190
 1836 018a 0A       		.uleb128 0xa
 1837 018b 81000000 		.4byte	0x81
 1838 018f 00       		.byte	0
 1839 0190 07       		.uleb128 0x7
 1840 0191 04       		.byte	0x4
 1841 0192 85010000 		.4byte	0x185
 1842 0196 09       		.uleb128 0x9
 1843 0197 81000000 		.4byte	0x81
 1844 019b AA010000 		.4byte	0x1aa
 1845 019f 0A       		.uleb128 0xa
 1846 01a0 5F010000 		.4byte	0x15f
 1847 01a4 0A       		.uleb128 0xa
 1848 01a5 81000000 		.4byte	0x81
 1849 01a9 00       		.byte	0
 1850 01aa 07       		.uleb128 0x7
 1851 01ab 04       		.byte	0x4
 1852 01ac 96010000 		.4byte	0x196
 1853 01b0 0B       		.uleb128 0xb
 1854 01b1 C5010000 		.4byte	0x1c5
 1855 01b5 0A       		.uleb128 0xa
 1856 01b6 59010000 		.4byte	0x159
 1857 01ba 0A       		.uleb128 0xa
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 85


 1858 01bb 81000000 		.4byte	0x81
 1859 01bf 0A       		.uleb128 0xa
 1860 01c0 81000000 		.4byte	0x81
 1861 01c4 00       		.byte	0
 1862 01c5 07       		.uleb128 0x7
 1863 01c6 04       		.byte	0x4
 1864 01c7 B0010000 		.4byte	0x1b0
 1865 01cb 04       		.uleb128 0x4
 1866 01cc 95080000 		.4byte	.LASF30
 1867 01d0 03       		.byte	0x3
 1868 01d1 3F       		.byte	0x3f
 1869 01d2 A8000000 		.4byte	0xa8
 1870 01d6 05       		.uleb128 0x5
 1871 01d7 0C       		.byte	0xc
 1872 01d8 03       		.byte	0x3
 1873 01d9 41       		.byte	0x41
 1874 01da 27020000 		.4byte	0x227
 1875 01de 06       		.uleb128 0x6
 1876 01df E8080000 		.4byte	.LASF31
 1877 01e3 03       		.byte	0x3
 1878 01e4 43       		.byte	0x43
 1879 01e5 6B000000 		.4byte	0x6b
 1880 01e9 00       		.byte	0
 1881 01ea 06       		.uleb128 0x6
 1882 01eb EA090000 		.4byte	.LASF32
 1883 01ef 03       		.byte	0x3
 1884 01f0 44       		.byte	0x44
 1885 01f1 6B000000 		.4byte	0x6b
 1886 01f5 01       		.byte	0x1
 1887 01f6 06       		.uleb128 0x6
 1888 01f7 AE030000 		.4byte	.LASF33
 1889 01fb 03       		.byte	0x3
 1890 01fc 45       		.byte	0x45
 1891 01fd 6B000000 		.4byte	0x6b
 1892 0201 02       		.byte	0x2
 1893 0202 06       		.uleb128 0x6
 1894 0203 9E030000 		.4byte	.LASF34
 1895 0207 03       		.byte	0x3
 1896 0208 46       		.byte	0x46
 1897 0209 76000000 		.4byte	0x76
 1898 020d 04       		.byte	0x4
 1899 020e 06       		.uleb128 0x6
 1900 020f 69050000 		.4byte	.LASF35
 1901 0213 03       		.byte	0x3
 1902 0214 47       		.byte	0x47
 1903 0215 76000000 		.4byte	0x76
 1904 0219 06       		.byte	0x6
 1905 021a 06       		.uleb128 0x6
 1906 021b 57050000 		.4byte	.LASF36
 1907 021f 03       		.byte	0x3
 1908 0220 48       		.byte	0x48
 1909 0221 27020000 		.4byte	0x227
 1910 0225 08       		.byte	0x8
 1911 0226 00       		.byte	0
 1912 0227 07       		.uleb128 0x7
 1913 0228 04       		.byte	0x4
 1914 0229 2D020000 		.4byte	0x22d
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 86


 1915 022d 08       		.uleb128 0x8
 1916 022e CB010000 		.4byte	0x1cb
 1917 0232 04       		.uleb128 0x4
 1918 0233 85070000 		.4byte	.LASF37
 1919 0237 03       		.byte	0x3
 1920 0238 49       		.byte	0x49
 1921 0239 D6010000 		.4byte	0x1d6
 1922 023d 0C       		.uleb128 0xc
 1923 023e 73070000 		.4byte	.LASF38
 1924 0242 01       		.byte	0x1
 1925 0243 9E       		.byte	0x9e
 1926 0244 00000000 		.4byte	.LFB34
 1927 0248 40000000 		.4byte	.LFE34-.LFB34
 1928 024c 01       		.uleb128 0x1
 1929 024d 9C       		.byte	0x9c
 1930 024e 71020000 		.4byte	0x271
 1931 0252 0D       		.uleb128 0xd
 1932 0253 9A040000 		.4byte	.LASF40
 1933 0257 01       		.byte	0x1
 1934 0258 9E       		.byte	0x9e
 1935 0259 81000000 		.4byte	0x81
 1936 025d 00000000 		.4byte	.LLST0
 1937 0261 0E       		.uleb128 0xe
 1938 0262 52070000 		.4byte	.LASF42
 1939 0266 01       		.byte	0x1
 1940 0267 A2       		.byte	0xa2
 1941 0268 6B000000 		.4byte	0x6b
 1942 026c 21000000 		.4byte	.LLST1
 1943 0270 00       		.byte	0
 1944 0271 0C       		.uleb128 0xc
 1945 0272 B9050000 		.4byte	.LASF39
 1946 0276 01       		.byte	0x1
 1947 0277 EA       		.byte	0xea
 1948 0278 00000000 		.4byte	.LFB35
 1949 027c 18000000 		.4byte	.LFE35-.LFB35
 1950 0280 01       		.uleb128 0x1
 1951 0281 9C       		.byte	0x9c
 1952 0282 C3020000 		.4byte	0x2c3
 1953 0286 0D       		.uleb128 0xd
 1954 0287 9A040000 		.4byte	.LASF40
 1955 028b 01       		.byte	0x1
 1956 028c EA       		.byte	0xea
 1957 028d 81000000 		.4byte	0x81
 1958 0291 5C000000 		.4byte	.LLST2
 1959 0295 0F       		.uleb128 0xf
 1960 0296 08000000 		.4byte	.LVL6
 1961 029a 3B0D0000 		.4byte	0xd3b
 1962 029e A9020000 		.4byte	0x2a9
 1963 02a2 10       		.uleb128 0x10
 1964 02a3 01       		.uleb128 0x1
 1965 02a4 50       		.byte	0x50
 1966 02a5 02       		.uleb128 0x2
 1967 02a6 74       		.byte	0x74
 1968 02a7 00       		.sleb128 0
 1969 02a8 00       		.byte	0
 1970 02a9 11       		.uleb128 0x11
 1971 02aa 0C000000 		.4byte	.LVL7
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 87


 1972 02ae 4C0D0000 		.4byte	0xd4c
 1973 02b2 12       		.uleb128 0x12
 1974 02b3 16000000 		.4byte	.LVL8
 1975 02b7 3D020000 		.4byte	0x23d
 1976 02bb 10       		.uleb128 0x10
 1977 02bc 01       		.uleb128 0x1
 1978 02bd 50       		.byte	0x50
 1979 02be 02       		.uleb128 0x2
 1980 02bf 74       		.byte	0x74
 1981 02c0 00       		.sleb128 0
 1982 02c1 00       		.byte	0
 1983 02c2 00       		.byte	0
 1984 02c3 13       		.uleb128 0x13
 1985 02c4 EF060000 		.4byte	.LASF41
 1986 02c8 01       		.byte	0x1
 1987 02c9 0F01     		.2byte	0x10f
 1988 02cb 00000000 		.4byte	.LFB36
 1989 02cf 14000000 		.4byte	.LFE36-.LFB36
 1990 02d3 01       		.uleb128 0x1
 1991 02d4 9C       		.byte	0x9c
 1992 02d5 F8020000 		.4byte	0x2f8
 1993 02d9 14       		.uleb128 0x14
 1994 02da 6900     		.ascii	"i\000"
 1995 02dc 01       		.byte	0x1
 1996 02dd 1101     		.2byte	0x111
 1997 02df 81000000 		.4byte	0x81
 1998 02e3 88000000 		.4byte	.LLST3
 1999 02e7 12       		.uleb128 0x12
 2000 02e8 0C000000 		.4byte	.LVL12
 2001 02ec 71020000 		.4byte	0x271
 2002 02f0 10       		.uleb128 0x10
 2003 02f1 01       		.uleb128 0x1
 2004 02f2 50       		.byte	0x50
 2005 02f3 02       		.uleb128 0x2
 2006 02f4 74       		.byte	0x74
 2007 02f5 00       		.sleb128 0
 2008 02f6 00       		.byte	0
 2009 02f7 00       		.byte	0
 2010 02f8 13       		.uleb128 0x13
 2011 02f9 18020000 		.4byte	.LASF43
 2012 02fd 01       		.byte	0x1
 2013 02fe 3201     		.2byte	0x132
 2014 0300 00000000 		.4byte	.LFB37
 2015 0304 34000000 		.4byte	.LFE37-.LFB37
 2016 0308 01       		.uleb128 0x1
 2017 0309 9C       		.byte	0x9c
 2018 030a 69030000 		.4byte	0x369
 2019 030e 14       		.uleb128 0x14
 2020 030f 6900     		.ascii	"i\000"
 2021 0311 01       		.byte	0x1
 2022 0312 3401     		.2byte	0x134
 2023 0314 81000000 		.4byte	0x81
 2024 0318 A7000000 		.4byte	.LLST4
 2025 031c 15       		.uleb128 0x15
 2026 031d 63070000 		.4byte	.LASF44
 2027 0321 01       		.byte	0x1
 2028 0322 3501     		.2byte	0x135
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 88


 2029 0324 81000000 		.4byte	0x81
 2030 0328 BA000000 		.4byte	.LLST5
 2031 032c 11       		.uleb128 0x11
 2032 032d 06000000 		.4byte	.LVL15
 2033 0331 570D0000 		.4byte	0xd57
 2034 0335 11       		.uleb128 0x11
 2035 0336 0A000000 		.4byte	.LVL16
 2036 033a 4C0D0000 		.4byte	0xd4c
 2037 033e 0F       		.uleb128 0xf
 2038 033f 1C000000 		.4byte	.LVL18
 2039 0343 5E0D0000 		.4byte	0xd5e
 2040 0347 58030000 		.4byte	0x358
 2041 034b 10       		.uleb128 0x10
 2042 034c 01       		.uleb128 0x1
 2043 034d 51       		.byte	0x51
 2044 034e 02       		.uleb128 0x2
 2045 034f 74       		.byte	0x74
 2046 0350 00       		.sleb128 0
 2047 0351 10       		.uleb128 0x10
 2048 0352 01       		.uleb128 0x1
 2049 0353 50       		.byte	0x50
 2050 0354 02       		.uleb128 0x2
 2051 0355 75       		.byte	0x75
 2052 0356 00       		.sleb128 0
 2053 0357 00       		.byte	0
 2054 0358 12       		.uleb128 0x12
 2055 0359 26000000 		.4byte	.LVL20
 2056 035d 3D020000 		.4byte	0x23d
 2057 0361 10       		.uleb128 0x10
 2058 0362 01       		.uleb128 0x1
 2059 0363 50       		.byte	0x50
 2060 0364 02       		.uleb128 0x2
 2061 0365 74       		.byte	0x74
 2062 0366 00       		.sleb128 0
 2063 0367 00       		.byte	0
 2064 0368 00       		.byte	0
 2065 0369 16       		.uleb128 0x16
 2066 036a B7020000 		.4byte	.LASF47
 2067 036e 01       		.byte	0x1
 2068 036f C602     		.2byte	0x2c6
 2069 0371 76000000 		.4byte	0x76
 2070 0375 00000000 		.4byte	.LFB42
 2071 0379 0C000000 		.4byte	.LFE42-.LFB42
 2072 037d 01       		.uleb128 0x1
 2073 037e 9C       		.byte	0x9c
 2074 037f 94030000 		.4byte	0x394
 2075 0383 17       		.uleb128 0x17
 2076 0384 9A040000 		.4byte	.LASF40
 2077 0388 01       		.byte	0x1
 2078 0389 C602     		.2byte	0x2c6
 2079 038b 81000000 		.4byte	0x81
 2080 038f CD000000 		.4byte	.LLST6
 2081 0393 00       		.byte	0
 2082 0394 13       		.uleb128 0x13
 2083 0395 20070000 		.4byte	.LASF45
 2084 0399 01       		.byte	0x1
 2085 039a E102     		.2byte	0x2e1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 89


 2086 039c 00000000 		.4byte	.LFB43
 2087 03a0 0C000000 		.4byte	.LFE43-.LFB43
 2088 03a4 01       		.uleb128 0x1
 2089 03a5 9C       		.byte	0x9c
 2090 03a6 C9030000 		.4byte	0x3c9
 2091 03aa 17       		.uleb128 0x17
 2092 03ab 9A040000 		.4byte	.LASF40
 2093 03af 01       		.byte	0x1
 2094 03b0 E102     		.2byte	0x2e1
 2095 03b2 81000000 		.4byte	0x81
 2096 03b6 EE000000 		.4byte	.LLST7
 2097 03ba 18       		.uleb128 0x18
 2098 03bb 73040000 		.4byte	.LASF46
 2099 03bf 01       		.byte	0x1
 2100 03c0 E102     		.2byte	0x2e1
 2101 03c2 76000000 		.4byte	0x76
 2102 03c6 01       		.uleb128 0x1
 2103 03c7 51       		.byte	0x51
 2104 03c8 00       		.byte	0
 2105 03c9 16       		.uleb128 0x16
 2106 03ca 3D050000 		.4byte	.LASF48
 2107 03ce 01       		.byte	0x1
 2108 03cf FC02     		.2byte	0x2fc
 2109 03d1 6B000000 		.4byte	0x6b
 2110 03d5 00000000 		.4byte	.LFB44
 2111 03d9 0C000000 		.4byte	.LFE44-.LFB44
 2112 03dd 01       		.uleb128 0x1
 2113 03de 9C       		.byte	0x9c
 2114 03df F4030000 		.4byte	0x3f4
 2115 03e3 17       		.uleb128 0x17
 2116 03e4 9A040000 		.4byte	.LASF40
 2117 03e8 01       		.byte	0x1
 2118 03e9 FC02     		.2byte	0x2fc
 2119 03eb 81000000 		.4byte	0x81
 2120 03ef 0F010000 		.4byte	.LLST8
 2121 03f3 00       		.byte	0
 2122 03f4 13       		.uleb128 0x13
 2123 03f5 0D090000 		.4byte	.LASF49
 2124 03f9 01       		.byte	0x1
 2125 03fa 1703     		.2byte	0x317
 2126 03fc 00000000 		.4byte	.LFB45
 2127 0400 0C000000 		.4byte	.LFE45-.LFB45
 2128 0404 01       		.uleb128 0x1
 2129 0405 9C       		.byte	0x9c
 2130 0406 27040000 		.4byte	0x427
 2131 040a 18       		.uleb128 0x18
 2132 040b 9A040000 		.4byte	.LASF40
 2133 040f 01       		.byte	0x1
 2134 0410 1703     		.2byte	0x317
 2135 0412 81000000 		.4byte	0x81
 2136 0416 01       		.uleb128 0x1
 2137 0417 50       		.byte	0x50
 2138 0418 18       		.uleb128 0x18
 2139 0419 BE030000 		.4byte	.LASF50
 2140 041d 01       		.byte	0x1
 2141 041e 1703     		.2byte	0x317
 2142 0420 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 90


 2143 0424 01       		.uleb128 0x1
 2144 0425 51       		.byte	0x51
 2145 0426 00       		.byte	0
 2146 0427 16       		.uleb128 0x16
 2147 0428 6E080000 		.4byte	.LASF51
 2148 042c 01       		.byte	0x1
 2149 042d 3203     		.2byte	0x332
 2150 042f 6B000000 		.4byte	0x6b
 2151 0433 00000000 		.4byte	.LFB46
 2152 0437 0C000000 		.4byte	.LFE46-.LFB46
 2153 043b 01       		.uleb128 0x1
 2154 043c 9C       		.byte	0x9c
 2155 043d 52040000 		.4byte	0x452
 2156 0441 17       		.uleb128 0x17
 2157 0442 52070000 		.4byte	.LASF42
 2158 0446 01       		.byte	0x1
 2159 0447 3203     		.2byte	0x332
 2160 0449 81000000 		.4byte	0x81
 2161 044d 30010000 		.4byte	.LLST9
 2162 0451 00       		.byte	0
 2163 0452 16       		.uleb128 0x16
 2164 0453 FD010000 		.4byte	.LASF52
 2165 0457 01       		.byte	0x1
 2166 0458 4D03     		.2byte	0x34d
 2167 045a 6B000000 		.4byte	0x6b
 2168 045e 00000000 		.4byte	.LFB47
 2169 0462 0C000000 		.4byte	.LFE47-.LFB47
 2170 0466 01       		.uleb128 0x1
 2171 0467 9C       		.byte	0x9c
 2172 0468 7D040000 		.4byte	0x47d
 2173 046c 17       		.uleb128 0x17
 2174 046d 52070000 		.4byte	.LASF42
 2175 0471 01       		.byte	0x1
 2176 0472 4D03     		.2byte	0x34d
 2177 0474 81000000 		.4byte	0x81
 2178 0478 51010000 		.4byte	.LLST10
 2179 047c 00       		.byte	0
 2180 047d 16       		.uleb128 0x16
 2181 047e 37080000 		.4byte	.LASF53
 2182 0482 01       		.byte	0x1
 2183 0483 6903     		.2byte	0x369
 2184 0485 6B000000 		.4byte	0x6b
 2185 0489 00000000 		.4byte	.LFB48
 2186 048d 0C000000 		.4byte	.LFE48-.LFB48
 2187 0491 01       		.uleb128 0x1
 2188 0492 9C       		.byte	0x9c
 2189 0493 A8040000 		.4byte	0x4a8
 2190 0497 17       		.uleb128 0x17
 2191 0498 52070000 		.4byte	.LASF42
 2192 049c 01       		.byte	0x1
 2193 049d 6903     		.2byte	0x369
 2194 049f 81000000 		.4byte	0x81
 2195 04a3 72010000 		.4byte	.LLST11
 2196 04a7 00       		.byte	0
 2197 04a8 16       		.uleb128 0x16
 2198 04a9 AB000000 		.4byte	.LASF54
 2199 04ad 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 91


 2200 04ae 8503     		.2byte	0x385
 2201 04b0 6B000000 		.4byte	0x6b
 2202 04b4 00000000 		.4byte	.LFB49
 2203 04b8 0C000000 		.4byte	.LFE49-.LFB49
 2204 04bc 01       		.uleb128 0x1
 2205 04bd 9C       		.byte	0x9c
 2206 04be D3040000 		.4byte	0x4d3
 2207 04c2 17       		.uleb128 0x17
 2208 04c3 52070000 		.4byte	.LASF42
 2209 04c7 01       		.byte	0x1
 2210 04c8 8503     		.2byte	0x385
 2211 04ca 81000000 		.4byte	0x81
 2212 04ce 93010000 		.4byte	.LLST12
 2213 04d2 00       		.byte	0
 2214 04d3 13       		.uleb128 0x13
 2215 04d4 6D030000 		.4byte	.LASF55
 2216 04d8 01       		.byte	0x1
 2217 04d9 A603     		.2byte	0x3a6
 2218 04db 00000000 		.4byte	.LFB50
 2219 04df 0C000000 		.4byte	.LFE50-.LFB50
 2220 04e3 01       		.uleb128 0x1
 2221 04e4 9C       		.byte	0x9c
 2222 04e5 08050000 		.4byte	0x508
 2223 04e9 17       		.uleb128 0x17
 2224 04ea 52070000 		.4byte	.LASF42
 2225 04ee 01       		.byte	0x1
 2226 04ef A603     		.2byte	0x3a6
 2227 04f1 81000000 		.4byte	0x81
 2228 04f5 B4010000 		.4byte	.LLST13
 2229 04f9 18       		.uleb128 0x18
 2230 04fa BE030000 		.4byte	.LASF50
 2231 04fe 01       		.byte	0x1
 2232 04ff A603     		.2byte	0x3a6
 2233 0501 6B000000 		.4byte	0x6b
 2234 0505 01       		.uleb128 0x1
 2235 0506 51       		.byte	0x51
 2236 0507 00       		.byte	0
 2237 0508 13       		.uleb128 0x13
 2238 0509 D1070000 		.4byte	.LASF56
 2239 050d 01       		.byte	0x1
 2240 050e C203     		.2byte	0x3c2
 2241 0510 00000000 		.4byte	.LFB51
 2242 0514 0C000000 		.4byte	.LFE51-.LFB51
 2243 0518 01       		.uleb128 0x1
 2244 0519 9C       		.byte	0x9c
 2245 051a 3B050000 		.4byte	0x53b
 2246 051e 18       		.uleb128 0x18
 2247 051f 52070000 		.4byte	.LASF42
 2248 0523 01       		.byte	0x1
 2249 0524 C203     		.2byte	0x3c2
 2250 0526 81000000 		.4byte	0x81
 2251 052a 01       		.uleb128 0x1
 2252 052b 50       		.byte	0x50
 2253 052c 18       		.uleb128 0x18
 2254 052d BE030000 		.4byte	.LASF50
 2255 0531 01       		.byte	0x1
 2256 0532 C203     		.2byte	0x3c2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 92


 2257 0534 6B000000 		.4byte	0x6b
 2258 0538 01       		.uleb128 0x1
 2259 0539 51       		.byte	0x51
 2260 053a 00       		.byte	0
 2261 053b 13       		.uleb128 0x13
 2262 053c DB050000 		.4byte	.LASF57
 2263 0540 01       		.byte	0x1
 2264 0541 DE03     		.2byte	0x3de
 2265 0543 00000000 		.4byte	.LFB52
 2266 0547 0C000000 		.4byte	.LFE52-.LFB52
 2267 054b 01       		.uleb128 0x1
 2268 054c 9C       		.byte	0x9c
 2269 054d 6E050000 		.4byte	0x56e
 2270 0551 18       		.uleb128 0x18
 2271 0552 52070000 		.4byte	.LASF42
 2272 0556 01       		.byte	0x1
 2273 0557 DE03     		.2byte	0x3de
 2274 0559 81000000 		.4byte	0x81
 2275 055d 01       		.uleb128 0x1
 2276 055e 50       		.byte	0x50
 2277 055f 18       		.uleb128 0x18
 2278 0560 BE030000 		.4byte	.LASF50
 2279 0564 01       		.byte	0x1
 2280 0565 DE03     		.2byte	0x3de
 2281 0567 6B000000 		.4byte	0x6b
 2282 056b 01       		.uleb128 0x1
 2283 056c 51       		.byte	0x51
 2284 056d 00       		.byte	0
 2285 056e 13       		.uleb128 0x13
 2286 056f DE000000 		.4byte	.LASF58
 2287 0573 01       		.byte	0x1
 2288 0574 FB03     		.2byte	0x3fb
 2289 0576 00000000 		.4byte	.LFB53
 2290 057a 0C000000 		.4byte	.LFE53-.LFB53
 2291 057e 01       		.uleb128 0x1
 2292 057f 9C       		.byte	0x9c
 2293 0580 A1050000 		.4byte	0x5a1
 2294 0584 18       		.uleb128 0x18
 2295 0585 52070000 		.4byte	.LASF42
 2296 0589 01       		.byte	0x1
 2297 058a FB03     		.2byte	0x3fb
 2298 058c 81000000 		.4byte	0x81
 2299 0590 01       		.uleb128 0x1
 2300 0591 50       		.byte	0x50
 2301 0592 18       		.uleb128 0x18
 2302 0593 BE030000 		.4byte	.LASF50
 2303 0597 01       		.byte	0x1
 2304 0598 FB03     		.2byte	0x3fb
 2305 059a 6B000000 		.4byte	0x6b
 2306 059e 01       		.uleb128 0x1
 2307 059f 51       		.byte	0x51
 2308 05a0 00       		.byte	0
 2309 05a1 13       		.uleb128 0x13
 2310 05a2 89030000 		.4byte	.LASF59
 2311 05a6 01       		.byte	0x1
 2312 05a7 1704     		.2byte	0x417
 2313 05a9 00000000 		.4byte	.LFB54
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 93


 2314 05ad 0C000000 		.4byte	.LFE54-.LFB54
 2315 05b1 01       		.uleb128 0x1
 2316 05b2 9C       		.byte	0x9c
 2317 05b3 D4050000 		.4byte	0x5d4
 2318 05b7 18       		.uleb128 0x18
 2319 05b8 52070000 		.4byte	.LASF42
 2320 05bc 01       		.byte	0x1
 2321 05bd 1704     		.2byte	0x417
 2322 05bf 81000000 		.4byte	0x81
 2323 05c3 01       		.uleb128 0x1
 2324 05c4 50       		.byte	0x50
 2325 05c5 18       		.uleb128 0x18
 2326 05c6 BE030000 		.4byte	.LASF50
 2327 05ca 01       		.byte	0x1
 2328 05cb 1704     		.2byte	0x417
 2329 05cd 6B000000 		.4byte	0x6b
 2330 05d1 01       		.uleb128 0x1
 2331 05d2 51       		.byte	0x51
 2332 05d3 00       		.byte	0
 2333 05d4 13       		.uleb128 0x13
 2334 05d5 C4030000 		.4byte	.LASF60
 2335 05d9 01       		.byte	0x1
 2336 05da 3304     		.2byte	0x433
 2337 05dc 00000000 		.4byte	.LFB55
 2338 05e0 0C000000 		.4byte	.LFE55-.LFB55
 2339 05e4 01       		.uleb128 0x1
 2340 05e5 9C       		.byte	0x9c
 2341 05e6 09060000 		.4byte	0x609
 2342 05ea 17       		.uleb128 0x17
 2343 05eb 9A040000 		.4byte	.LASF40
 2344 05ef 01       		.byte	0x1
 2345 05f0 3304     		.2byte	0x433
 2346 05f2 81000000 		.4byte	0x81
 2347 05f6 D5010000 		.4byte	.LLST14
 2348 05fa 18       		.uleb128 0x18
 2349 05fb BE030000 		.4byte	.LASF50
 2350 05ff 01       		.byte	0x1
 2351 0600 3304     		.2byte	0x433
 2352 0602 6B000000 		.4byte	0x6b
 2353 0606 01       		.uleb128 0x1
 2354 0607 51       		.byte	0x51
 2355 0608 00       		.byte	0
 2356 0609 16       		.uleb128 0x16
 2357 060a F8050000 		.4byte	.LASF61
 2358 060e 01       		.byte	0x1
 2359 060f 6104     		.2byte	0x461
 2360 0611 81000000 		.4byte	0x81
 2361 0615 00000000 		.4byte	.LFB56
 2362 0619 A8000000 		.4byte	.LFE56-.LFB56
 2363 061d 01       		.uleb128 0x1
 2364 061e 9C       		.byte	0x9c
 2365 061f F4060000 		.4byte	0x6f4
 2366 0623 17       		.uleb128 0x17
 2367 0624 9A040000 		.4byte	.LASF40
 2368 0628 01       		.byte	0x1
 2369 0629 6104     		.2byte	0x461
 2370 062b 81000000 		.4byte	0x81
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 94


 2371 062f F6010000 		.4byte	.LLST15
 2372 0633 19       		.uleb128 0x19
 2373 0634 52070000 		.4byte	.LASF42
 2374 0638 01       		.byte	0x1
 2375 0639 6304     		.2byte	0x463
 2376 063b 6B000000 		.4byte	0x6b
 2377 063f 15       		.uleb128 0x15
 2378 0640 60050000 		.4byte	.LASF62
 2379 0644 01       		.byte	0x1
 2380 0645 6404     		.2byte	0x464
 2381 0647 6B000000 		.4byte	0x6b
 2382 064b 22020000 		.4byte	.LLST16
 2383 064f 19       		.uleb128 0x19
 2384 0650 60080000 		.4byte	.LASF63
 2385 0654 01       		.byte	0x1
 2386 0655 6504     		.2byte	0x465
 2387 0657 6B000000 		.4byte	0x6b
 2388 065b 15       		.uleb128 0x15
 2389 065c CE000000 		.4byte	.LASF64
 2390 0660 01       		.byte	0x1
 2391 0661 6704     		.2byte	0x467
 2392 0663 6B000000 		.4byte	0x6b
 2393 0667 47020000 		.4byte	.LLST17
 2394 066b 15       		.uleb128 0x15
 2395 066c 62030000 		.4byte	.LASF65
 2396 0670 01       		.byte	0x1
 2397 0671 6804     		.2byte	0x468
 2398 0673 6B000000 		.4byte	0x6b
 2399 0677 89020000 		.4byte	.LLST18
 2400 067b 0F       		.uleb128 0xf
 2401 067c 24000000 		.4byte	.LVL53
 2402 0680 5E0D0000 		.4byte	0xd5e
 2403 0684 98060000 		.4byte	0x698
 2404 0688 10       		.uleb128 0x10
 2405 0689 01       		.uleb128 0x1
 2406 068a 51       		.byte	0x51
 2407 068b 02       		.uleb128 0x2
 2408 068c 74       		.byte	0x74
 2409 068d 00       		.sleb128 0
 2410 068e 10       		.uleb128 0x10
 2411 068f 01       		.uleb128 0x1
 2412 0690 50       		.byte	0x50
 2413 0691 05       		.uleb128 0x5
 2414 0692 03       		.byte	0x3
 2415 0693 40000000 		.4byte	.LANCHOR0+64
 2416 0697 00       		.byte	0
 2417 0698 0F       		.uleb128 0xf
 2418 0699 42000000 		.4byte	.LVL55
 2419 069d 780D0000 		.4byte	0xd78
 2420 06a1 B8060000 		.4byte	0x6b8
 2421 06a5 10       		.uleb128 0x10
 2422 06a6 01       		.uleb128 0x1
 2423 06a7 52       		.byte	0x52
 2424 06a8 01       		.uleb128 0x1
 2425 06a9 30       		.byte	0x30
 2426 06aa 10       		.uleb128 0x10
 2427 06ab 01       		.uleb128 0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 95


 2428 06ac 51       		.byte	0x51
 2429 06ad 02       		.uleb128 0x2
 2430 06ae 74       		.byte	0x74
 2431 06af 00       		.sleb128 0
 2432 06b0 10       		.uleb128 0x10
 2433 06b1 01       		.uleb128 0x1
 2434 06b2 50       		.byte	0x50
 2435 06b3 03       		.uleb128 0x3
 2436 06b4 76       		.byte	0x76
 2437 06b5 C000     		.sleb128 64
 2438 06b7 00       		.byte	0
 2439 06b8 0F       		.uleb128 0xf
 2440 06b9 72000000 		.4byte	.LVL58
 2441 06bd 780D0000 		.4byte	0xd78
 2442 06c1 DA060000 		.4byte	0x6da
 2443 06c5 10       		.uleb128 0x10
 2444 06c6 01       		.uleb128 0x1
 2445 06c7 52       		.byte	0x52
 2446 06c8 01       		.uleb128 0x1
 2447 06c9 31       		.byte	0x31
 2448 06ca 10       		.uleb128 0x10
 2449 06cb 01       		.uleb128 0x1
 2450 06cc 51       		.byte	0x51
 2451 06cd 02       		.uleb128 0x2
 2452 06ce 74       		.byte	0x74
 2453 06cf 00       		.sleb128 0
 2454 06d0 10       		.uleb128 0x10
 2455 06d1 01       		.uleb128 0x1
 2456 06d2 50       		.byte	0x50
 2457 06d3 05       		.uleb128 0x5
 2458 06d4 03       		.byte	0x3
 2459 06d5 40000000 		.4byte	.LANCHOR0+64
 2460 06d9 00       		.byte	0
 2461 06da 12       		.uleb128 0x12
 2462 06db 86000000 		.4byte	.LVL59
 2463 06df 5E0D0000 		.4byte	0xd5e
 2464 06e3 10       		.uleb128 0x10
 2465 06e4 01       		.uleb128 0x1
 2466 06e5 51       		.byte	0x51
 2467 06e6 02       		.uleb128 0x2
 2468 06e7 74       		.byte	0x74
 2469 06e8 00       		.sleb128 0
 2470 06e9 10       		.uleb128 0x10
 2471 06ea 01       		.uleb128 0x1
 2472 06eb 50       		.byte	0x50
 2473 06ec 05       		.uleb128 0x5
 2474 06ed 03       		.byte	0x3
 2475 06ee 40000000 		.4byte	.LANCHOR0+64
 2476 06f2 00       		.byte	0
 2477 06f3 00       		.byte	0
 2478 06f4 16       		.uleb128 0x16
 2479 06f5 C4060000 		.4byte	.LASF66
 2480 06f9 01       		.byte	0x1
 2481 06fa B304     		.2byte	0x4b3
 2482 06fc 81000000 		.4byte	0x81
 2483 0700 00000000 		.4byte	.LFB57
 2484 0704 2C000000 		.4byte	.LFE57-.LFB57
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 96


 2485 0708 01       		.uleb128 0x1
 2486 0709 9C       		.byte	0x9c
 2487 070a 5F070000 		.4byte	0x75f
 2488 070e 17       		.uleb128 0x17
 2489 070f 52070000 		.4byte	.LASF42
 2490 0713 01       		.byte	0x1
 2491 0714 B304     		.2byte	0x4b3
 2492 0716 81000000 		.4byte	0x81
 2493 071a B6020000 		.4byte	.LLST19
 2494 071e 15       		.uleb128 0x15
 2495 071f 8D020000 		.4byte	.LASF67
 2496 0723 01       		.byte	0x1
 2497 0724 B504     		.2byte	0x4b5
 2498 0726 81000000 		.4byte	0x81
 2499 072a D7020000 		.4byte	.LLST20
 2500 072e 15       		.uleb128 0x15
 2501 072f DB080000 		.4byte	.LASF68
 2502 0733 01       		.byte	0x1
 2503 0734 B604     		.2byte	0x4b6
 2504 0736 81000000 		.4byte	0x81
 2505 073a EA020000 		.4byte	.LLST21
 2506 073e 15       		.uleb128 0x15
 2507 073f D0020000 		.4byte	.LASF69
 2508 0743 01       		.byte	0x1
 2509 0744 B704     		.2byte	0x4b7
 2510 0746 81000000 		.4byte	0x81
 2511 074a 25030000 		.4byte	.LLST22
 2512 074e 12       		.uleb128 0x12
 2513 074f 16000000 		.4byte	.LVL68
 2514 0753 09060000 		.4byte	0x609
 2515 0757 10       		.uleb128 0x10
 2516 0758 01       		.uleb128 0x1
 2517 0759 50       		.byte	0x50
 2518 075a 02       		.uleb128 0x2
 2519 075b 74       		.byte	0x74
 2520 075c 00       		.sleb128 0
 2521 075d 00       		.byte	0
 2522 075e 00       		.byte	0
 2523 075f 16       		.uleb128 0x16
 2524 0760 DF020000 		.4byte	.LASF70
 2525 0764 01       		.byte	0x1
 2526 0765 E104     		.2byte	0x4e1
 2527 0767 81000000 		.4byte	0x81
 2528 076b 00000000 		.4byte	.LFB58
 2529 076f 20000000 		.4byte	.LFE58-.LFB58
 2530 0773 01       		.uleb128 0x1
 2531 0774 9C       		.byte	0x9c
 2532 0775 A8070000 		.4byte	0x7a8
 2533 0779 14       		.uleb128 0x14
 2534 077a 6900     		.ascii	"i\000"
 2535 077c 01       		.byte	0x1
 2536 077d E404     		.2byte	0x4e4
 2537 077f 81000000 		.4byte	0x81
 2538 0783 4F030000 		.4byte	.LLST23
 2539 0787 15       		.uleb128 0x15
 2540 0788 D0020000 		.4byte	.LASF69
 2541 078c 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 97


 2542 078d E504     		.2byte	0x4e5
 2543 078f 81000000 		.4byte	0x81
 2544 0793 6E030000 		.4byte	.LLST24
 2545 0797 12       		.uleb128 0x12
 2546 0798 10000000 		.4byte	.LVL76
 2547 079c F4060000 		.4byte	0x6f4
 2548 07a0 10       		.uleb128 0x10
 2549 07a1 01       		.uleb128 0x1
 2550 07a2 50       		.byte	0x50
 2551 07a3 02       		.uleb128 0x2
 2552 07a4 74       		.byte	0x74
 2553 07a5 00       		.sleb128 0
 2554 07a6 00       		.byte	0
 2555 07a7 00       		.byte	0
 2556 07a8 13       		.uleb128 0x13
 2557 07a9 80050000 		.4byte	.LASF71
 2558 07ad 01       		.byte	0x1
 2559 07ae 1005     		.2byte	0x510
 2560 07b0 00000000 		.4byte	.LFB59
 2561 07b4 2C000000 		.4byte	.LFE59-.LFB59
 2562 07b8 01       		.uleb128 0x1
 2563 07b9 9C       		.byte	0x9c
 2564 07ba 0A080000 		.4byte	0x80a
 2565 07be 17       		.uleb128 0x17
 2566 07bf 52070000 		.4byte	.LASF42
 2567 07c3 01       		.byte	0x1
 2568 07c4 1005     		.2byte	0x510
 2569 07c6 81000000 		.4byte	0x81
 2570 07ca 98030000 		.4byte	.LLST25
 2571 07ce 15       		.uleb128 0x15
 2572 07cf 8D020000 		.4byte	.LASF67
 2573 07d3 01       		.byte	0x1
 2574 07d4 1305     		.2byte	0x513
 2575 07d6 6B000000 		.4byte	0x6b
 2576 07da B9030000 		.4byte	.LLST26
 2577 07de 15       		.uleb128 0x15
 2578 07df DB080000 		.4byte	.LASF68
 2579 07e3 01       		.byte	0x1
 2580 07e4 1405     		.2byte	0x514
 2581 07e6 6B000000 		.4byte	0x6b
 2582 07ea FF030000 		.4byte	.LLST27
 2583 07ee 12       		.uleb128 0x12
 2584 07ef 1A000000 		.4byte	.LVL86
 2585 07f3 780D0000 		.4byte	0xd78
 2586 07f7 10       		.uleb128 0x10
 2587 07f8 01       		.uleb128 0x1
 2588 07f9 52       		.byte	0x52
 2589 07fa 01       		.uleb128 0x1
 2590 07fb 31       		.byte	0x31
 2591 07fc 10       		.uleb128 0x10
 2592 07fd 01       		.uleb128 0x1
 2593 07fe 51       		.byte	0x51
 2594 07ff 02       		.uleb128 0x2
 2595 0800 74       		.byte	0x74
 2596 0801 00       		.sleb128 0
 2597 0802 10       		.uleb128 0x10
 2598 0803 01       		.uleb128 0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 98


 2599 0804 50       		.byte	0x50
 2600 0805 02       		.uleb128 0x2
 2601 0806 75       		.byte	0x75
 2602 0807 00       		.sleb128 0
 2603 0808 00       		.byte	0
 2604 0809 00       		.byte	0
 2605 080a 13       		.uleb128 0x13
 2606 080b 76020000 		.4byte	.LASF72
 2607 080f 01       		.byte	0x1
 2608 0810 3B05     		.2byte	0x53b
 2609 0812 00000000 		.4byte	.LFB60
 2610 0816 2C000000 		.4byte	.LFE60-.LFB60
 2611 081a 01       		.uleb128 0x1
 2612 081b 9C       		.byte	0x9c
 2613 081c 6C080000 		.4byte	0x86c
 2614 0820 17       		.uleb128 0x17
 2615 0821 52070000 		.4byte	.LASF42
 2616 0825 01       		.byte	0x1
 2617 0826 3B05     		.2byte	0x53b
 2618 0828 81000000 		.4byte	0x81
 2619 082c 3A040000 		.4byte	.LLST28
 2620 0830 15       		.uleb128 0x15
 2621 0831 8D020000 		.4byte	.LASF67
 2622 0835 01       		.byte	0x1
 2623 0836 3D05     		.2byte	0x53d
 2624 0838 6B000000 		.4byte	0x6b
 2625 083c 5B040000 		.4byte	.LLST29
 2626 0840 15       		.uleb128 0x15
 2627 0841 DB080000 		.4byte	.LASF68
 2628 0845 01       		.byte	0x1
 2629 0846 3E05     		.2byte	0x53e
 2630 0848 6B000000 		.4byte	0x6b
 2631 084c A1040000 		.4byte	.LLST30
 2632 0850 12       		.uleb128 0x12
 2633 0851 1A000000 		.4byte	.LVL96
 2634 0855 780D0000 		.4byte	0xd78
 2635 0859 10       		.uleb128 0x10
 2636 085a 01       		.uleb128 0x1
 2637 085b 52       		.byte	0x52
 2638 085c 01       		.uleb128 0x1
 2639 085d 30       		.byte	0x30
 2640 085e 10       		.uleb128 0x10
 2641 085f 01       		.uleb128 0x1
 2642 0860 51       		.byte	0x51
 2643 0861 02       		.uleb128 0x2
 2644 0862 74       		.byte	0x74
 2645 0863 00       		.sleb128 0
 2646 0864 10       		.uleb128 0x10
 2647 0865 01       		.uleb128 0x1
 2648 0866 50       		.byte	0x50
 2649 0867 02       		.uleb128 0x2
 2650 0868 75       		.byte	0x75
 2651 0869 00       		.sleb128 0
 2652 086a 00       		.byte	0
 2653 086b 00       		.byte	0
 2654 086c 16       		.uleb128 0x16
 2655 086d 3E010000 		.4byte	.LASF73
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 99


 2656 0871 01       		.byte	0x1
 2657 0872 5709     		.2byte	0x957
 2658 0874 76000000 		.4byte	0x76
 2659 0878 00000000 		.4byte	.LFB61
 2660 087c 1C000000 		.4byte	.LFE61-.LFB61
 2661 0880 01       		.uleb128 0x1
 2662 0881 9C       		.byte	0x9c
 2663 0882 BE080000 		.4byte	0x8be
 2664 0886 1A       		.uleb128 0x1a
 2665 0887 783100   		.ascii	"x1\000"
 2666 088a 01       		.byte	0x1
 2667 088b 5709     		.2byte	0x957
 2668 088d 76000000 		.4byte	0x76
 2669 0891 DC040000 		.4byte	.LLST31
 2670 0895 1A       		.uleb128 0x1a
 2671 0896 783200   		.ascii	"x2\000"
 2672 0899 01       		.byte	0x1
 2673 089a 5709     		.2byte	0x957
 2674 089c 76000000 		.4byte	0x76
 2675 08a0 08050000 		.4byte	.LLST32
 2676 08a4 1B       		.uleb128 0x1b
 2677 08a5 783300   		.ascii	"x3\000"
 2678 08a8 01       		.byte	0x1
 2679 08a9 5709     		.2byte	0x957
 2680 08ab 76000000 		.4byte	0x76
 2681 08af 01       		.uleb128 0x1
 2682 08b0 52       		.byte	0x52
 2683 08b1 1C       		.uleb128 0x1c
 2684 08b2 746D7000 		.ascii	"tmp\000"
 2685 08b6 01       		.byte	0x1
 2686 08b7 5909     		.2byte	0x959
 2687 08b9 76000000 		.4byte	0x76
 2688 08bd 00       		.byte	0
 2689 08be 16       		.uleb128 0x16
 2690 08bf E1030000 		.4byte	.LASF74
 2691 08c3 01       		.byte	0x1
 2692 08c4 CF09     		.2byte	0x9cf
 2693 08c6 76000000 		.4byte	0x76
 2694 08ca 00000000 		.4byte	.LFB62
 2695 08ce 0A000000 		.4byte	.LFE62-.LFB62
 2696 08d2 01       		.uleb128 0x1
 2697 08d3 9C       		.byte	0x9c
 2698 08d4 07090000 		.4byte	0x907
 2699 08d8 1A       		.uleb128 0x1a
 2700 08d9 783100   		.ascii	"x1\000"
 2701 08dc 01       		.byte	0x1
 2702 08dd CF09     		.2byte	0x9cf
 2703 08df 76000000 		.4byte	0x76
 2704 08e3 26050000 		.4byte	.LLST33
 2705 08e7 1A       		.uleb128 0x1a
 2706 08e8 783200   		.ascii	"x2\000"
 2707 08eb 01       		.byte	0x1
 2708 08ec CF09     		.2byte	0x9cf
 2709 08ee 76000000 		.4byte	0x76
 2710 08f2 47050000 		.4byte	.LLST34
 2711 08f6 14       		.uleb128 0x14
 2712 08f7 746D7000 		.ascii	"tmp\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 100


 2713 08fb 01       		.byte	0x1
 2714 08fc D109     		.2byte	0x9d1
 2715 08fe 81000000 		.4byte	0x81
 2716 0902 68050000 		.4byte	.LLST35
 2717 0906 00       		.byte	0
 2718 0907 13       		.uleb128 0x13
 2719 0908 96050000 		.4byte	.LASF75
 2720 090c 01       		.byte	0x1
 2721 090d 7301     		.2byte	0x173
 2722 090f 00000000 		.4byte	.LFB38
 2723 0913 10010000 		.4byte	.LFE38-.LFB38
 2724 0917 01       		.uleb128 0x1
 2725 0918 9C       		.byte	0x9c
 2726 0919 C2090000 		.4byte	0x9c2
 2727 091d 17       		.uleb128 0x17
 2728 091e 9A040000 		.4byte	.LASF40
 2729 0922 01       		.byte	0x1
 2730 0923 7301     		.2byte	0x173
 2731 0925 81000000 		.4byte	0x81
 2732 0929 95050000 		.4byte	.LLST36
 2733 092d 15       		.uleb128 0x15
 2734 092e F2040000 		.4byte	.LASF76
 2735 0932 01       		.byte	0x1
 2736 0933 7501     		.2byte	0x175
 2737 0935 81000000 		.4byte	0x81
 2738 0939 C1050000 		.4byte	.LLST37
 2739 093d 15       		.uleb128 0x15
 2740 093e D6080000 		.4byte	.LASF77
 2741 0942 01       		.byte	0x1
 2742 0943 7601     		.2byte	0x176
 2743 0945 81000000 		.4byte	0x81
 2744 0949 00060000 		.4byte	.LLST38
 2745 094d 15       		.uleb128 0x15
 2746 094e C4090000 		.4byte	.LASF78
 2747 0952 01       		.byte	0x1
 2748 0953 7701     		.2byte	0x177
 2749 0955 76000000 		.4byte	0x76
 2750 0959 2B060000 		.4byte	.LLST39
 2751 095d 15       		.uleb128 0x15
 2752 095e 07000000 		.4byte	.LASF79
 2753 0962 01       		.byte	0x1
 2754 0963 7801     		.2byte	0x178
 2755 0965 76000000 		.4byte	0x76
 2756 0969 49060000 		.4byte	.LLST40
 2757 096d 19       		.uleb128 0x19
 2758 096e 52070000 		.4byte	.LASF42
 2759 0972 01       		.byte	0x1
 2760 0973 7901     		.2byte	0x179
 2761 0975 6B000000 		.4byte	0x6b
 2762 0979 15       		.uleb128 0x15
 2763 097a 39070000 		.4byte	.LASF80
 2764 097e 01       		.byte	0x1
 2765 097f 7A01     		.2byte	0x17a
 2766 0981 6B000000 		.4byte	0x6b
 2767 0985 A7060000 		.4byte	.LLST41
 2768 0989 0F       		.uleb128 0xf
 2769 098a 36000000 		.4byte	.LVL119
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 101


 2770 098e BE080000 		.4byte	0x8be
 2771 0992 9D090000 		.4byte	0x99d
 2772 0996 10       		.uleb128 0x10
 2773 0997 01       		.uleb128 0x1
 2774 0998 50       		.byte	0x50
 2775 0999 02       		.uleb128 0x2
 2776 099a 75       		.byte	0x75
 2777 099b 00       		.sleb128 0
 2778 099c 00       		.byte	0
 2779 099d 0F       		.uleb128 0xf
 2780 099e 44000000 		.4byte	.LVL122
 2781 09a2 930D0000 		.4byte	0xd93
 2782 09a6 B1090000 		.4byte	0x9b1
 2783 09aa 10       		.uleb128 0x10
 2784 09ab 01       		.uleb128 0x1
 2785 09ac 51       		.byte	0x51
 2786 09ad 02       		.uleb128 0x2
 2787 09ae 74       		.byte	0x74
 2788 09af 00       		.sleb128 0
 2789 09b0 00       		.byte	0
 2790 09b1 12       		.uleb128 0x12
 2791 09b2 84000000 		.4byte	.LVL127
 2792 09b6 3D020000 		.4byte	0x23d
 2793 09ba 10       		.uleb128 0x10
 2794 09bb 01       		.uleb128 0x1
 2795 09bc 50       		.byte	0x50
 2796 09bd 02       		.uleb128 0x2
 2797 09be 74       		.byte	0x74
 2798 09bf 00       		.sleb128 0
 2799 09c0 00       		.byte	0
 2800 09c1 00       		.byte	0
 2801 09c2 13       		.uleb128 0x13
 2802 09c3 D4040000 		.4byte	.LASF81
 2803 09c7 01       		.byte	0x1
 2804 09c8 3202     		.2byte	0x232
 2805 09ca 00000000 		.4byte	.LFB39
 2806 09ce 10000000 		.4byte	.LFE39-.LFB39
 2807 09d2 01       		.uleb128 0x1
 2808 09d3 9C       		.byte	0x9c
 2809 09d4 0D0A0000 		.4byte	0xa0d
 2810 09d8 17       		.uleb128 0x17
 2811 09d9 9A040000 		.4byte	.LASF40
 2812 09dd 01       		.byte	0x1
 2813 09de 3202     		.2byte	0x232
 2814 09e0 81000000 		.4byte	0x81
 2815 09e4 DE060000 		.4byte	.LLST42
 2816 09e8 0F       		.uleb128 0xf
 2817 09e9 08000000 		.4byte	.LVL139
 2818 09ed BF0D0000 		.4byte	0xdbf
 2819 09f1 FC090000 		.4byte	0x9fc
 2820 09f5 10       		.uleb128 0x10
 2821 09f6 01       		.uleb128 0x1
 2822 09f7 50       		.byte	0x50
 2823 09f8 02       		.uleb128 0x2
 2824 09f9 74       		.byte	0x74
 2825 09fa 00       		.sleb128 0
 2826 09fb 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 102


 2827 09fc 12       		.uleb128 0x12
 2828 09fd 0E000000 		.4byte	.LVL140
 2829 0a01 07090000 		.4byte	0x907
 2830 0a05 10       		.uleb128 0x10
 2831 0a06 01       		.uleb128 0x1
 2832 0a07 50       		.byte	0x50
 2833 0a08 02       		.uleb128 0x2
 2834 0a09 74       		.byte	0x74
 2835 0a0a 00       		.sleb128 0
 2836 0a0b 00       		.byte	0
 2837 0a0c 00       		.byte	0
 2838 0a0d 13       		.uleb128 0x13
 2839 0a0e 3C020000 		.4byte	.LASF82
 2840 0a12 01       		.byte	0x1
 2841 0a13 6802     		.2byte	0x268
 2842 0a15 00000000 		.4byte	.LFB40
 2843 0a19 28000000 		.4byte	.LFE40-.LFB40
 2844 0a1d 01       		.uleb128 0x1
 2845 0a1e 9C       		.byte	0x9c
 2846 0a1f 6C0A0000 		.4byte	0xa6c
 2847 0a23 14       		.uleb128 0x14
 2848 0a24 6900     		.ascii	"i\000"
 2849 0a26 01       		.byte	0x1
 2850 0a27 6A02     		.2byte	0x26a
 2851 0a29 81000000 		.4byte	0x81
 2852 0a2d 0A070000 		.4byte	.LLST43
 2853 0a31 15       		.uleb128 0x15
 2854 0a32 63070000 		.4byte	.LASF44
 2855 0a36 01       		.byte	0x1
 2856 0a37 6B02     		.2byte	0x26b
 2857 0a39 81000000 		.4byte	0x81
 2858 0a3d 29070000 		.4byte	.LLST44
 2859 0a41 0F       		.uleb128 0xf
 2860 0a42 10000000 		.4byte	.LVL144
 2861 0a46 5E0D0000 		.4byte	0xd5e
 2862 0a4a 5B0A0000 		.4byte	0xa5b
 2863 0a4e 10       		.uleb128 0x10
 2864 0a4f 01       		.uleb128 0x1
 2865 0a50 51       		.byte	0x51
 2866 0a51 02       		.uleb128 0x2
 2867 0a52 74       		.byte	0x74
 2868 0a53 00       		.sleb128 0
 2869 0a54 10       		.uleb128 0x10
 2870 0a55 01       		.uleb128 0x1
 2871 0a56 50       		.byte	0x50
 2872 0a57 02       		.uleb128 0x2
 2873 0a58 75       		.byte	0x75
 2874 0a59 00       		.sleb128 0
 2875 0a5a 00       		.byte	0
 2876 0a5b 12       		.uleb128 0x12
 2877 0a5c 1A000000 		.4byte	.LVL146
 2878 0a60 C2090000 		.4byte	0x9c2
 2879 0a64 10       		.uleb128 0x10
 2880 0a65 01       		.uleb128 0x1
 2881 0a66 50       		.byte	0x50
 2882 0a67 02       		.uleb128 0x2
 2883 0a68 74       		.byte	0x74
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 103


 2884 0a69 00       		.sleb128 0
 2885 0a6a 00       		.byte	0
 2886 0a6b 00       		.byte	0
 2887 0a6c 13       		.uleb128 0x13
 2888 0a6d 01010000 		.4byte	.LASF83
 2889 0a71 01       		.byte	0x1
 2890 0a72 9502     		.2byte	0x295
 2891 0a74 00000000 		.4byte	.LFB41
 2892 0a78 34000000 		.4byte	.LFE41-.LFB41
 2893 0a7c 01       		.uleb128 0x1
 2894 0a7d 9C       		.byte	0x9c
 2895 0a7e 0B0B0000 		.4byte	0xb0b
 2896 0a82 17       		.uleb128 0x17
 2897 0a83 52070000 		.4byte	.LASF42
 2898 0a87 01       		.byte	0x1
 2899 0a88 9502     		.2byte	0x295
 2900 0a8a 81000000 		.4byte	0x81
 2901 0a8e 3C070000 		.4byte	.LLST45
 2902 0a92 15       		.uleb128 0x15
 2903 0a93 A3070000 		.4byte	.LASF84
 2904 0a97 01       		.byte	0x1
 2905 0a98 9702     		.2byte	0x297
 2906 0a9a 81000000 		.4byte	0x81
 2907 0a9e 5D070000 		.4byte	.LLST46
 2908 0aa2 15       		.uleb128 0x15
 2909 0aa3 54080000 		.4byte	.LASF85
 2910 0aa7 01       		.byte	0x1
 2911 0aa8 9802     		.2byte	0x298
 2912 0aaa 81000000 		.4byte	0x81
 2913 0aae 9B070000 		.4byte	.LLST47
 2914 0ab2 15       		.uleb128 0x15
 2915 0ab3 17000000 		.4byte	.LASF86
 2916 0ab7 01       		.byte	0x1
 2917 0ab8 9902     		.2byte	0x299
 2918 0aba 81000000 		.4byte	0x81
 2919 0abe C7070000 		.4byte	.LLST48
 2920 0ac2 14       		.uleb128 0x14
 2921 0ac3 6900     		.ascii	"i\000"
 2922 0ac5 01       		.byte	0x1
 2923 0ac6 9A02     		.2byte	0x29a
 2924 0ac8 81000000 		.4byte	0x81
 2925 0acc 02080000 		.4byte	.LLST49
 2926 0ad0 15       		.uleb128 0x15
 2927 0ad1 63070000 		.4byte	.LASF44
 2928 0ad5 01       		.byte	0x1
 2929 0ad6 9B02     		.2byte	0x29b
 2930 0ad8 81000000 		.4byte	0x81
 2931 0adc 15080000 		.4byte	.LLST50
 2932 0ae0 0F       		.uleb128 0xf
 2933 0ae1 18000000 		.4byte	.LVL154
 2934 0ae5 5E0D0000 		.4byte	0xd5e
 2935 0ae9 FA0A0000 		.4byte	0xafa
 2936 0aed 10       		.uleb128 0x10
 2937 0aee 01       		.uleb128 0x1
 2938 0aef 51       		.byte	0x51
 2939 0af0 02       		.uleb128 0x2
 2940 0af1 74       		.byte	0x74
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 104


 2941 0af2 00       		.sleb128 0
 2942 0af3 10       		.uleb128 0x10
 2943 0af4 01       		.uleb128 0x1
 2944 0af5 50       		.byte	0x50
 2945 0af6 02       		.uleb128 0x2
 2946 0af7 76       		.byte	0x76
 2947 0af8 00       		.sleb128 0
 2948 0af9 00       		.byte	0
 2949 0afa 12       		.uleb128 0x12
 2950 0afb 22000000 		.4byte	.LVL156
 2951 0aff C2090000 		.4byte	0x9c2
 2952 0b03 10       		.uleb128 0x10
 2953 0b04 01       		.uleb128 0x1
 2954 0b05 50       		.byte	0x50
 2955 0b06 02       		.uleb128 0x2
 2956 0b07 74       		.byte	0x74
 2957 0b08 00       		.sleb128 0
 2958 0b09 00       		.byte	0
 2959 0b0a 00       		.byte	0
 2960 0b0b 16       		.uleb128 0x16
 2961 0b0c 4B090000 		.4byte	.LASF87
 2962 0b10 01       		.byte	0x1
 2963 0b11 B80A     		.2byte	0xab8
 2964 0b13 81000000 		.4byte	0x81
 2965 0b17 00000000 		.4byte	.LFB63
 2966 0b1b 0C000000 		.4byte	.LFE63-.LFB63
 2967 0b1f 01       		.uleb128 0x1
 2968 0b20 9C       		.byte	0x9c
 2969 0b21 360B0000 		.4byte	0xb36
 2970 0b25 17       		.uleb128 0x17
 2971 0b26 9A040000 		.4byte	.LASF40
 2972 0b2a 01       		.byte	0x1
 2973 0b2b B80A     		.2byte	0xab8
 2974 0b2d 81000000 		.4byte	0x81
 2975 0b31 28080000 		.4byte	.LLST51
 2976 0b35 00       		.byte	0
 2977 0b36 16       		.uleb128 0x16
 2978 0b37 A7060000 		.4byte	.LASF88
 2979 0b3b 01       		.byte	0x1
 2980 0b3c D20A     		.2byte	0xad2
 2981 0b3e 6B000000 		.4byte	0x6b
 2982 0b42 00000000 		.4byte	.LFB64
 2983 0b46 0C000000 		.4byte	.LFE64-.LFB64
 2984 0b4a 01       		.uleb128 0x1
 2985 0b4b 9C       		.byte	0x9c
 2986 0b4c 610B0000 		.4byte	0xb61
 2987 0b50 17       		.uleb128 0x17
 2988 0b51 9A040000 		.4byte	.LASF40
 2989 0b55 01       		.byte	0x1
 2990 0b56 D20A     		.2byte	0xad2
 2991 0b58 81000000 		.4byte	0x81
 2992 0b5c 49080000 		.4byte	.LLST52
 2993 0b60 00       		.byte	0
 2994 0b61 16       		.uleb128 0x16
 2995 0b62 29010000 		.4byte	.LASF89
 2996 0b66 01       		.byte	0x1
 2997 0b67 EC0A     		.2byte	0xaec
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 105


 2998 0b69 6B000000 		.4byte	0x6b
 2999 0b6d 00000000 		.4byte	.LFB65
 3000 0b71 0C000000 		.4byte	.LFE65-.LFB65
 3001 0b75 01       		.uleb128 0x1
 3002 0b76 9C       		.byte	0x9c
 3003 0b77 8C0B0000 		.4byte	0xb8c
 3004 0b7b 17       		.uleb128 0x17
 3005 0b7c 52070000 		.4byte	.LASF42
 3006 0b80 01       		.byte	0x1
 3007 0b81 EC0A     		.2byte	0xaec
 3008 0b83 81000000 		.4byte	0x81
 3009 0b87 6A080000 		.4byte	.LLST53
 3010 0b8b 00       		.byte	0
 3011 0b8c 1D       		.uleb128 0x1d
 3012 0b8d 80090000 		.4byte	.LASF90
 3013 0b91 01       		.byte	0x1
 3014 0b92 060B     		.2byte	0xb06
 3015 0b94 00000000 		.4byte	.LFB66
 3016 0b98 10000000 		.4byte	.LFE66-.LFB66
 3017 0b9c 01       		.uleb128 0x1
 3018 0b9d 9C       		.byte	0x9c
 3019 0b9e 1D       		.uleb128 0x1d
 3020 0b9f 1F030000 		.4byte	.LASF91
 3021 0ba3 01       		.byte	0x1
 3022 0ba4 1F0B     		.2byte	0xb1f
 3023 0ba6 00000000 		.4byte	.LFB67
 3024 0baa 10000000 		.4byte	.LFE67-.LFB67
 3025 0bae 01       		.uleb128 0x1
 3026 0baf 9C       		.byte	0x9c
 3027 0bb0 1E       		.uleb128 0x1e
 3028 0bb1 6B000000 		.4byte	0x6b
 3029 0bb5 C00B0000 		.4byte	0xbc0
 3030 0bb9 1F       		.uleb128 0x1f
 3031 0bba A1000000 		.4byte	0xa1
 3032 0bbe 0C       		.byte	0xc
 3033 0bbf 00       		.byte	0
 3034 0bc0 20       		.uleb128 0x20
 3035 0bc1 9E090000 		.4byte	.LASF92
 3036 0bc5 01       		.byte	0x1
 3037 0bc6 57       		.byte	0x57
 3038 0bc7 B00B0000 		.4byte	0xbb0
 3039 0bcb 05       		.uleb128 0x5
 3040 0bcc 03       		.byte	0x3
 3041 0bcd 30000000 		.4byte	CapSense_debounceCounter
 3042 0bd1 1E       		.uleb128 0x1e
 3043 0bd2 76000000 		.4byte	0x76
 3044 0bd6 E10B0000 		.4byte	0xbe1
 3045 0bda 1F       		.uleb128 0x1f
 3046 0bdb A1000000 		.4byte	0xa1
 3047 0bdf 0B       		.byte	0xb
 3048 0be0 00       		.byte	0
 3049 0be1 21       		.uleb128 0x21
 3050 0be2 FA080000 		.4byte	.LASF93
 3051 0be6 01       		.byte	0x1
 3052 0be7 2C       		.byte	0x2c
 3053 0be8 D10B0000 		.4byte	0xbd1
 3054 0bec 1E       		.uleb128 0x1e
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 106


 3055 0bed 6B000000 		.4byte	0x6b
 3056 0bf1 FC0B0000 		.4byte	0xbfc
 3057 0bf5 1F       		.uleb128 0x1f
 3058 0bf6 A1000000 		.4byte	0xa1
 3059 0bfa 01       		.byte	0x1
 3060 0bfb 00       		.byte	0
 3061 0bfc 21       		.uleb128 0x21
 3062 0bfd A1040000 		.4byte	.LASF94
 3063 0c01 01       		.byte	0x1
 3064 0c02 2D       		.byte	0x2d
 3065 0c03 EC0B0000 		.4byte	0xbec
 3066 0c07 1E       		.uleb128 0x1e
 3067 0c08 6B000000 		.4byte	0x6b
 3068 0c0c 170C0000 		.4byte	0xc17
 3069 0c10 1F       		.uleb128 0x1f
 3070 0c11 A1000000 		.4byte	0xa1
 3071 0c15 0B       		.byte	0xb
 3072 0c16 00       		.byte	0
 3073 0c17 21       		.uleb128 0x21
 3074 0c18 45030000 		.4byte	.LASF95
 3075 0c1c 01       		.byte	0x1
 3076 0c1d 2E       		.byte	0x2e
 3077 0c1e 220C0000 		.4byte	0xc22
 3078 0c22 08       		.uleb128 0x8
 3079 0c23 070C0000 		.4byte	0xc07
 3080 0c27 22       		.uleb128 0x22
 3081 0c28 EC070000 		.4byte	.LASF96
 3082 0c2c 01       		.byte	0x1
 3083 0c2d 34       		.byte	0x34
 3084 0c2e D10B0000 		.4byte	0xbd1
 3085 0c32 05       		.uleb128 0x5
 3086 0c33 03       		.byte	0x3
 3087 0c34 00000000 		.4byte	CapSense_sensorBaseline
 3088 0c38 22       		.uleb128 0x22
 3089 0c39 28040000 		.4byte	.LASF97
 3090 0c3d 01       		.byte	0x1
 3091 0c3e 35       		.byte	0x35
 3092 0c3f 070C0000 		.4byte	0xc07
 3093 0c43 05       		.uleb128 0x5
 3094 0c44 03       		.byte	0x3
 3095 0c45 00000000 		.4byte	CapSense_sensorBaselineLow
 3096 0c49 22       		.uleb128 0x22
 3097 0c4a E7010000 		.4byte	.LASF98
 3098 0c4e 01       		.byte	0x1
 3099 0c4f 36       		.byte	0x36
 3100 0c50 070C0000 		.4byte	0xc07
 3101 0c54 05       		.uleb128 0x5
 3102 0c55 03       		.byte	0x3
 3103 0c56 00000000 		.4byte	CapSense_sensorSignal
 3104 0c5a 22       		.uleb128 0x22
 3105 0c5b 95000000 		.4byte	.LASF99
 3106 0c5f 01       		.byte	0x1
 3107 0c60 37       		.byte	0x37
 3108 0c61 EC0B0000 		.4byte	0xbec
 3109 0c65 05       		.uleb128 0x5
 3110 0c66 03       		.byte	0x3
 3111 0c67 00000000 		.4byte	CapSense_sensorOnMask
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 107


 3112 0c6b 22       		.uleb128 0x22
 3113 0c6c B4070000 		.4byte	.LASF100
 3114 0c70 01       		.byte	0x1
 3115 0c71 39       		.byte	0x39
 3116 0c72 070C0000 		.4byte	0xc07
 3117 0c76 05       		.uleb128 0x5
 3118 0c77 03       		.byte	0x3
 3119 0c78 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3120 0c7c 22       		.uleb128 0x22
 3121 0c7d 05030000 		.4byte	.LASF101
 3122 0c81 01       		.byte	0x1
 3123 0c82 3A       		.byte	0x3a
 3124 0c83 070C0000 		.4byte	0xc07
 3125 0c87 05       		.uleb128 0x5
 3126 0c88 03       		.byte	0x3
 3127 0c89 00000000 		.4byte	CapSense_lowBaselineReset
 3128 0c8d 22       		.uleb128 0x22
 3129 0c8e 4B060000 		.4byte	.LASF102
 3130 0c92 01       		.byte	0x1
 3131 0c93 49       		.byte	0x49
 3132 0c94 070C0000 		.4byte	0xc07
 3133 0c98 05       		.uleb128 0x5
 3134 0c99 03       		.byte	0x3
 3135 0c9a 00000000 		.4byte	CapSense_fingerThreshold
 3136 0c9e 22       		.uleb128 0x22
 3137 0c9f 33060000 		.4byte	.LASF103
 3138 0ca3 01       		.byte	0x1
 3139 0ca4 4D       		.byte	0x4d
 3140 0ca5 070C0000 		.4byte	0xc07
 3141 0ca9 05       		.uleb128 0x5
 3142 0caa 03       		.byte	0x3
 3143 0cab 00000000 		.4byte	CapSense_noiseThreshold
 3144 0caf 22       		.uleb128 0x22
 3145 0cb0 FA090000 		.4byte	.LASF104
 3146 0cb4 01       		.byte	0x1
 3147 0cb5 4F       		.byte	0x4f
 3148 0cb6 070C0000 		.4byte	0xc07
 3149 0cba 05       		.uleb128 0x5
 3150 0cbb 03       		.byte	0x3
 3151 0cbc 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3152 0cc0 22       		.uleb128 0x22
 3153 0cc1 04080000 		.4byte	.LASF105
 3154 0cc5 01       		.byte	0x1
 3155 0cc6 51       		.byte	0x51
 3156 0cc7 070C0000 		.4byte	0xc07
 3157 0ccb 05       		.uleb128 0x5
 3158 0ccc 03       		.byte	0x3
 3159 0ccd 00000000 		.4byte	CapSense_hysteresis
 3160 0cd1 22       		.uleb128 0x22
 3161 0cd2 61040000 		.4byte	.LASF106
 3162 0cd6 01       		.byte	0x1
 3163 0cd7 53       		.byte	0x53
 3164 0cd8 070C0000 		.4byte	0xc07
 3165 0cdc 05       		.uleb128 0x5
 3166 0cdd 03       		.byte	0x3
 3167 0cde 00000000 		.4byte	CapSense_debounce
 3168 0ce2 22       		.uleb128 0x22
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 108


 3169 0ce3 7F000000 		.4byte	.LASF107
 3170 0ce7 01       		.byte	0x1
 3171 0ce8 5B       		.byte	0x5b
 3172 0ce9 F30C0000 		.4byte	0xcf3
 3173 0ced 05       		.uleb128 0x5
 3174 0cee 03       		.byte	0x3
 3175 0cef 00000000 		.4byte	CapSense_rawDataIndex
 3176 0cf3 08       		.uleb128 0x8
 3177 0cf4 070C0000 		.4byte	0xc07
 3178 0cf8 22       		.uleb128 0x22
 3179 0cf9 BB040000 		.4byte	.LASF108
 3180 0cfd 01       		.byte	0x1
 3181 0cfe 6A       		.byte	0x6a
 3182 0cff 090D0000 		.4byte	0xd09
 3183 0d03 05       		.uleb128 0x5
 3184 0d04 03       		.byte	0x3
 3185 0d05 00000000 		.4byte	CapSense_numberOfSensors
 3186 0d09 08       		.uleb128 0x8
 3187 0d0a 070C0000 		.4byte	0xc07
 3188 0d0e 22       		.uleb128 0x22
 3189 0d0f 79060000 		.4byte	.LASF109
 3190 0d13 01       		.byte	0x1
 3191 0d14 27       		.byte	0x27
 3192 0d15 D10B0000 		.4byte	0xbd1
 3193 0d19 05       		.uleb128 0x5
 3194 0d1a 03       		.byte	0x3
 3195 0d1b 00000000 		.4byte	CapSense_rawFilterData1
 3196 0d1f 21       		.uleb128 0x21
 3197 0d20 91060000 		.4byte	.LASF110
 3198 0d24 01       		.byte	0x1
 3199 0d25 41       		.byte	0x41
 3200 0d26 32020000 		.4byte	0x232
 3201 0d2a 22       		.uleb128 0x22
 3202 0d2b 1D080000 		.4byte	.LASF111
 3203 0d2f 01       		.byte	0x1
 3204 0d30 45       		.byte	0x45
 3205 0d31 6B000000 		.4byte	0x6b
 3206 0d35 05       		.uleb128 0x5
 3207 0d36 03       		.byte	0x3
 3208 0d37 00000000 		.4byte	CapSense_enableRawFilters
 3209 0d3b 23       		.uleb128 0x23
 3210 0d3c F5030000 		.4byte	.LASF112
 3211 0d40 04       		.byte	0x4
 3212 0d41 A7       		.byte	0xa7
 3213 0d42 4C0D0000 		.4byte	0xd4c
 3214 0d46 0A       		.uleb128 0xa
 3215 0d47 81000000 		.4byte	0x81
 3216 0d4b 00       		.byte	0
 3217 0d4c 24       		.uleb128 0x24
 3218 0d4d 04050000 		.4byte	.LASF118
 3219 0d51 04       		.byte	0x4
 3220 0d52 A6       		.byte	0xa6
 3221 0d53 81000000 		.4byte	0x81
 3222 0d57 25       		.uleb128 0x25
 3223 0d58 64090000 		.4byte	.LASF119
 3224 0d5c 04       		.byte	0x4
 3225 0d5d A9       		.byte	0xa9
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 109


 3226 0d5e 26       		.uleb128 0x26
 3227 0d5f 36090000 		.4byte	.LASF120
 3228 0d63 03       		.byte	0x3
 3229 0d64 61       		.byte	0x61
 3230 0d65 81000000 		.4byte	0x81
 3231 0d69 780D0000 		.4byte	0xd78
 3232 0d6d 0A       		.uleb128 0xa
 3233 0d6e 5F010000 		.4byte	0x15f
 3234 0d72 0A       		.uleb128 0xa
 3235 0d73 81000000 		.4byte	0x81
 3236 0d77 00       		.byte	0
 3237 0d78 23       		.uleb128 0x23
 3238 0d79 64060000 		.4byte	.LASF113
 3239 0d7d 03       		.byte	0x3
 3240 0d7e 62       		.byte	0x62
 3241 0d7f 930D0000 		.4byte	0xd93
 3242 0d83 0A       		.uleb128 0xa
 3243 0d84 59010000 		.4byte	0x159
 3244 0d88 0A       		.uleb128 0xa
 3245 0d89 81000000 		.4byte	0x81
 3246 0d8d 0A       		.uleb128 0xa
 3247 0d8e 81000000 		.4byte	0x81
 3248 0d92 00       		.byte	0
 3249 0d93 23       		.uleb128 0x23
 3250 0d94 CC090000 		.4byte	.LASF114
 3251 0d98 03       		.byte	0x3
 3252 0d99 78       		.byte	0x78
 3253 0d9a AE0D0000 		.4byte	0xdae
 3254 0d9e 0A       		.uleb128 0xa
 3255 0d9f AE0D0000 		.4byte	0xdae
 3256 0da3 0A       		.uleb128 0xa
 3257 0da4 65010000 		.4byte	0x165
 3258 0da8 0A       		.uleb128 0xa
 3259 0da9 B40D0000 		.4byte	0xdb4
 3260 0dad 00       		.byte	0
 3261 0dae 07       		.uleb128 0x7
 3262 0daf 04       		.byte	0x4
 3263 0db0 32020000 		.4byte	0x232
 3264 0db4 07       		.uleb128 0x7
 3265 0db5 04       		.byte	0x4
 3266 0db6 BA0D0000 		.4byte	0xdba
 3267 0dba 08       		.uleb128 0x8
 3268 0dbb 76000000 		.4byte	0x76
 3269 0dbf 27       		.uleb128 0x27
 3270 0dc0 BC080000 		.4byte	.LASF121
 3271 0dc4 01       		.byte	0x1
 3272 0dc5 17       		.byte	0x17
 3273 0dc6 0A       		.uleb128 0xa
 3274 0dc7 81000000 		.4byte	0x81
 3275 0dcb 00       		.byte	0
 3276 0dcc 00       		.byte	0
 3277              		.section	.debug_abbrev,"",%progbits
 3278              	.Ldebug_abbrev0:
 3279 0000 01       		.uleb128 0x1
 3280 0001 11       		.uleb128 0x11
 3281 0002 01       		.byte	0x1
 3282 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 110


 3283 0004 0E       		.uleb128 0xe
 3284 0005 13       		.uleb128 0x13
 3285 0006 0B       		.uleb128 0xb
 3286 0007 03       		.uleb128 0x3
 3287 0008 0E       		.uleb128 0xe
 3288 0009 1B       		.uleb128 0x1b
 3289 000a 0E       		.uleb128 0xe
 3290 000b 55       		.uleb128 0x55
 3291 000c 17       		.uleb128 0x17
 3292 000d 11       		.uleb128 0x11
 3293 000e 01       		.uleb128 0x1
 3294 000f 10       		.uleb128 0x10
 3295 0010 17       		.uleb128 0x17
 3296 0011 00       		.byte	0
 3297 0012 00       		.byte	0
 3298 0013 02       		.uleb128 0x2
 3299 0014 24       		.uleb128 0x24
 3300 0015 00       		.byte	0
 3301 0016 0B       		.uleb128 0xb
 3302 0017 0B       		.uleb128 0xb
 3303 0018 3E       		.uleb128 0x3e
 3304 0019 0B       		.uleb128 0xb
 3305 001a 03       		.uleb128 0x3
 3306 001b 0E       		.uleb128 0xe
 3307 001c 00       		.byte	0
 3308 001d 00       		.byte	0
 3309 001e 03       		.uleb128 0x3
 3310 001f 24       		.uleb128 0x24
 3311 0020 00       		.byte	0
 3312 0021 0B       		.uleb128 0xb
 3313 0022 0B       		.uleb128 0xb
 3314 0023 3E       		.uleb128 0x3e
 3315 0024 0B       		.uleb128 0xb
 3316 0025 03       		.uleb128 0x3
 3317 0026 08       		.uleb128 0x8
 3318 0027 00       		.byte	0
 3319 0028 00       		.byte	0
 3320 0029 04       		.uleb128 0x4
 3321 002a 16       		.uleb128 0x16
 3322 002b 00       		.byte	0
 3323 002c 03       		.uleb128 0x3
 3324 002d 0E       		.uleb128 0xe
 3325 002e 3A       		.uleb128 0x3a
 3326 002f 0B       		.uleb128 0xb
 3327 0030 3B       		.uleb128 0x3b
 3328 0031 0B       		.uleb128 0xb
 3329 0032 49       		.uleb128 0x49
 3330 0033 13       		.uleb128 0x13
 3331 0034 00       		.byte	0
 3332 0035 00       		.byte	0
 3333 0036 05       		.uleb128 0x5
 3334 0037 13       		.uleb128 0x13
 3335 0038 01       		.byte	0x1
 3336 0039 0B       		.uleb128 0xb
 3337 003a 0B       		.uleb128 0xb
 3338 003b 3A       		.uleb128 0x3a
 3339 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 111


 3340 003d 3B       		.uleb128 0x3b
 3341 003e 0B       		.uleb128 0xb
 3342 003f 01       		.uleb128 0x1
 3343 0040 13       		.uleb128 0x13
 3344 0041 00       		.byte	0
 3345 0042 00       		.byte	0
 3346 0043 06       		.uleb128 0x6
 3347 0044 0D       		.uleb128 0xd
 3348 0045 00       		.byte	0
 3349 0046 03       		.uleb128 0x3
 3350 0047 0E       		.uleb128 0xe
 3351 0048 3A       		.uleb128 0x3a
 3352 0049 0B       		.uleb128 0xb
 3353 004a 3B       		.uleb128 0x3b
 3354 004b 0B       		.uleb128 0xb
 3355 004c 49       		.uleb128 0x49
 3356 004d 13       		.uleb128 0x13
 3357 004e 38       		.uleb128 0x38
 3358 004f 0B       		.uleb128 0xb
 3359 0050 00       		.byte	0
 3360 0051 00       		.byte	0
 3361 0052 07       		.uleb128 0x7
 3362 0053 0F       		.uleb128 0xf
 3363 0054 00       		.byte	0
 3364 0055 0B       		.uleb128 0xb
 3365 0056 0B       		.uleb128 0xb
 3366 0057 49       		.uleb128 0x49
 3367 0058 13       		.uleb128 0x13
 3368 0059 00       		.byte	0
 3369 005a 00       		.byte	0
 3370 005b 08       		.uleb128 0x8
 3371 005c 26       		.uleb128 0x26
 3372 005d 00       		.byte	0
 3373 005e 49       		.uleb128 0x49
 3374 005f 13       		.uleb128 0x13
 3375 0060 00       		.byte	0
 3376 0061 00       		.byte	0
 3377 0062 09       		.uleb128 0x9
 3378 0063 15       		.uleb128 0x15
 3379 0064 01       		.byte	0x1
 3380 0065 27       		.uleb128 0x27
 3381 0066 19       		.uleb128 0x19
 3382 0067 49       		.uleb128 0x49
 3383 0068 13       		.uleb128 0x13
 3384 0069 01       		.uleb128 0x1
 3385 006a 13       		.uleb128 0x13
 3386 006b 00       		.byte	0
 3387 006c 00       		.byte	0
 3388 006d 0A       		.uleb128 0xa
 3389 006e 05       		.uleb128 0x5
 3390 006f 00       		.byte	0
 3391 0070 49       		.uleb128 0x49
 3392 0071 13       		.uleb128 0x13
 3393 0072 00       		.byte	0
 3394 0073 00       		.byte	0
 3395 0074 0B       		.uleb128 0xb
 3396 0075 15       		.uleb128 0x15
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 112


 3397 0076 01       		.byte	0x1
 3398 0077 27       		.uleb128 0x27
 3399 0078 19       		.uleb128 0x19
 3400 0079 01       		.uleb128 0x1
 3401 007a 13       		.uleb128 0x13
 3402 007b 00       		.byte	0
 3403 007c 00       		.byte	0
 3404 007d 0C       		.uleb128 0xc
 3405 007e 2E       		.uleb128 0x2e
 3406 007f 01       		.byte	0x1
 3407 0080 3F       		.uleb128 0x3f
 3408 0081 19       		.uleb128 0x19
 3409 0082 03       		.uleb128 0x3
 3410 0083 0E       		.uleb128 0xe
 3411 0084 3A       		.uleb128 0x3a
 3412 0085 0B       		.uleb128 0xb
 3413 0086 3B       		.uleb128 0x3b
 3414 0087 0B       		.uleb128 0xb
 3415 0088 27       		.uleb128 0x27
 3416 0089 19       		.uleb128 0x19
 3417 008a 11       		.uleb128 0x11
 3418 008b 01       		.uleb128 0x1
 3419 008c 12       		.uleb128 0x12
 3420 008d 06       		.uleb128 0x6
 3421 008e 40       		.uleb128 0x40
 3422 008f 18       		.uleb128 0x18
 3423 0090 9742     		.uleb128 0x2117
 3424 0092 19       		.uleb128 0x19
 3425 0093 01       		.uleb128 0x1
 3426 0094 13       		.uleb128 0x13
 3427 0095 00       		.byte	0
 3428 0096 00       		.byte	0
 3429 0097 0D       		.uleb128 0xd
 3430 0098 05       		.uleb128 0x5
 3431 0099 00       		.byte	0
 3432 009a 03       		.uleb128 0x3
 3433 009b 0E       		.uleb128 0xe
 3434 009c 3A       		.uleb128 0x3a
 3435 009d 0B       		.uleb128 0xb
 3436 009e 3B       		.uleb128 0x3b
 3437 009f 0B       		.uleb128 0xb
 3438 00a0 49       		.uleb128 0x49
 3439 00a1 13       		.uleb128 0x13
 3440 00a2 02       		.uleb128 0x2
 3441 00a3 17       		.uleb128 0x17
 3442 00a4 00       		.byte	0
 3443 00a5 00       		.byte	0
 3444 00a6 0E       		.uleb128 0xe
 3445 00a7 34       		.uleb128 0x34
 3446 00a8 00       		.byte	0
 3447 00a9 03       		.uleb128 0x3
 3448 00aa 0E       		.uleb128 0xe
 3449 00ab 3A       		.uleb128 0x3a
 3450 00ac 0B       		.uleb128 0xb
 3451 00ad 3B       		.uleb128 0x3b
 3452 00ae 0B       		.uleb128 0xb
 3453 00af 49       		.uleb128 0x49
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 113


 3454 00b0 13       		.uleb128 0x13
 3455 00b1 02       		.uleb128 0x2
 3456 00b2 17       		.uleb128 0x17
 3457 00b3 00       		.byte	0
 3458 00b4 00       		.byte	0
 3459 00b5 0F       		.uleb128 0xf
 3460 00b6 898201   		.uleb128 0x4109
 3461 00b9 01       		.byte	0x1
 3462 00ba 11       		.uleb128 0x11
 3463 00bb 01       		.uleb128 0x1
 3464 00bc 31       		.uleb128 0x31
 3465 00bd 13       		.uleb128 0x13
 3466 00be 01       		.uleb128 0x1
 3467 00bf 13       		.uleb128 0x13
 3468 00c0 00       		.byte	0
 3469 00c1 00       		.byte	0
 3470 00c2 10       		.uleb128 0x10
 3471 00c3 8A8201   		.uleb128 0x410a
 3472 00c6 00       		.byte	0
 3473 00c7 02       		.uleb128 0x2
 3474 00c8 18       		.uleb128 0x18
 3475 00c9 9142     		.uleb128 0x2111
 3476 00cb 18       		.uleb128 0x18
 3477 00cc 00       		.byte	0
 3478 00cd 00       		.byte	0
 3479 00ce 11       		.uleb128 0x11
 3480 00cf 898201   		.uleb128 0x4109
 3481 00d2 00       		.byte	0
 3482 00d3 11       		.uleb128 0x11
 3483 00d4 01       		.uleb128 0x1
 3484 00d5 31       		.uleb128 0x31
 3485 00d6 13       		.uleb128 0x13
 3486 00d7 00       		.byte	0
 3487 00d8 00       		.byte	0
 3488 00d9 12       		.uleb128 0x12
 3489 00da 898201   		.uleb128 0x4109
 3490 00dd 01       		.byte	0x1
 3491 00de 11       		.uleb128 0x11
 3492 00df 01       		.uleb128 0x1
 3493 00e0 31       		.uleb128 0x31
 3494 00e1 13       		.uleb128 0x13
 3495 00e2 00       		.byte	0
 3496 00e3 00       		.byte	0
 3497 00e4 13       		.uleb128 0x13
 3498 00e5 2E       		.uleb128 0x2e
 3499 00e6 01       		.byte	0x1
 3500 00e7 3F       		.uleb128 0x3f
 3501 00e8 19       		.uleb128 0x19
 3502 00e9 03       		.uleb128 0x3
 3503 00ea 0E       		.uleb128 0xe
 3504 00eb 3A       		.uleb128 0x3a
 3505 00ec 0B       		.uleb128 0xb
 3506 00ed 3B       		.uleb128 0x3b
 3507 00ee 05       		.uleb128 0x5
 3508 00ef 27       		.uleb128 0x27
 3509 00f0 19       		.uleb128 0x19
 3510 00f1 11       		.uleb128 0x11
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 114


 3511 00f2 01       		.uleb128 0x1
 3512 00f3 12       		.uleb128 0x12
 3513 00f4 06       		.uleb128 0x6
 3514 00f5 40       		.uleb128 0x40
 3515 00f6 18       		.uleb128 0x18
 3516 00f7 9742     		.uleb128 0x2117
 3517 00f9 19       		.uleb128 0x19
 3518 00fa 01       		.uleb128 0x1
 3519 00fb 13       		.uleb128 0x13
 3520 00fc 00       		.byte	0
 3521 00fd 00       		.byte	0
 3522 00fe 14       		.uleb128 0x14
 3523 00ff 34       		.uleb128 0x34
 3524 0100 00       		.byte	0
 3525 0101 03       		.uleb128 0x3
 3526 0102 08       		.uleb128 0x8
 3527 0103 3A       		.uleb128 0x3a
 3528 0104 0B       		.uleb128 0xb
 3529 0105 3B       		.uleb128 0x3b
 3530 0106 05       		.uleb128 0x5
 3531 0107 49       		.uleb128 0x49
 3532 0108 13       		.uleb128 0x13
 3533 0109 02       		.uleb128 0x2
 3534 010a 17       		.uleb128 0x17
 3535 010b 00       		.byte	0
 3536 010c 00       		.byte	0
 3537 010d 15       		.uleb128 0x15
 3538 010e 34       		.uleb128 0x34
 3539 010f 00       		.byte	0
 3540 0110 03       		.uleb128 0x3
 3541 0111 0E       		.uleb128 0xe
 3542 0112 3A       		.uleb128 0x3a
 3543 0113 0B       		.uleb128 0xb
 3544 0114 3B       		.uleb128 0x3b
 3545 0115 05       		.uleb128 0x5
 3546 0116 49       		.uleb128 0x49
 3547 0117 13       		.uleb128 0x13
 3548 0118 02       		.uleb128 0x2
 3549 0119 17       		.uleb128 0x17
 3550 011a 00       		.byte	0
 3551 011b 00       		.byte	0
 3552 011c 16       		.uleb128 0x16
 3553 011d 2E       		.uleb128 0x2e
 3554 011e 01       		.byte	0x1
 3555 011f 3F       		.uleb128 0x3f
 3556 0120 19       		.uleb128 0x19
 3557 0121 03       		.uleb128 0x3
 3558 0122 0E       		.uleb128 0xe
 3559 0123 3A       		.uleb128 0x3a
 3560 0124 0B       		.uleb128 0xb
 3561 0125 3B       		.uleb128 0x3b
 3562 0126 05       		.uleb128 0x5
 3563 0127 27       		.uleb128 0x27
 3564 0128 19       		.uleb128 0x19
 3565 0129 49       		.uleb128 0x49
 3566 012a 13       		.uleb128 0x13
 3567 012b 11       		.uleb128 0x11
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 115


 3568 012c 01       		.uleb128 0x1
 3569 012d 12       		.uleb128 0x12
 3570 012e 06       		.uleb128 0x6
 3571 012f 40       		.uleb128 0x40
 3572 0130 18       		.uleb128 0x18
 3573 0131 9742     		.uleb128 0x2117
 3574 0133 19       		.uleb128 0x19
 3575 0134 01       		.uleb128 0x1
 3576 0135 13       		.uleb128 0x13
 3577 0136 00       		.byte	0
 3578 0137 00       		.byte	0
 3579 0138 17       		.uleb128 0x17
 3580 0139 05       		.uleb128 0x5
 3581 013a 00       		.byte	0
 3582 013b 03       		.uleb128 0x3
 3583 013c 0E       		.uleb128 0xe
 3584 013d 3A       		.uleb128 0x3a
 3585 013e 0B       		.uleb128 0xb
 3586 013f 3B       		.uleb128 0x3b
 3587 0140 05       		.uleb128 0x5
 3588 0141 49       		.uleb128 0x49
 3589 0142 13       		.uleb128 0x13
 3590 0143 02       		.uleb128 0x2
 3591 0144 17       		.uleb128 0x17
 3592 0145 00       		.byte	0
 3593 0146 00       		.byte	0
 3594 0147 18       		.uleb128 0x18
 3595 0148 05       		.uleb128 0x5
 3596 0149 00       		.byte	0
 3597 014a 03       		.uleb128 0x3
 3598 014b 0E       		.uleb128 0xe
 3599 014c 3A       		.uleb128 0x3a
 3600 014d 0B       		.uleb128 0xb
 3601 014e 3B       		.uleb128 0x3b
 3602 014f 05       		.uleb128 0x5
 3603 0150 49       		.uleb128 0x49
 3604 0151 13       		.uleb128 0x13
 3605 0152 02       		.uleb128 0x2
 3606 0153 18       		.uleb128 0x18
 3607 0154 00       		.byte	0
 3608 0155 00       		.byte	0
 3609 0156 19       		.uleb128 0x19
 3610 0157 34       		.uleb128 0x34
 3611 0158 00       		.byte	0
 3612 0159 03       		.uleb128 0x3
 3613 015a 0E       		.uleb128 0xe
 3614 015b 3A       		.uleb128 0x3a
 3615 015c 0B       		.uleb128 0xb
 3616 015d 3B       		.uleb128 0x3b
 3617 015e 05       		.uleb128 0x5
 3618 015f 49       		.uleb128 0x49
 3619 0160 13       		.uleb128 0x13
 3620 0161 00       		.byte	0
 3621 0162 00       		.byte	0
 3622 0163 1A       		.uleb128 0x1a
 3623 0164 05       		.uleb128 0x5
 3624 0165 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 116


 3625 0166 03       		.uleb128 0x3
 3626 0167 08       		.uleb128 0x8
 3627 0168 3A       		.uleb128 0x3a
 3628 0169 0B       		.uleb128 0xb
 3629 016a 3B       		.uleb128 0x3b
 3630 016b 05       		.uleb128 0x5
 3631 016c 49       		.uleb128 0x49
 3632 016d 13       		.uleb128 0x13
 3633 016e 02       		.uleb128 0x2
 3634 016f 17       		.uleb128 0x17
 3635 0170 00       		.byte	0
 3636 0171 00       		.byte	0
 3637 0172 1B       		.uleb128 0x1b
 3638 0173 05       		.uleb128 0x5
 3639 0174 00       		.byte	0
 3640 0175 03       		.uleb128 0x3
 3641 0176 08       		.uleb128 0x8
 3642 0177 3A       		.uleb128 0x3a
 3643 0178 0B       		.uleb128 0xb
 3644 0179 3B       		.uleb128 0x3b
 3645 017a 05       		.uleb128 0x5
 3646 017b 49       		.uleb128 0x49
 3647 017c 13       		.uleb128 0x13
 3648 017d 02       		.uleb128 0x2
 3649 017e 18       		.uleb128 0x18
 3650 017f 00       		.byte	0
 3651 0180 00       		.byte	0
 3652 0181 1C       		.uleb128 0x1c
 3653 0182 34       		.uleb128 0x34
 3654 0183 00       		.byte	0
 3655 0184 03       		.uleb128 0x3
 3656 0185 08       		.uleb128 0x8
 3657 0186 3A       		.uleb128 0x3a
 3658 0187 0B       		.uleb128 0xb
 3659 0188 3B       		.uleb128 0x3b
 3660 0189 05       		.uleb128 0x5
 3661 018a 49       		.uleb128 0x49
 3662 018b 13       		.uleb128 0x13
 3663 018c 00       		.byte	0
 3664 018d 00       		.byte	0
 3665 018e 1D       		.uleb128 0x1d
 3666 018f 2E       		.uleb128 0x2e
 3667 0190 00       		.byte	0
 3668 0191 3F       		.uleb128 0x3f
 3669 0192 19       		.uleb128 0x19
 3670 0193 03       		.uleb128 0x3
 3671 0194 0E       		.uleb128 0xe
 3672 0195 3A       		.uleb128 0x3a
 3673 0196 0B       		.uleb128 0xb
 3674 0197 3B       		.uleb128 0x3b
 3675 0198 05       		.uleb128 0x5
 3676 0199 27       		.uleb128 0x27
 3677 019a 19       		.uleb128 0x19
 3678 019b 11       		.uleb128 0x11
 3679 019c 01       		.uleb128 0x1
 3680 019d 12       		.uleb128 0x12
 3681 019e 06       		.uleb128 0x6
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 117


 3682 019f 40       		.uleb128 0x40
 3683 01a0 18       		.uleb128 0x18
 3684 01a1 9742     		.uleb128 0x2117
 3685 01a3 19       		.uleb128 0x19
 3686 01a4 00       		.byte	0
 3687 01a5 00       		.byte	0
 3688 01a6 1E       		.uleb128 0x1e
 3689 01a7 01       		.uleb128 0x1
 3690 01a8 01       		.byte	0x1
 3691 01a9 49       		.uleb128 0x49
 3692 01aa 13       		.uleb128 0x13
 3693 01ab 01       		.uleb128 0x1
 3694 01ac 13       		.uleb128 0x13
 3695 01ad 00       		.byte	0
 3696 01ae 00       		.byte	0
 3697 01af 1F       		.uleb128 0x1f
 3698 01b0 21       		.uleb128 0x21
 3699 01b1 00       		.byte	0
 3700 01b2 49       		.uleb128 0x49
 3701 01b3 13       		.uleb128 0x13
 3702 01b4 2F       		.uleb128 0x2f
 3703 01b5 0B       		.uleb128 0xb
 3704 01b6 00       		.byte	0
 3705 01b7 00       		.byte	0
 3706 01b8 20       		.uleb128 0x20
 3707 01b9 34       		.uleb128 0x34
 3708 01ba 00       		.byte	0
 3709 01bb 03       		.uleb128 0x3
 3710 01bc 0E       		.uleb128 0xe
 3711 01bd 3A       		.uleb128 0x3a
 3712 01be 0B       		.uleb128 0xb
 3713 01bf 3B       		.uleb128 0x3b
 3714 01c0 0B       		.uleb128 0xb
 3715 01c1 49       		.uleb128 0x49
 3716 01c2 13       		.uleb128 0x13
 3717 01c3 02       		.uleb128 0x2
 3718 01c4 18       		.uleb128 0x18
 3719 01c5 00       		.byte	0
 3720 01c6 00       		.byte	0
 3721 01c7 21       		.uleb128 0x21
 3722 01c8 34       		.uleb128 0x34
 3723 01c9 00       		.byte	0
 3724 01ca 03       		.uleb128 0x3
 3725 01cb 0E       		.uleb128 0xe
 3726 01cc 3A       		.uleb128 0x3a
 3727 01cd 0B       		.uleb128 0xb
 3728 01ce 3B       		.uleb128 0x3b
 3729 01cf 0B       		.uleb128 0xb
 3730 01d0 49       		.uleb128 0x49
 3731 01d1 13       		.uleb128 0x13
 3732 01d2 3F       		.uleb128 0x3f
 3733 01d3 19       		.uleb128 0x19
 3734 01d4 3C       		.uleb128 0x3c
 3735 01d5 19       		.uleb128 0x19
 3736 01d6 00       		.byte	0
 3737 01d7 00       		.byte	0
 3738 01d8 22       		.uleb128 0x22
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 118


 3739 01d9 34       		.uleb128 0x34
 3740 01da 00       		.byte	0
 3741 01db 03       		.uleb128 0x3
 3742 01dc 0E       		.uleb128 0xe
 3743 01dd 3A       		.uleb128 0x3a
 3744 01de 0B       		.uleb128 0xb
 3745 01df 3B       		.uleb128 0x3b
 3746 01e0 0B       		.uleb128 0xb
 3747 01e1 49       		.uleb128 0x49
 3748 01e2 13       		.uleb128 0x13
 3749 01e3 3F       		.uleb128 0x3f
 3750 01e4 19       		.uleb128 0x19
 3751 01e5 02       		.uleb128 0x2
 3752 01e6 18       		.uleb128 0x18
 3753 01e7 00       		.byte	0
 3754 01e8 00       		.byte	0
 3755 01e9 23       		.uleb128 0x23
 3756 01ea 2E       		.uleb128 0x2e
 3757 01eb 01       		.byte	0x1
 3758 01ec 3F       		.uleb128 0x3f
 3759 01ed 19       		.uleb128 0x19
 3760 01ee 03       		.uleb128 0x3
 3761 01ef 0E       		.uleb128 0xe
 3762 01f0 3A       		.uleb128 0x3a
 3763 01f1 0B       		.uleb128 0xb
 3764 01f2 3B       		.uleb128 0x3b
 3765 01f3 0B       		.uleb128 0xb
 3766 01f4 27       		.uleb128 0x27
 3767 01f5 19       		.uleb128 0x19
 3768 01f6 3C       		.uleb128 0x3c
 3769 01f7 19       		.uleb128 0x19
 3770 01f8 01       		.uleb128 0x1
 3771 01f9 13       		.uleb128 0x13
 3772 01fa 00       		.byte	0
 3773 01fb 00       		.byte	0
 3774 01fc 24       		.uleb128 0x24
 3775 01fd 2E       		.uleb128 0x2e
 3776 01fe 00       		.byte	0
 3777 01ff 3F       		.uleb128 0x3f
 3778 0200 19       		.uleb128 0x19
 3779 0201 03       		.uleb128 0x3
 3780 0202 0E       		.uleb128 0xe
 3781 0203 3A       		.uleb128 0x3a
 3782 0204 0B       		.uleb128 0xb
 3783 0205 3B       		.uleb128 0x3b
 3784 0206 0B       		.uleb128 0xb
 3785 0207 27       		.uleb128 0x27
 3786 0208 19       		.uleb128 0x19
 3787 0209 49       		.uleb128 0x49
 3788 020a 13       		.uleb128 0x13
 3789 020b 3C       		.uleb128 0x3c
 3790 020c 19       		.uleb128 0x19
 3791 020d 00       		.byte	0
 3792 020e 00       		.byte	0
 3793 020f 25       		.uleb128 0x25
 3794 0210 2E       		.uleb128 0x2e
 3795 0211 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 119


 3796 0212 3F       		.uleb128 0x3f
 3797 0213 19       		.uleb128 0x19
 3798 0214 03       		.uleb128 0x3
 3799 0215 0E       		.uleb128 0xe
 3800 0216 3A       		.uleb128 0x3a
 3801 0217 0B       		.uleb128 0xb
 3802 0218 3B       		.uleb128 0x3b
 3803 0219 0B       		.uleb128 0xb
 3804 021a 27       		.uleb128 0x27
 3805 021b 19       		.uleb128 0x19
 3806 021c 3C       		.uleb128 0x3c
 3807 021d 19       		.uleb128 0x19
 3808 021e 00       		.byte	0
 3809 021f 00       		.byte	0
 3810 0220 26       		.uleb128 0x26
 3811 0221 2E       		.uleb128 0x2e
 3812 0222 01       		.byte	0x1
 3813 0223 3F       		.uleb128 0x3f
 3814 0224 19       		.uleb128 0x19
 3815 0225 03       		.uleb128 0x3
 3816 0226 0E       		.uleb128 0xe
 3817 0227 3A       		.uleb128 0x3a
 3818 0228 0B       		.uleb128 0xb
 3819 0229 3B       		.uleb128 0x3b
 3820 022a 0B       		.uleb128 0xb
 3821 022b 27       		.uleb128 0x27
 3822 022c 19       		.uleb128 0x19
 3823 022d 49       		.uleb128 0x49
 3824 022e 13       		.uleb128 0x13
 3825 022f 3C       		.uleb128 0x3c
 3826 0230 19       		.uleb128 0x19
 3827 0231 01       		.uleb128 0x1
 3828 0232 13       		.uleb128 0x13
 3829 0233 00       		.byte	0
 3830 0234 00       		.byte	0
 3831 0235 27       		.uleb128 0x27
 3832 0236 2E       		.uleb128 0x2e
 3833 0237 01       		.byte	0x1
 3834 0238 3F       		.uleb128 0x3f
 3835 0239 19       		.uleb128 0x19
 3836 023a 03       		.uleb128 0x3
 3837 023b 0E       		.uleb128 0xe
 3838 023c 3A       		.uleb128 0x3a
 3839 023d 0B       		.uleb128 0xb
 3840 023e 3B       		.uleb128 0x3b
 3841 023f 0B       		.uleb128 0xb
 3842 0240 27       		.uleb128 0x27
 3843 0241 19       		.uleb128 0x19
 3844 0242 3C       		.uleb128 0x3c
 3845 0243 19       		.uleb128 0x19
 3846 0244 00       		.byte	0
 3847 0245 00       		.byte	0
 3848 0246 00       		.byte	0
 3849              		.section	.debug_loc,"",%progbits
 3850              	.Ldebug_loc0:
 3851              	.LLST0:
 3852 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 120


 3853 0004 1E000000 		.4byte	.LVL3
 3854 0008 0100     		.2byte	0x1
 3855 000a 50       		.byte	0x50
 3856 000b 1E000000 		.4byte	.LVL3
 3857 000f 40000000 		.4byte	.LFE34
 3858 0013 0400     		.2byte	0x4
 3859 0015 F3       		.byte	0xf3
 3860 0016 01       		.uleb128 0x1
 3861 0017 50       		.byte	0x50
 3862 0018 9F       		.byte	0x9f
 3863 0019 00000000 		.4byte	0
 3864 001d 00000000 		.4byte	0
 3865              	.LLST1:
 3866 0021 06000000 		.4byte	.LVL1
 3867 0025 0A000000 		.4byte	.LVL2
 3868 0029 0500     		.2byte	0x5
 3869 002b 73       		.byte	0x73
 3870 002c 00       		.sleb128 0
 3871 002d 70       		.byte	0x70
 3872 002e 00       		.sleb128 0
 3873 002f 22       		.byte	0x22
 3874 0030 0A000000 		.4byte	.LVL2
 3875 0034 1E000000 		.4byte	.LVL3
 3876 0038 0200     		.2byte	0x2
 3877 003a 70       		.byte	0x70
 3878 003b 00       		.sleb128 0
 3879 003c 1E000000 		.4byte	.LVL3
 3880 0040 28000000 		.4byte	.LVL4
 3881 0044 0100     		.2byte	0x1
 3882 0046 54       		.byte	0x54
 3883 0047 28000000 		.4byte	.LVL4
 3884 004b 40000000 		.4byte	.LFE34
 3885 004f 0300     		.2byte	0x3
 3886 0051 F3       		.byte	0xf3
 3887 0052 01       		.uleb128 0x1
 3888 0053 50       		.byte	0x50
 3889 0054 00000000 		.4byte	0
 3890 0058 00000000 		.4byte	0
 3891              	.LLST2:
 3892 005c 00000000 		.4byte	.LVL5
 3893 0060 07000000 		.4byte	.LVL6-1
 3894 0064 0100     		.2byte	0x1
 3895 0066 50       		.byte	0x50
 3896 0067 07000000 		.4byte	.LVL6-1
 3897 006b 16000000 		.4byte	.LVL9
 3898 006f 0100     		.2byte	0x1
 3899 0071 54       		.byte	0x54
 3900 0072 16000000 		.4byte	.LVL9
 3901 0076 18000000 		.4byte	.LFE35
 3902 007a 0400     		.2byte	0x4
 3903 007c F3       		.byte	0xf3
 3904 007d 01       		.uleb128 0x1
 3905 007e 50       		.byte	0x50
 3906 007f 9F       		.byte	0x9f
 3907 0080 00000000 		.4byte	0
 3908 0084 00000000 		.4byte	0
 3909              	.LLST3:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 121


 3910 0088 02000000 		.4byte	.LVL10
 3911 008c 06000000 		.4byte	.LVL11
 3912 0090 0200     		.2byte	0x2
 3913 0092 30       		.byte	0x30
 3914 0093 9F       		.byte	0x9f
 3915 0094 06000000 		.4byte	.LVL11
 3916 0098 12000000 		.4byte	.LVL14
 3917 009c 0100     		.2byte	0x1
 3918 009e 54       		.byte	0x54
 3919 009f 00000000 		.4byte	0
 3920 00a3 00000000 		.4byte	0
 3921              	.LLST4:
 3922 00a7 14000000 		.4byte	.LVL17
 3923 00ab 2C000000 		.4byte	.LVL22
 3924 00af 0100     		.2byte	0x1
 3925 00b1 54       		.byte	0x54
 3926 00b2 00000000 		.4byte	0
 3927 00b6 00000000 		.4byte	0
 3928              	.LLST5:
 3929 00ba 1C000000 		.4byte	.LVL18
 3930 00be 22000000 		.4byte	.LVL19
 3931 00c2 0100     		.2byte	0x1
 3932 00c4 50       		.byte	0x50
 3933 00c5 00000000 		.4byte	0
 3934 00c9 00000000 		.4byte	0
 3935              	.LLST6:
 3936 00cd 00000000 		.4byte	.LVL23
 3937 00d1 02000000 		.4byte	.LVL24
 3938 00d5 0100     		.2byte	0x1
 3939 00d7 50       		.byte	0x50
 3940 00d8 02000000 		.4byte	.LVL24
 3941 00dc 0C000000 		.4byte	.LFE42
 3942 00e0 0400     		.2byte	0x4
 3943 00e2 F3       		.byte	0xf3
 3944 00e3 01       		.uleb128 0x1
 3945 00e4 50       		.byte	0x50
 3946 00e5 9F       		.byte	0x9f
 3947 00e6 00000000 		.4byte	0
 3948 00ea 00000000 		.4byte	0
 3949              	.LLST7:
 3950 00ee 00000000 		.4byte	.LVL25
 3951 00f2 02000000 		.4byte	.LVL26
 3952 00f6 0100     		.2byte	0x1
 3953 00f8 50       		.byte	0x50
 3954 00f9 02000000 		.4byte	.LVL26
 3955 00fd 0C000000 		.4byte	.LFE43
 3956 0101 0400     		.2byte	0x4
 3957 0103 F3       		.byte	0xf3
 3958 0104 01       		.uleb128 0x1
 3959 0105 50       		.byte	0x50
 3960 0106 9F       		.byte	0x9f
 3961 0107 00000000 		.4byte	0
 3962 010b 00000000 		.4byte	0
 3963              	.LLST8:
 3964 010f 00000000 		.4byte	.LVL27
 3965 0113 06000000 		.4byte	.LVL28
 3966 0117 0100     		.2byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 122


 3967 0119 50       		.byte	0x50
 3968 011a 06000000 		.4byte	.LVL28
 3969 011e 0C000000 		.4byte	.LFE44
 3970 0122 0400     		.2byte	0x4
 3971 0124 F3       		.byte	0xf3
 3972 0125 01       		.uleb128 0x1
 3973 0126 50       		.byte	0x50
 3974 0127 9F       		.byte	0x9f
 3975 0128 00000000 		.4byte	0
 3976 012c 00000000 		.4byte	0
 3977              	.LLST9:
 3978 0130 00000000 		.4byte	.LVL30
 3979 0134 04000000 		.4byte	.LVL31
 3980 0138 0100     		.2byte	0x1
 3981 013a 50       		.byte	0x50
 3982 013b 04000000 		.4byte	.LVL31
 3983 013f 0C000000 		.4byte	.LFE46
 3984 0143 0400     		.2byte	0x4
 3985 0145 F3       		.byte	0xf3
 3986 0146 01       		.uleb128 0x1
 3987 0147 50       		.byte	0x50
 3988 0148 9F       		.byte	0x9f
 3989 0149 00000000 		.4byte	0
 3990 014d 00000000 		.4byte	0
 3991              	.LLST10:
 3992 0151 00000000 		.4byte	.LVL32
 3993 0155 04000000 		.4byte	.LVL33
 3994 0159 0100     		.2byte	0x1
 3995 015b 50       		.byte	0x50
 3996 015c 04000000 		.4byte	.LVL33
 3997 0160 0C000000 		.4byte	.LFE47
 3998 0164 0400     		.2byte	0x4
 3999 0166 F3       		.byte	0xf3
 4000 0167 01       		.uleb128 0x1
 4001 0168 50       		.byte	0x50
 4002 0169 9F       		.byte	0x9f
 4003 016a 00000000 		.4byte	0
 4004 016e 00000000 		.4byte	0
 4005              	.LLST11:
 4006 0172 00000000 		.4byte	.LVL34
 4007 0176 04000000 		.4byte	.LVL35
 4008 017a 0100     		.2byte	0x1
 4009 017c 50       		.byte	0x50
 4010 017d 04000000 		.4byte	.LVL35
 4011 0181 0C000000 		.4byte	.LFE48
 4012 0185 0400     		.2byte	0x4
 4013 0187 F3       		.byte	0xf3
 4014 0188 01       		.uleb128 0x1
 4015 0189 50       		.byte	0x50
 4016 018a 9F       		.byte	0x9f
 4017 018b 00000000 		.4byte	0
 4018 018f 00000000 		.4byte	0
 4019              	.LLST12:
 4020 0193 00000000 		.4byte	.LVL36
 4021 0197 04000000 		.4byte	.LVL37
 4022 019b 0100     		.2byte	0x1
 4023 019d 50       		.byte	0x50
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 123


 4024 019e 04000000 		.4byte	.LVL37
 4025 01a2 0C000000 		.4byte	.LFE49
 4026 01a6 0400     		.2byte	0x4
 4027 01a8 F3       		.byte	0xf3
 4028 01a9 01       		.uleb128 0x1
 4029 01aa 50       		.byte	0x50
 4030 01ab 9F       		.byte	0x9f
 4031 01ac 00000000 		.4byte	0
 4032 01b0 00000000 		.4byte	0
 4033              	.LLST13:
 4034 01b4 00000000 		.4byte	.LVL38
 4035 01b8 04000000 		.4byte	.LVL39
 4036 01bc 0100     		.2byte	0x1
 4037 01be 50       		.byte	0x50
 4038 01bf 04000000 		.4byte	.LVL39
 4039 01c3 0C000000 		.4byte	.LFE50
 4040 01c7 0400     		.2byte	0x4
 4041 01c9 F3       		.byte	0xf3
 4042 01ca 01       		.uleb128 0x1
 4043 01cb 50       		.byte	0x50
 4044 01cc 9F       		.byte	0x9f
 4045 01cd 00000000 		.4byte	0
 4046 01d1 00000000 		.4byte	0
 4047              	.LLST14:
 4048 01d5 00000000 		.4byte	.LVL44
 4049 01d9 04000000 		.4byte	.LVL45
 4050 01dd 0100     		.2byte	0x1
 4051 01df 50       		.byte	0x50
 4052 01e0 04000000 		.4byte	.LVL45
 4053 01e4 0C000000 		.4byte	.LFE55
 4054 01e8 0400     		.2byte	0x4
 4055 01ea F3       		.byte	0xf3
 4056 01eb 01       		.uleb128 0x1
 4057 01ec 50       		.byte	0x50
 4058 01ed 9F       		.byte	0x9f
 4059 01ee 00000000 		.4byte	0
 4060 01f2 00000000 		.4byte	0
 4061              	.LLST15:
 4062 01f6 00000000 		.4byte	.LVL46
 4063 01fa 1C000000 		.4byte	.LVL52
 4064 01fe 0100     		.2byte	0x1
 4065 0200 50       		.byte	0x50
 4066 0201 1C000000 		.4byte	.LVL52
 4067 0205 90000000 		.4byte	.LVL60
 4068 0209 0100     		.2byte	0x1
 4069 020b 54       		.byte	0x54
 4070 020c 90000000 		.4byte	.LVL60
 4071 0210 A8000000 		.4byte	.LFE56
 4072 0214 0400     		.2byte	0x4
 4073 0216 F3       		.byte	0xf3
 4074 0217 01       		.uleb128 0x1
 4075 0218 50       		.byte	0x50
 4076 0219 9F       		.byte	0x9f
 4077 021a 00000000 		.4byte	0
 4078 021e 00000000 		.4byte	0
 4079              	.LLST16:
 4080 0222 1A000000 		.4byte	.LVL51
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 124


 4081 0226 23000000 		.4byte	.LVL53-1
 4082 022a 0800     		.2byte	0x8
 4083 022c 75       		.byte	0x75
 4084 022d 00       		.sleb128 0
 4085 022e 03       		.byte	0x3
 4086 022f 00000000 		.4byte	.LANCHOR1
 4087 0233 22       		.byte	0x22
 4088 0234 23000000 		.4byte	.LVL53-1
 4089 0238 90000000 		.4byte	.LVL62
 4090 023c 0100     		.2byte	0x1
 4091 023e 58       		.byte	0x58
 4092 023f 00000000 		.4byte	0
 4093 0243 00000000 		.4byte	0
 4094              	.LLST17:
 4095 0247 12000000 		.4byte	.LVL47
 4096 024b 14000000 		.4byte	.LVL48
 4097 024f 0200     		.2byte	0x2
 4098 0251 72       		.byte	0x72
 4099 0252 0C       		.sleb128 12
 4100 0253 14000000 		.4byte	.LVL48
 4101 0257 18000000 		.4byte	.LVL50
 4102 025b 0700     		.2byte	0x7
 4103 025d 73       		.byte	0x73
 4104 025e 00       		.sleb128 0
 4105 025f 75       		.byte	0x75
 4106 0260 00       		.sleb128 0
 4107 0261 22       		.byte	0x22
 4108 0262 23       		.byte	0x23
 4109 0263 0C       		.uleb128 0xc
 4110 0264 18000000 		.4byte	.LVL50
 4111 0268 23000000 		.4byte	.LVL53-1
 4112 026c 0800     		.2byte	0x8
 4113 026e 75       		.byte	0x75
 4114 026f 00       		.sleb128 0
 4115 0270 03       		.byte	0x3
 4116 0271 0C000000 		.4byte	.LANCHOR1+12
 4117 0275 22       		.byte	0x22
 4118 0276 23000000 		.4byte	.LVL53-1
 4119 027a 90000000 		.4byte	.LVL61
 4120 027e 0100     		.2byte	0x1
 4121 0280 57       		.byte	0x57
 4122 0281 00000000 		.4byte	0
 4123 0285 00000000 		.4byte	0
 4124              	.LLST18:
 4125 0289 16000000 		.4byte	.LVL49
 4126 028d 23000000 		.4byte	.LVL53-1
 4127 0291 0500     		.2byte	0x5
 4128 0293 72       		.byte	0x72
 4129 0294 00       		.sleb128 0
 4130 0295 75       		.byte	0x75
 4131 0296 00       		.sleb128 0
 4132 0297 22       		.byte	0x22
 4133 0298 23000000 		.4byte	.LVL53-1
 4134 029c 30000000 		.4byte	.LVL54
 4135 02a0 0100     		.2byte	0x1
 4136 02a2 56       		.byte	0x56
 4137 02a3 4A000000 		.4byte	.LVL56
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 125


 4138 02a7 52000000 		.4byte	.LVL57
 4139 02ab 0100     		.2byte	0x1
 4140 02ad 56       		.byte	0x56
 4141 02ae 00000000 		.4byte	0
 4142 02b2 00000000 		.4byte	0
 4143              	.LLST19:
 4144 02b6 00000000 		.4byte	.LVL63
 4145 02ba 08000000 		.4byte	.LVL65
 4146 02be 0100     		.2byte	0x1
 4147 02c0 50       		.byte	0x50
 4148 02c1 08000000 		.4byte	.LVL65
 4149 02c5 2C000000 		.4byte	.LFE57
 4150 02c9 0400     		.2byte	0x4
 4151 02cb F3       		.byte	0xf3
 4152 02cc 01       		.uleb128 0x1
 4153 02cd 50       		.byte	0x50
 4154 02ce 9F       		.byte	0x9f
 4155 02cf 00000000 		.4byte	0
 4156 02d3 00000000 		.4byte	0
 4157              	.LLST20:
 4158 02d7 06000000 		.4byte	.LVL64
 4159 02db 24000000 		.4byte	.LVL71
 4160 02df 0100     		.2byte	0x1
 4161 02e1 54       		.byte	0x54
 4162 02e2 00000000 		.4byte	0
 4163 02e6 00000000 		.4byte	0
 4164              	.LLST21:
 4165 02ea 0C000000 		.4byte	.LVL66
 4166 02ee 24000000 		.4byte	.LVL72
 4167 02f2 0100     		.2byte	0x1
 4168 02f4 55       		.byte	0x55
 4169 02f5 24000000 		.4byte	.LVL72
 4170 02f9 2C000000 		.4byte	.LFE57
 4171 02fd 1E00     		.2byte	0x1e
 4172 02ff F3       		.byte	0xf3
 4173 0300 01       		.uleb128 0x1
 4174 0301 50       		.byte	0x50
 4175 0302 03       		.byte	0x3
 4176 0303 0C000000 		.4byte	.LANCHOR2+12
 4177 0307 22       		.byte	0x22
 4178 0308 94       		.byte	0x94
 4179 0309 01       		.byte	0x1
 4180 030a 08       		.byte	0x8
 4181 030b FF       		.byte	0xff
 4182 030c 1A       		.byte	0x1a
 4183 030d F3       		.byte	0xf3
 4184 030e 01       		.uleb128 0x1
 4185 030f 50       		.byte	0x50
 4186 0310 03       		.byte	0x3
 4187 0311 00000000 		.4byte	.LANCHOR2
 4188 0315 22       		.byte	0x22
 4189 0316 94       		.byte	0x94
 4190 0317 01       		.byte	0x1
 4191 0318 08       		.byte	0x8
 4192 0319 FF       		.byte	0xff
 4193 031a 1A       		.byte	0x1a
 4194 031b 22       		.byte	0x22
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 126


 4195 031c 9F       		.byte	0x9f
 4196 031d 00000000 		.4byte	0
 4197 0321 00000000 		.4byte	0
 4198              	.LLST22:
 4199 0325 0C000000 		.4byte	.LVL66
 4200 0329 10000000 		.4byte	.LVL67
 4201 032d 0200     		.2byte	0x2
 4202 032f 30       		.byte	0x30
 4203 0330 9F       		.byte	0x9f
 4204 0331 10000000 		.4byte	.LVL67
 4205 0335 24000000 		.4byte	.LVL73
 4206 0339 0100     		.2byte	0x1
 4207 033b 56       		.byte	0x56
 4208 033c 24000000 		.4byte	.LVL73
 4209 0340 2C000000 		.4byte	.LFE57
 4210 0344 0100     		.2byte	0x1
 4211 0346 50       		.byte	0x50
 4212 0347 00000000 		.4byte	0
 4213 034b 00000000 		.4byte	0
 4214              	.LLST23:
 4215 034f 02000000 		.4byte	.LVL74
 4216 0353 0A000000 		.4byte	.LVL75
 4217 0357 0200     		.2byte	0x2
 4218 0359 30       		.byte	0x30
 4219 035a 9F       		.byte	0x9f
 4220 035b 0A000000 		.4byte	.LVL75
 4221 035f 1E000000 		.4byte	.LVL79
 4222 0363 0100     		.2byte	0x1
 4223 0365 54       		.byte	0x54
 4224 0366 00000000 		.4byte	0
 4225 036a 00000000 		.4byte	0
 4226              	.LLST24:
 4227 036e 02000000 		.4byte	.LVL74
 4228 0372 0A000000 		.4byte	.LVL75
 4229 0376 0200     		.2byte	0x2
 4230 0378 30       		.byte	0x30
 4231 0379 9F       		.byte	0x9f
 4232 037a 0A000000 		.4byte	.LVL75
 4233 037e 1E000000 		.4byte	.LVL80
 4234 0382 0100     		.2byte	0x1
 4235 0384 55       		.byte	0x55
 4236 0385 1E000000 		.4byte	.LVL80
 4237 0389 20000000 		.4byte	.LFE58
 4238 038d 0100     		.2byte	0x1
 4239 038f 50       		.byte	0x50
 4240 0390 00000000 		.4byte	0
 4241 0394 00000000 		.4byte	0
 4242              	.LLST25:
 4243 0398 00000000 		.4byte	.LVL81
 4244 039c 08000000 		.4byte	.LVL83
 4245 03a0 0100     		.2byte	0x1
 4246 03a2 50       		.byte	0x50
 4247 03a3 08000000 		.4byte	.LVL83
 4248 03a7 2C000000 		.4byte	.LFE59
 4249 03ab 0400     		.2byte	0x4
 4250 03ad F3       		.byte	0xf3
 4251 03ae 01       		.uleb128 0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 127


 4252 03af 50       		.byte	0x50
 4253 03b0 9F       		.byte	0x9f
 4254 03b1 00000000 		.4byte	0
 4255 03b5 00000000 		.4byte	0
 4256              	.LLST26:
 4257 03b9 06000000 		.4byte	.LVL82
 4258 03bd 08000000 		.4byte	.LVL83
 4259 03c1 0500     		.2byte	0x5
 4260 03c3 73       		.byte	0x73
 4261 03c4 00       		.sleb128 0
 4262 03c5 70       		.byte	0x70
 4263 03c6 00       		.sleb128 0
 4264 03c7 22       		.byte	0x22
 4265 03c8 08000000 		.4byte	.LVL83
 4266 03cc 10000000 		.4byte	.LVL85
 4267 03d0 0200     		.2byte	0x2
 4268 03d2 70       		.byte	0x70
 4269 03d3 00       		.sleb128 0
 4270 03d4 10000000 		.4byte	.LVL85
 4271 03d8 1C000000 		.4byte	.LVL87
 4272 03dc 0100     		.2byte	0x1
 4273 03de 54       		.byte	0x54
 4274 03df 1C000000 		.4byte	.LVL87
 4275 03e3 1E000000 		.4byte	.LVL88
 4276 03e7 0300     		.2byte	0x3
 4277 03e9 74       		.byte	0x74
 4278 03ea 7F       		.sleb128 -1
 4279 03eb 9F       		.byte	0x9f
 4280 03ec 1E000000 		.4byte	.LVL88
 4281 03f0 22000000 		.4byte	.LVL89
 4282 03f4 0100     		.2byte	0x1
 4283 03f6 54       		.byte	0x54
 4284 03f7 00000000 		.4byte	0
 4285 03fb 00000000 		.4byte	0
 4286              	.LLST27:
 4287 03ff 0E000000 		.4byte	.LVL84
 4288 0403 22000000 		.4byte	.LVL90
 4289 0407 0100     		.2byte	0x1
 4290 0409 56       		.byte	0x56
 4291 040a 22000000 		.4byte	.LVL90
 4292 040e 2C000000 		.4byte	.LFE59
 4293 0412 1E00     		.2byte	0x1e
 4294 0414 F3       		.byte	0xf3
 4295 0415 01       		.uleb128 0x1
 4296 0416 50       		.byte	0x50
 4297 0417 03       		.byte	0x3
 4298 0418 0C000000 		.4byte	.LANCHOR2+12
 4299 041c 22       		.byte	0x22
 4300 041d 94       		.byte	0x94
 4301 041e 01       		.byte	0x1
 4302 041f 08       		.byte	0x8
 4303 0420 FF       		.byte	0xff
 4304 0421 1A       		.byte	0x1a
 4305 0422 F3       		.byte	0xf3
 4306 0423 01       		.uleb128 0x1
 4307 0424 50       		.byte	0x50
 4308 0425 03       		.byte	0x3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 128


 4309 0426 00000000 		.4byte	.LANCHOR2
 4310 042a 22       		.byte	0x22
 4311 042b 94       		.byte	0x94
 4312 042c 01       		.byte	0x1
 4313 042d 08       		.byte	0x8
 4314 042e FF       		.byte	0xff
 4315 042f 1A       		.byte	0x1a
 4316 0430 22       		.byte	0x22
 4317 0431 9F       		.byte	0x9f
 4318 0432 00000000 		.4byte	0
 4319 0436 00000000 		.4byte	0
 4320              	.LLST28:
 4321 043a 00000000 		.4byte	.LVL91
 4322 043e 08000000 		.4byte	.LVL93
 4323 0442 0100     		.2byte	0x1
 4324 0444 50       		.byte	0x50
 4325 0445 08000000 		.4byte	.LVL93
 4326 0449 2C000000 		.4byte	.LFE60
 4327 044d 0400     		.2byte	0x4
 4328 044f F3       		.byte	0xf3
 4329 0450 01       		.uleb128 0x1
 4330 0451 50       		.byte	0x50
 4331 0452 9F       		.byte	0x9f
 4332 0453 00000000 		.4byte	0
 4333 0457 00000000 		.4byte	0
 4334              	.LLST29:
 4335 045b 06000000 		.4byte	.LVL92
 4336 045f 08000000 		.4byte	.LVL93
 4337 0463 0500     		.2byte	0x5
 4338 0465 73       		.byte	0x73
 4339 0466 00       		.sleb128 0
 4340 0467 70       		.byte	0x70
 4341 0468 00       		.sleb128 0
 4342 0469 22       		.byte	0x22
 4343 046a 08000000 		.4byte	.LVL93
 4344 046e 10000000 		.4byte	.LVL95
 4345 0472 0200     		.2byte	0x2
 4346 0474 70       		.byte	0x70
 4347 0475 00       		.sleb128 0
 4348 0476 10000000 		.4byte	.LVL95
 4349 047a 1C000000 		.4byte	.LVL97
 4350 047e 0100     		.2byte	0x1
 4351 0480 54       		.byte	0x54
 4352 0481 1C000000 		.4byte	.LVL97
 4353 0485 1E000000 		.4byte	.LVL98
 4354 0489 0300     		.2byte	0x3
 4355 048b 74       		.byte	0x74
 4356 048c 7F       		.sleb128 -1
 4357 048d 9F       		.byte	0x9f
 4358 048e 1E000000 		.4byte	.LVL98
 4359 0492 22000000 		.4byte	.LVL99
 4360 0496 0100     		.2byte	0x1
 4361 0498 54       		.byte	0x54
 4362 0499 00000000 		.4byte	0
 4363 049d 00000000 		.4byte	0
 4364              	.LLST30:
 4365 04a1 0E000000 		.4byte	.LVL94
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 129


 4366 04a5 22000000 		.4byte	.LVL100
 4367 04a9 0100     		.2byte	0x1
 4368 04ab 56       		.byte	0x56
 4369 04ac 22000000 		.4byte	.LVL100
 4370 04b0 2C000000 		.4byte	.LFE60
 4371 04b4 1E00     		.2byte	0x1e
 4372 04b6 F3       		.byte	0xf3
 4373 04b7 01       		.uleb128 0x1
 4374 04b8 50       		.byte	0x50
 4375 04b9 03       		.byte	0x3
 4376 04ba 0C000000 		.4byte	.LANCHOR2+12
 4377 04be 22       		.byte	0x22
 4378 04bf 94       		.byte	0x94
 4379 04c0 01       		.byte	0x1
 4380 04c1 08       		.byte	0x8
 4381 04c2 FF       		.byte	0xff
 4382 04c3 1A       		.byte	0x1a
 4383 04c4 F3       		.byte	0xf3
 4384 04c5 01       		.uleb128 0x1
 4385 04c6 50       		.byte	0x50
 4386 04c7 03       		.byte	0x3
 4387 04c8 00000000 		.4byte	.LANCHOR2
 4388 04cc 22       		.byte	0x22
 4389 04cd 94       		.byte	0x94
 4390 04ce 01       		.byte	0x1
 4391 04cf 08       		.byte	0x8
 4392 04d0 FF       		.byte	0xff
 4393 04d1 1A       		.byte	0x1a
 4394 04d2 22       		.byte	0x22
 4395 04d3 9F       		.byte	0x9f
 4396 04d4 00000000 		.4byte	0
 4397 04d8 00000000 		.4byte	0
 4398              	.LLST31:
 4399 04dc 00000000 		.4byte	.LVL101
 4400 04e0 08000000 		.4byte	.LVL102
 4401 04e4 0100     		.2byte	0x1
 4402 04e6 50       		.byte	0x50
 4403 04e7 08000000 		.4byte	.LVL102
 4404 04eb 0A000000 		.4byte	.LVL103
 4405 04ef 0400     		.2byte	0x4
 4406 04f1 F3       		.byte	0xf3
 4407 04f2 01       		.uleb128 0x1
 4408 04f3 50       		.byte	0x50
 4409 04f4 9F       		.byte	0x9f
 4410 04f5 0A000000 		.4byte	.LVL103
 4411 04f9 1A000000 		.4byte	.LVL105
 4412 04fd 0100     		.2byte	0x1
 4413 04ff 50       		.byte	0x50
 4414 0500 00000000 		.4byte	0
 4415 0504 00000000 		.4byte	0
 4416              	.LLST32:
 4417 0508 00000000 		.4byte	.LVL101
 4418 050c 0A000000 		.4byte	.LVL103
 4419 0510 0100     		.2byte	0x1
 4420 0512 51       		.byte	0x51
 4421 0513 0A000000 		.4byte	.LVL103
 4422 0517 1C000000 		.4byte	.LFE61
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 130


 4423 051b 0100     		.2byte	0x1
 4424 051d 51       		.byte	0x51
 4425 051e 00000000 		.4byte	0
 4426 0522 00000000 		.4byte	0
 4427              	.LLST33:
 4428 0526 00000000 		.4byte	.LVL106
 4429 052a 02000000 		.4byte	.LVL107
 4430 052e 0100     		.2byte	0x1
 4431 0530 50       		.byte	0x50
 4432 0531 02000000 		.4byte	.LVL107
 4433 0535 0A000000 		.4byte	.LFE62
 4434 0539 0400     		.2byte	0x4
 4435 053b F3       		.byte	0xf3
 4436 053c 01       		.uleb128 0x1
 4437 053d 50       		.byte	0x50
 4438 053e 9F       		.byte	0x9f
 4439 053f 00000000 		.4byte	0
 4440 0543 00000000 		.4byte	0
 4441              	.LLST34:
 4442 0547 00000000 		.4byte	.LVL106
 4443 054b 04000000 		.4byte	.LVL108
 4444 054f 0100     		.2byte	0x1
 4445 0551 51       		.byte	0x51
 4446 0552 04000000 		.4byte	.LVL108
 4447 0556 0A000000 		.4byte	.LFE62
 4448 055a 0400     		.2byte	0x4
 4449 055c F3       		.byte	0xf3
 4450 055d 01       		.uleb128 0x1
 4451 055e 51       		.byte	0x51
 4452 055f 9F       		.byte	0x9f
 4453 0560 00000000 		.4byte	0
 4454 0564 00000000 		.4byte	0
 4455              	.LLST35:
 4456 0568 02000000 		.4byte	.LVL107
 4457 056c 06000000 		.4byte	.LVL109
 4458 0570 0100     		.2byte	0x1
 4459 0572 50       		.byte	0x50
 4460 0573 06000000 		.4byte	.LVL109
 4461 0577 08000000 		.4byte	.LVL110
 4462 057b 0500     		.2byte	0x5
 4463 057d 70       		.byte	0x70
 4464 057e 00       		.sleb128 0
 4465 057f 32       		.byte	0x32
 4466 0580 25       		.byte	0x25
 4467 0581 9F       		.byte	0x9f
 4468 0582 08000000 		.4byte	.LVL110
 4469 0586 0A000000 		.4byte	.LFE62
 4470 058a 0100     		.2byte	0x1
 4471 058c 50       		.byte	0x50
 4472 058d 00000000 		.4byte	0
 4473 0591 00000000 		.4byte	0
 4474              	.LLST36:
 4475 0595 00000000 		.4byte	.LVL111
 4476 0599 16000000 		.4byte	.LVL112
 4477 059d 0100     		.2byte	0x1
 4478 059f 50       		.byte	0x50
 4479 05a0 16000000 		.4byte	.LVL112
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 131


 4480 05a4 E0000000 		.4byte	.LVL134
 4481 05a8 0100     		.2byte	0x1
 4482 05aa 54       		.byte	0x54
 4483 05ab E0000000 		.4byte	.LVL134
 4484 05af 10010000 		.4byte	.LFE38
 4485 05b3 0400     		.2byte	0x4
 4486 05b5 F3       		.byte	0xf3
 4487 05b6 01       		.uleb128 0x1
 4488 05b7 50       		.byte	0x50
 4489 05b8 9F       		.byte	0x9f
 4490 05b9 00000000 		.4byte	0
 4491 05bd 00000000 		.4byte	0
 4492              	.LLST37:
 4493 05c1 98000000 		.4byte	.LVL128
 4494 05c5 A0000000 		.4byte	.LVL129
 4495 05c9 0100     		.2byte	0x1
 4496 05cb 52       		.byte	0x52
 4497 05cc A0000000 		.4byte	.LVL129
 4498 05d0 A6000000 		.4byte	.LVL130
 4499 05d4 0100     		.2byte	0x1
 4500 05d6 58       		.byte	0x58
 4501 05d7 A6000000 		.4byte	.LVL130
 4502 05db A8000000 		.4byte	.LVL131
 4503 05df 0100     		.2byte	0x1
 4504 05e1 50       		.byte	0x50
 4505 05e2 A8000000 		.4byte	.LVL131
 4506 05e6 AA000000 		.4byte	.LVL132
 4507 05ea 0100     		.2byte	0x1
 4508 05ec 55       		.byte	0x55
 4509 05ed AA000000 		.4byte	.LVL132
 4510 05f1 B8000000 		.4byte	.LVL133
 4511 05f5 0100     		.2byte	0x1
 4512 05f7 53       		.byte	0x53
 4513 05f8 00000000 		.4byte	0
 4514 05fc 00000000 		.4byte	0
 4515              	.LLST38:
 4516 0600 58000000 		.4byte	.LVL123
 4517 0604 5C000000 		.4byte	.LVL124
 4518 0608 0200     		.2byte	0x2
 4519 060a 31       		.byte	0x31
 4520 060b 9F       		.byte	0x9f
 4521 060c 60000000 		.4byte	.LVL125
 4522 0610 62000000 		.4byte	.LVL126
 4523 0614 0200     		.2byte	0x2
 4524 0616 30       		.byte	0x30
 4525 0617 9F       		.byte	0x9f
 4526 0618 62000000 		.4byte	.LVL126
 4527 061c E0000000 		.4byte	.LVL136
 4528 0620 0100     		.2byte	0x1
 4529 0622 57       		.byte	0x57
 4530 0623 00000000 		.4byte	0
 4531 0627 00000000 		.4byte	0
 4532              	.LLST39:
 4533 062b 58000000 		.4byte	.LVL123
 4534 062f 5C000000 		.4byte	.LVL124
 4535 0633 0100     		.2byte	0x1
 4536 0635 56       		.byte	0x56
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 132


 4537 0636 60000000 		.4byte	.LVL125
 4538 063a E0000000 		.4byte	.LVL135
 4539 063e 0100     		.2byte	0x1
 4540 0640 56       		.byte	0x56
 4541 0641 00000000 		.4byte	0
 4542 0645 00000000 		.4byte	0
 4543              	.LLST40:
 4544 0649 20000000 		.4byte	.LVL114
 4545 064d 22000000 		.4byte	.LVL115
 4546 0651 0500     		.2byte	0x5
 4547 0653 73       		.byte	0x73
 4548 0654 00       		.sleb128 0
 4549 0655 72       		.byte	0x72
 4550 0656 00       		.sleb128 0
 4551 0657 22       		.byte	0x22
 4552 0658 22000000 		.4byte	.LVL115
 4553 065c 24000000 		.4byte	.LVL116
 4554 0660 0200     		.2byte	0x2
 4555 0662 72       		.byte	0x72
 4556 0663 00       		.sleb128 0
 4557 0664 24000000 		.4byte	.LVL116
 4558 0668 2E000000 		.4byte	.LVL117
 4559 066c 0400     		.2byte	0x4
 4560 066e 74       		.byte	0x74
 4561 066f 00       		.sleb128 0
 4562 0670 31       		.byte	0x31
 4563 0671 24       		.byte	0x24
 4564 0672 2E000000 		.4byte	.LVL117
 4565 0676 35000000 		.4byte	.LVL119-1
 4566 067a 0200     		.2byte	0x2
 4567 067c 77       		.byte	0x77
 4568 067d 00       		.sleb128 0
 4569 067e 35000000 		.4byte	.LVL119-1
 4570 0682 38000000 		.4byte	.LVL120
 4571 0686 0100     		.2byte	0x1
 4572 0688 55       		.byte	0x55
 4573 0689 38000000 		.4byte	.LVL120
 4574 068d 3A000000 		.4byte	.LVL121
 4575 0691 0100     		.2byte	0x1
 4576 0693 50       		.byte	0x50
 4577 0694 3A000000 		.4byte	.LVL121
 4578 0698 A8000000 		.4byte	.LVL131
 4579 069c 0100     		.2byte	0x1
 4580 069e 55       		.byte	0x55
 4581 069f 00000000 		.4byte	0
 4582 06a3 00000000 		.4byte	0
 4583              	.LLST41:
 4584 06a7 1A000000 		.4byte	.LVL113
 4585 06ab 32000000 		.4byte	.LVL118
 4586 06af 0800     		.2byte	0x8
 4587 06b1 70       		.byte	0x70
 4588 06b2 00       		.sleb128 0
 4589 06b3 03       		.byte	0x3
 4590 06b4 00000000 		.4byte	CapSense_noiseThreshold
 4591 06b8 22       		.byte	0x22
 4592 06b9 32000000 		.4byte	.LVL118
 4593 06bd 35000000 		.4byte	.LVL119-1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 133


 4594 06c1 0800     		.2byte	0x8
 4595 06c3 78       		.byte	0x78
 4596 06c4 00       		.sleb128 0
 4597 06c5 03       		.byte	0x3
 4598 06c6 00000000 		.4byte	CapSense_noiseThreshold
 4599 06ca 22       		.byte	0x22
 4600 06cb 35000000 		.4byte	.LVL119-1
 4601 06cf E0000000 		.4byte	.LVL137
 4602 06d3 0100     		.2byte	0x1
 4603 06d5 59       		.byte	0x59
 4604 06d6 00000000 		.4byte	0
 4605 06da 00000000 		.4byte	0
 4606              	.LLST42:
 4607 06de 00000000 		.4byte	.LVL138
 4608 06e2 07000000 		.4byte	.LVL139-1
 4609 06e6 0100     		.2byte	0x1
 4610 06e8 50       		.byte	0x50
 4611 06e9 07000000 		.4byte	.LVL139-1
 4612 06ed 0E000000 		.4byte	.LVL141
 4613 06f1 0100     		.2byte	0x1
 4614 06f3 54       		.byte	0x54
 4615 06f4 0E000000 		.4byte	.LVL141
 4616 06f8 10000000 		.4byte	.LFE39
 4617 06fc 0400     		.2byte	0x4
 4618 06fe F3       		.byte	0xf3
 4619 06ff 01       		.uleb128 0x1
 4620 0700 50       		.byte	0x50
 4621 0701 9F       		.byte	0x9f
 4622 0702 00000000 		.4byte	0
 4623 0706 00000000 		.4byte	0
 4624              	.LLST43:
 4625 070a 02000000 		.4byte	.LVL142
 4626 070e 08000000 		.4byte	.LVL143
 4627 0712 0200     		.2byte	0x2
 4628 0714 30       		.byte	0x30
 4629 0715 9F       		.byte	0x9f
 4630 0716 08000000 		.4byte	.LVL143
 4631 071a 20000000 		.4byte	.LVL148
 4632 071e 0100     		.2byte	0x1
 4633 0720 54       		.byte	0x54
 4634 0721 00000000 		.4byte	0
 4635 0725 00000000 		.4byte	0
 4636              	.LLST44:
 4637 0729 10000000 		.4byte	.LVL144
 4638 072d 16000000 		.4byte	.LVL145
 4639 0731 0100     		.2byte	0x1
 4640 0733 50       		.byte	0x50
 4641 0734 00000000 		.4byte	0
 4642 0738 00000000 		.4byte	0
 4643              	.LLST45:
 4644 073c 00000000 		.4byte	.LVL149
 4645 0740 10000000 		.4byte	.LVL153
 4646 0744 0100     		.2byte	0x1
 4647 0746 50       		.byte	0x50
 4648 0747 10000000 		.4byte	.LVL153
 4649 074b 34000000 		.4byte	.LFE41
 4650 074f 0400     		.2byte	0x4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 134


 4651 0751 F3       		.byte	0xf3
 4652 0752 01       		.uleb128 0x1
 4653 0753 50       		.byte	0x50
 4654 0754 9F       		.byte	0x9f
 4655 0755 00000000 		.4byte	0
 4656 0759 00000000 		.4byte	0
 4657              	.LLST46:
 4658 075d 08000000 		.4byte	.LVL150
 4659 0761 0C000000 		.4byte	.LVL152
 4660 0765 0100     		.2byte	0x1
 4661 0767 55       		.byte	0x55
 4662 0768 0C000000 		.4byte	.LVL152
 4663 076c 10000000 		.4byte	.LVL153
 4664 0770 0800     		.2byte	0x8
 4665 0772 72       		.byte	0x72
 4666 0773 0C       		.sleb128 12
 4667 0774 94       		.byte	0x94
 4668 0775 01       		.byte	0x1
 4669 0776 08       		.byte	0x8
 4670 0777 FF       		.byte	0xff
 4671 0778 1A       		.byte	0x1a
 4672 0779 9F       		.byte	0x9f
 4673 077a 10000000 		.4byte	.LVL153
 4674 077e 34000000 		.4byte	.LFE41
 4675 0782 0F00     		.2byte	0xf
 4676 0784 F3       		.byte	0xf3
 4677 0785 01       		.uleb128 0x1
 4678 0786 50       		.byte	0x50
 4679 0787 03       		.byte	0x3
 4680 0788 0C000000 		.4byte	.LANCHOR2+12
 4681 078c 22       		.byte	0x22
 4682 078d 94       		.byte	0x94
 4683 078e 01       		.byte	0x1
 4684 078f 08       		.byte	0x8
 4685 0790 FF       		.byte	0xff
 4686 0791 1A       		.byte	0x1a
 4687 0792 9F       		.byte	0x9f
 4688 0793 00000000 		.4byte	0
 4689 0797 00000000 		.4byte	0
 4690              	.LLST47:
 4691 079b 0A000000 		.4byte	.LVL151
 4692 079f 10000000 		.4byte	.LVL153
 4693 07a3 0100     		.2byte	0x1
 4694 07a5 54       		.byte	0x54
 4695 07a6 10000000 		.4byte	.LVL153
 4696 07aa 34000000 		.4byte	.LFE41
 4697 07ae 0F00     		.2byte	0xf
 4698 07b0 F3       		.byte	0xf3
 4699 07b1 01       		.uleb128 0x1
 4700 07b2 50       		.byte	0x50
 4701 07b3 03       		.byte	0x3
 4702 07b4 00000000 		.4byte	.LANCHOR2
 4703 07b8 22       		.byte	0x22
 4704 07b9 94       		.byte	0x94
 4705 07ba 01       		.byte	0x1
 4706 07bb 08       		.byte	0x8
 4707 07bc FF       		.byte	0xff
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 135


 4708 07bd 1A       		.byte	0x1a
 4709 07be 9F       		.byte	0x9f
 4710 07bf 00000000 		.4byte	0
 4711 07c3 00000000 		.4byte	0
 4712              	.LLST48:
 4713 07c7 0C000000 		.4byte	.LVL152
 4714 07cb 28000000 		.4byte	.LVL159
 4715 07cf 0100     		.2byte	0x1
 4716 07d1 55       		.byte	0x55
 4717 07d2 28000000 		.4byte	.LVL159
 4718 07d6 34000000 		.4byte	.LFE41
 4719 07da 1E00     		.2byte	0x1e
 4720 07dc F3       		.byte	0xf3
 4721 07dd 01       		.uleb128 0x1
 4722 07de 50       		.byte	0x50
 4723 07df 03       		.byte	0x3
 4724 07e0 0C000000 		.4byte	.LANCHOR2+12
 4725 07e4 22       		.byte	0x22
 4726 07e5 94       		.byte	0x94
 4727 07e6 01       		.byte	0x1
 4728 07e7 08       		.byte	0x8
 4729 07e8 FF       		.byte	0xff
 4730 07e9 1A       		.byte	0x1a
 4731 07ea F3       		.byte	0xf3
 4732 07eb 01       		.uleb128 0x1
 4733 07ec 50       		.byte	0x50
 4734 07ed 03       		.byte	0x3
 4735 07ee 00000000 		.4byte	.LANCHOR2
 4736 07f2 22       		.byte	0x22
 4737 07f3 94       		.byte	0x94
 4738 07f4 01       		.byte	0x1
 4739 07f5 08       		.byte	0x8
 4740 07f6 FF       		.byte	0xff
 4741 07f7 1A       		.byte	0x1a
 4742 07f8 22       		.byte	0x22
 4743 07f9 9F       		.byte	0x9f
 4744 07fa 00000000 		.4byte	0
 4745 07fe 00000000 		.4byte	0
 4746              	.LLST49:
 4747 0802 0C000000 		.4byte	.LVL152
 4748 0806 28000000 		.4byte	.LVL158
 4749 080a 0100     		.2byte	0x1
 4750 080c 54       		.byte	0x54
 4751 080d 00000000 		.4byte	0
 4752 0811 00000000 		.4byte	0
 4753              	.LLST50:
 4754 0815 18000000 		.4byte	.LVL154
 4755 0819 1E000000 		.4byte	.LVL155
 4756 081d 0100     		.2byte	0x1
 4757 081f 50       		.byte	0x50
 4758 0820 00000000 		.4byte	0
 4759 0824 00000000 		.4byte	0
 4760              	.LLST51:
 4761 0828 00000000 		.4byte	.LVL160
 4762 082c 04000000 		.4byte	.LVL161
 4763 0830 0100     		.2byte	0x1
 4764 0832 50       		.byte	0x50
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 136


 4765 0833 04000000 		.4byte	.LVL161
 4766 0837 0C000000 		.4byte	.LFE63
 4767 083b 0400     		.2byte	0x4
 4768 083d F3       		.byte	0xf3
 4769 083e 01       		.uleb128 0x1
 4770 083f 50       		.byte	0x50
 4771 0840 9F       		.byte	0x9f
 4772 0841 00000000 		.4byte	0
 4773 0845 00000000 		.4byte	0
 4774              	.LLST52:
 4775 0849 00000000 		.4byte	.LVL162
 4776 084d 04000000 		.4byte	.LVL163
 4777 0851 0100     		.2byte	0x1
 4778 0853 50       		.byte	0x50
 4779 0854 04000000 		.4byte	.LVL163
 4780 0858 0C000000 		.4byte	.LFE64
 4781 085c 0400     		.2byte	0x4
 4782 085e F3       		.byte	0xf3
 4783 085f 01       		.uleb128 0x1
 4784 0860 50       		.byte	0x50
 4785 0861 9F       		.byte	0x9f
 4786 0862 00000000 		.4byte	0
 4787 0866 00000000 		.4byte	0
 4788              	.LLST53:
 4789 086a 00000000 		.4byte	.LVL164
 4790 086e 04000000 		.4byte	.LVL165
 4791 0872 0100     		.2byte	0x1
 4792 0874 50       		.byte	0x50
 4793 0875 04000000 		.4byte	.LVL165
 4794 0879 0C000000 		.4byte	.LFE65
 4795 087d 0400     		.2byte	0x4
 4796 087f F3       		.byte	0xf3
 4797 0880 01       		.uleb128 0x1
 4798 0881 50       		.byte	0x50
 4799 0882 9F       		.byte	0x9f
 4800 0883 00000000 		.4byte	0
 4801 0887 00000000 		.4byte	0
 4802              		.section	.debug_aranges,"",%progbits
 4803 0000 24010000 		.4byte	0x124
 4804 0004 0200     		.2byte	0x2
 4805 0006 00000000 		.4byte	.Ldebug_info0
 4806 000a 04       		.byte	0x4
 4807 000b 00       		.byte	0
 4808 000c 0000     		.2byte	0
 4809 000e 0000     		.2byte	0
 4810 0010 00000000 		.4byte	.LFB34
 4811 0014 40000000 		.4byte	.LFE34-.LFB34
 4812 0018 00000000 		.4byte	.LFB35
 4813 001c 18000000 		.4byte	.LFE35-.LFB35
 4814 0020 00000000 		.4byte	.LFB36
 4815 0024 14000000 		.4byte	.LFE36-.LFB36
 4816 0028 00000000 		.4byte	.LFB37
 4817 002c 34000000 		.4byte	.LFE37-.LFB37
 4818 0030 00000000 		.4byte	.LFB42
 4819 0034 0C000000 		.4byte	.LFE42-.LFB42
 4820 0038 00000000 		.4byte	.LFB43
 4821 003c 0C000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 137


 4822 0040 00000000 		.4byte	.LFB44
 4823 0044 0C000000 		.4byte	.LFE44-.LFB44
 4824 0048 00000000 		.4byte	.LFB45
 4825 004c 0C000000 		.4byte	.LFE45-.LFB45
 4826 0050 00000000 		.4byte	.LFB46
 4827 0054 0C000000 		.4byte	.LFE46-.LFB46
 4828 0058 00000000 		.4byte	.LFB47
 4829 005c 0C000000 		.4byte	.LFE47-.LFB47
 4830 0060 00000000 		.4byte	.LFB48
 4831 0064 0C000000 		.4byte	.LFE48-.LFB48
 4832 0068 00000000 		.4byte	.LFB49
 4833 006c 0C000000 		.4byte	.LFE49-.LFB49
 4834 0070 00000000 		.4byte	.LFB50
 4835 0074 0C000000 		.4byte	.LFE50-.LFB50
 4836 0078 00000000 		.4byte	.LFB51
 4837 007c 0C000000 		.4byte	.LFE51-.LFB51
 4838 0080 00000000 		.4byte	.LFB52
 4839 0084 0C000000 		.4byte	.LFE52-.LFB52
 4840 0088 00000000 		.4byte	.LFB53
 4841 008c 0C000000 		.4byte	.LFE53-.LFB53
 4842 0090 00000000 		.4byte	.LFB54
 4843 0094 0C000000 		.4byte	.LFE54-.LFB54
 4844 0098 00000000 		.4byte	.LFB55
 4845 009c 0C000000 		.4byte	.LFE55-.LFB55
 4846 00a0 00000000 		.4byte	.LFB56
 4847 00a4 A8000000 		.4byte	.LFE56-.LFB56
 4848 00a8 00000000 		.4byte	.LFB57
 4849 00ac 2C000000 		.4byte	.LFE57-.LFB57
 4850 00b0 00000000 		.4byte	.LFB58
 4851 00b4 20000000 		.4byte	.LFE58-.LFB58
 4852 00b8 00000000 		.4byte	.LFB59
 4853 00bc 2C000000 		.4byte	.LFE59-.LFB59
 4854 00c0 00000000 		.4byte	.LFB60
 4855 00c4 2C000000 		.4byte	.LFE60-.LFB60
 4856 00c8 00000000 		.4byte	.LFB61
 4857 00cc 1C000000 		.4byte	.LFE61-.LFB61
 4858 00d0 00000000 		.4byte	.LFB62
 4859 00d4 0A000000 		.4byte	.LFE62-.LFB62
 4860 00d8 00000000 		.4byte	.LFB38
 4861 00dc 10010000 		.4byte	.LFE38-.LFB38
 4862 00e0 00000000 		.4byte	.LFB39
 4863 00e4 10000000 		.4byte	.LFE39-.LFB39
 4864 00e8 00000000 		.4byte	.LFB40
 4865 00ec 28000000 		.4byte	.LFE40-.LFB40
 4866 00f0 00000000 		.4byte	.LFB41
 4867 00f4 34000000 		.4byte	.LFE41-.LFB41
 4868 00f8 00000000 		.4byte	.LFB63
 4869 00fc 0C000000 		.4byte	.LFE63-.LFB63
 4870 0100 00000000 		.4byte	.LFB64
 4871 0104 0C000000 		.4byte	.LFE64-.LFB64
 4872 0108 00000000 		.4byte	.LFB65
 4873 010c 0C000000 		.4byte	.LFE65-.LFB65
 4874 0110 00000000 		.4byte	.LFB66
 4875 0114 10000000 		.4byte	.LFE66-.LFB66
 4876 0118 00000000 		.4byte	.LFB67
 4877 011c 10000000 		.4byte	.LFE67-.LFB67
 4878 0120 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 138


 4879 0124 00000000 		.4byte	0
 4880              		.section	.debug_ranges,"",%progbits
 4881              	.Ldebug_ranges0:
 4882 0000 00000000 		.4byte	.LFB34
 4883 0004 40000000 		.4byte	.LFE34
 4884 0008 00000000 		.4byte	.LFB35
 4885 000c 18000000 		.4byte	.LFE35
 4886 0010 00000000 		.4byte	.LFB36
 4887 0014 14000000 		.4byte	.LFE36
 4888 0018 00000000 		.4byte	.LFB37
 4889 001c 34000000 		.4byte	.LFE37
 4890 0020 00000000 		.4byte	.LFB42
 4891 0024 0C000000 		.4byte	.LFE42
 4892 0028 00000000 		.4byte	.LFB43
 4893 002c 0C000000 		.4byte	.LFE43
 4894 0030 00000000 		.4byte	.LFB44
 4895 0034 0C000000 		.4byte	.LFE44
 4896 0038 00000000 		.4byte	.LFB45
 4897 003c 0C000000 		.4byte	.LFE45
 4898 0040 00000000 		.4byte	.LFB46
 4899 0044 0C000000 		.4byte	.LFE46
 4900 0048 00000000 		.4byte	.LFB47
 4901 004c 0C000000 		.4byte	.LFE47
 4902 0050 00000000 		.4byte	.LFB48
 4903 0054 0C000000 		.4byte	.LFE48
 4904 0058 00000000 		.4byte	.LFB49
 4905 005c 0C000000 		.4byte	.LFE49
 4906 0060 00000000 		.4byte	.LFB50
 4907 0064 0C000000 		.4byte	.LFE50
 4908 0068 00000000 		.4byte	.LFB51
 4909 006c 0C000000 		.4byte	.LFE51
 4910 0070 00000000 		.4byte	.LFB52
 4911 0074 0C000000 		.4byte	.LFE52
 4912 0078 00000000 		.4byte	.LFB53
 4913 007c 0C000000 		.4byte	.LFE53
 4914 0080 00000000 		.4byte	.LFB54
 4915 0084 0C000000 		.4byte	.LFE54
 4916 0088 00000000 		.4byte	.LFB55
 4917 008c 0C000000 		.4byte	.LFE55
 4918 0090 00000000 		.4byte	.LFB56
 4919 0094 A8000000 		.4byte	.LFE56
 4920 0098 00000000 		.4byte	.LFB57
 4921 009c 2C000000 		.4byte	.LFE57
 4922 00a0 00000000 		.4byte	.LFB58
 4923 00a4 20000000 		.4byte	.LFE58
 4924 00a8 00000000 		.4byte	.LFB59
 4925 00ac 2C000000 		.4byte	.LFE59
 4926 00b0 00000000 		.4byte	.LFB60
 4927 00b4 2C000000 		.4byte	.LFE60
 4928 00b8 00000000 		.4byte	.LFB61
 4929 00bc 1C000000 		.4byte	.LFE61
 4930 00c0 00000000 		.4byte	.LFB62
 4931 00c4 0A000000 		.4byte	.LFE62
 4932 00c8 00000000 		.4byte	.LFB38
 4933 00cc 10010000 		.4byte	.LFE38
 4934 00d0 00000000 		.4byte	.LFB39
 4935 00d4 10000000 		.4byte	.LFE39
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 139


 4936 00d8 00000000 		.4byte	.LFB40
 4937 00dc 28000000 		.4byte	.LFE40
 4938 00e0 00000000 		.4byte	.LFB41
 4939 00e4 34000000 		.4byte	.LFE41
 4940 00e8 00000000 		.4byte	.LFB63
 4941 00ec 0C000000 		.4byte	.LFE63
 4942 00f0 00000000 		.4byte	.LFB64
 4943 00f4 0C000000 		.4byte	.LFE64
 4944 00f8 00000000 		.4byte	.LFB65
 4945 00fc 0C000000 		.4byte	.LFE65
 4946 0100 00000000 		.4byte	.LFB66
 4947 0104 10000000 		.4byte	.LFE66
 4948 0108 00000000 		.4byte	.LFB67
 4949 010c 10000000 		.4byte	.LFE67
 4950 0110 00000000 		.4byte	0
 4951 0114 00000000 		.4byte	0
 4952              		.section	.debug_line,"",%progbits
 4953              	.Ldebug_line0:
 4954 0000 BC030000 		.section	.debug_str,"MS",%progbits,1
 4954      02006C00 
 4954      00000201 
 4954      FB0E0D00 
 4954      01010101 
 4955              	.LASF10:
 4956 0000 75696E74 		.ascii	"uint16\000"
 4956      313600
 4957              	.LASF79:
 4958 0007 66696C74 		.ascii	"filteredRawData\000"
 4958      65726564 
 4958      52617744 
 4958      61746100 
 4959              	.LASF86:
 4960 0017 6C617374 		.ascii	"lastSensor\000"
 4960      53656E73 
 4960      6F7200
 4961              	.LASF117:
 4962 0022 433A5C55 		.ascii	"C:\\Users\\11401393\\Documents\\PSoC Creator\\CE976"
 4962      73657273 
 4962      5C313134 
 4962      30313339 
 4962      335C446F 
 4963 0050 33342050 		.ascii	"34 PSoC 4 Breathing LED\\SoftwarePianPsoc.cydsn\000"
 4963      536F4320 
 4963      34204272 
 4963      65617468 
 4963      696E6720 
 4964              	.LASF107:
 4965 007f 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4965      656E7365 
 4965      5F726177 
 4965      44617461 
 4965      496E6465 
 4966              	.LASF99:
 4967 0095 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4967      656E7365 
 4967      5F73656E 
 4967      736F724F 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 140


 4967      6E4D6173 
 4968              	.LASF54:
 4969 00ab 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4969      656E7365 
 4969      5F476574 
 4969      4E656761 
 4969      74697665 
 4970              	.LASF64:
 4971 00ce 66696E67 		.ascii	"fingerThreshold\000"
 4971      65725468 
 4971      72657368 
 4971      6F6C6400 
 4972              	.LASF58:
 4973 00de 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4973      656E7365 
 4973      5F536574 
 4973      4E656761 
 4973      74697665 
 4974              	.LASF83:
 4975 0101 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4975      656E7365 
 4975      5F557064 
 4975      61746557 
 4975      69646765 
 4976              	.LASF25:
 4977 011f 70747247 		.ascii	"ptrGetRaw\000"
 4977      65745261 
 4977      7700
 4978              	.LASF89:
 4979 0129 43617053 		.ascii	"CapSense_GetDebounce\000"
 4979      656E7365 
 4979      5F476574 
 4979      4465626F 
 4979      756E6365 
 4980              	.LASF73:
 4981 013e 43617053 		.ascii	"CapSense_MedianFilter\000"
 4981      656E7365 
 4981      5F4D6564 
 4981      69616E46 
 4981      696C7465 
 4982              	.LASF115:
 4983 0154 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4983      4320342E 
 4983      382E3420 
 4983      32303134 
 4983      30353236 
 4984 0187 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4984      20726576 
 4984      6973696F 
 4984      6E203231 
 4984      31333538 
 4985 01ba 67202D66 		.ascii	"g -ffunction-sections\000"
 4985      66756E63 
 4985      74696F6E 
 4985      2D736563 
 4985      74696F6E 
 4986              	.LASF7:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 141


 4987 01d0 6C6F6E67 		.ascii	"long long unsigned int\000"
 4987      206C6F6E 
 4987      6720756E 
 4987      7369676E 
 4987      65642069 
 4988              	.LASF98:
 4989 01e7 43617053 		.ascii	"CapSense_sensorSignal\000"
 4989      656E7365 
 4989      5F73656E 
 4989      736F7253 
 4989      69676E61 
 4990              	.LASF52:
 4991 01fd 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4991      656E7365 
 4991      5F476574 
 4991      4E6F6973 
 4991      65546872 
 4992              	.LASF43:
 4993 0218 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4993      656E7365 
 4993      5F496E69 
 4993      7469616C 
 4993      697A6545 
 4994              	.LASF82:
 4995 023c 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4995      656E7365 
 4995      5F557064 
 4995      61746545 
 4995      6E61626C 
 4996              	.LASF6:
 4997 025c 6C6F6E67 		.ascii	"long long int\000"
 4997      206C6F6E 
 4997      6720696E 
 4997      7400
 4998              	.LASF0:
 4999 026a 7369676E 		.ascii	"signed char\000"
 4999      65642063 
 4999      68617200 
 5000              	.LASF72:
 5001 0276 43617053 		.ascii	"CapSense_DisableWidget\000"
 5001      656E7365 
 5001      5F446973 
 5001      61626C65 
 5001      57696467 
 5002              	.LASF67:
 5003 028d 72617749 		.ascii	"rawIndex\000"
 5003      6E646578 
 5003      00
 5004              	.LASF24:
 5005 0296 6E756D62 		.ascii	"numberOfSensors\000"
 5005      65724F66 
 5005      53656E73 
 5005      6F727300 
 5006              	.LASF21:
 5007 02a6 77696467 		.ascii	"widgetNubmersTbl\000"
 5007      65744E75 
 5007      626D6572 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 142


 5007      7354626C 
 5007      00
 5008              	.LASF47:
 5009 02b7 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5009      656E7365 
 5009      5F476574 
 5009      42617365 
 5009      6C696E65 
 5010              	.LASF69:
 5011 02d0 73746174 		.ascii	"state\000"
 5011      6500
 5012              	.LASF4:
 5013 02d6 6C6F6E67 		.ascii	"long int\000"
 5013      20696E74 
 5013      00
 5014              	.LASF70:
 5015 02df 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5015      656E7365 
 5015      5F436865 
 5015      636B4973 
 5015      416E7957 
 5016              	.LASF9:
 5017 02ff 75696E74 		.ascii	"uint8\000"
 5017      3800
 5018              	.LASF101:
 5019 0305 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5019      656E7365 
 5019      5F6C6F77 
 5019      42617365 
 5019      6C696E65 
 5020              	.LASF91:
 5021 031f 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5021      656E7365 
 5021      5F446973 
 5021      61626C65 
 5021      52617744 
 5022              	.LASF13:
 5023 033e 646F7562 		.ascii	"double\000"
 5023      6C6500
 5024              	.LASF95:
 5025 0345 43617053 		.ascii	"CapSense_widgetNumber\000"
 5025      656E7365 
 5025      5F776964 
 5025      6765744E 
 5025      756D6265 
 5026              	.LASF11:
 5027 035b 75696E74 		.ascii	"uint32\000"
 5027      333200
 5028              	.LASF65:
 5029 0362 68797374 		.ascii	"hysteresis\000"
 5029      65726573 
 5029      697300
 5030              	.LASF55:
 5031 036d 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5031      656E7365 
 5031      5F536574 
 5031      46696E67 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 143


 5031      65725468 
 5032              	.LASF59:
 5033 0389 43617053 		.ascii	"CapSense_SetDebounce\000"
 5033      656E7365 
 5033      5F536574 
 5033      4465626F 
 5033      756E6365 
 5034              	.LASF34:
 5035 039e 73656E73 		.ascii	"sensetivitySeed\000"
 5035      65746976 
 5035      69747953 
 5035      65656400 
 5036              	.LASF33:
 5037 03ae 746F7461 		.ascii	"totalSensorsNum\000"
 5037      6C53656E 
 5037      736F7273 
 5037      4E756D00 
 5038              	.LASF50:
 5039 03be 76616C75 		.ascii	"value\000"
 5039      6500
 5040              	.LASF60:
 5041 03c4 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5041      656E7365 
 5041      5F536574 
 5041      4C6F7742 
 5041      6173656C 
 5042              	.LASF74:
 5043 03e1 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5043      656E7365 
 5043      5F494952 
 5043      3446696C 
 5043      74657200 
 5044              	.LASF112:
 5045 03f5 43617053 		.ascii	"CapSense_ScanSensor\000"
 5045      656E7365 
 5045      5F536361 
 5045      6E53656E 
 5045      736F7200 
 5046              	.LASF8:
 5047 0409 756E7369 		.ascii	"unsigned int\000"
 5047      676E6564 
 5047      20696E74 
 5047      00
 5048              	.LASF5:
 5049 0416 6C6F6E67 		.ascii	"long unsigned int\000"
 5049      20756E73 
 5049      69676E65 
 5049      6420696E 
 5049      7400
 5050              	.LASF97:
 5051 0428 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5051      656E7365 
 5051      5F73656E 
 5051      736F7242 
 5051      6173656C 
 5052              	.LASF22:
 5053 0443 7265736F 		.ascii	"resolutionsTbl\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 144


 5053      6C757469 
 5053      6F6E7354 
 5053      626C00
 5054              	.LASF28:
 5055 0452 70747247 		.ascii	"ptrGetBitValue\000"
 5055      65744269 
 5055      7456616C 
 5055      756500
 5056              	.LASF106:
 5057 0461 43617053 		.ascii	"CapSense_debounce\000"
 5057      656E7365 
 5057      5F646562 
 5057      6F756E63 
 5057      6500
 5058              	.LASF46:
 5059 0473 64617461 		.ascii	"data\000"
 5059      00
 5060              	.LASF3:
 5061 0478 73686F72 		.ascii	"short unsigned int\000"
 5061      7420756E 
 5061      7369676E 
 5061      65642069 
 5061      6E7400
 5062              	.LASF18:
 5063 048b 73656E73 		.ascii	"sensetivityTbl\000"
 5063      65746976 
 5063      69747954 
 5063      626C00
 5064              	.LASF40:
 5065 049a 73656E73 		.ascii	"sensor\000"
 5065      6F7200
 5066              	.LASF94:
 5067 04a1 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5067      656E7365 
 5067      5F73656E 
 5067      736F7245 
 5067      6E61626C 
 5068              	.LASF108:
 5069 04bb 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5069      656E7365 
 5069      5F6E756D 
 5069      6265724F 
 5069      6653656E 
 5070              	.LASF81:
 5071 04d4 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5071      656E7365 
 5071      5F557064 
 5071      61746553 
 5071      656E736F 
 5072              	.LASF76:
 5073 04f2 63616C63 		.ascii	"calc\000"
 5073      00
 5074              	.LASF19:
 5075 04f7 63686172 		.ascii	"chargeDivTbl\000"
 5075      67654469 
 5075      7654626C 
 5075      00
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 145


 5076              	.LASF118:
 5077 0504 43617053 		.ascii	"CapSense_IsBusy\000"
 5077      656E7365 
 5077      5F497342 
 5077      75737900 
 5078              	.LASF116:
 5079 0514 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5079      6E657261 
 5079      7465645F 
 5079      536F7572 
 5079      63655C50 
 5080              	.LASF48:
 5081 053d 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5081      656E7365 
 5081      5F476574 
 5081      44696666 
 5081      436F756E 
 5082              	.LASF36:
 5083 0557 706F696E 		.ascii	"pointers\000"
 5083      74657273 
 5083      00
 5084              	.LASF62:
 5085 0560 6465626F 		.ascii	"debounce\000"
 5085      756E6365 
 5085      00
 5086              	.LASF35:
 5087 0569 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5087      6B467265 
 5087      715F4D48 
 5087      7A00
 5088              	.LASF15:
 5089 0577 73697A65 		.ascii	"sizetype\000"
 5089      74797065 
 5089      00
 5090              	.LASF71:
 5091 0580 43617053 		.ascii	"CapSense_EnableWidget\000"
 5091      656E7365 
 5091      5F456E61 
 5091      626C6557 
 5091      69646765 
 5092              	.LASF75:
 5093 0596 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5093      656E7365 
 5093      5F557064 
 5093      61746542 
 5093      6173656C 
 5094              	.LASF39:
 5095 05b9 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5095      656E7365 
 5095      5F496E69 
 5095      7469616C 
 5095      697A6553 
 5096              	.LASF57:
 5097 05db 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5097      656E7365 
 5097      5F536574 
 5097      46696E67 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 146


 5097      65724879 
 5098              	.LASF61:
 5099 05f8 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5099      656E7365 
 5099      5F436865 
 5099      636B4973 
 5099      53656E73 
 5100              	.LASF16:
 5101 0615 69646163 		.ascii	"idac1LevelsTbl\000"
 5101      314C6576 
 5101      656C7354 
 5101      626C00
 5102              	.LASF17:
 5103 0624 69646163 		.ascii	"idac2LevelsTbl\000"
 5103      324C6576 
 5103      656C7354 
 5103      626C00
 5104              	.LASF103:
 5105 0633 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5105      656E7365 
 5105      5F6E6F69 
 5105      73655468 
 5105      72657368 
 5106              	.LASF102:
 5107 064b 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5107      656E7365 
 5107      5F66696E 
 5107      67657254 
 5107      68726573 
 5108              	.LASF113:
 5109 0664 43617053 		.ascii	"CapSense_SetBitValue\000"
 5109      656E7365 
 5109      5F536574 
 5109      42697456 
 5109      616C7565 
 5110              	.LASF109:
 5111 0679 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5111      656E7365 
 5111      5F726177 
 5111      46696C74 
 5111      65724461 
 5112              	.LASF110:
 5113 0691 43617053 		.ascii	"CapSense_config\000"
 5113      656E7365 
 5113      5F636F6E 
 5113      66696700 
 5114              	.LASF12:
 5115 06a1 666C6F61 		.ascii	"float\000"
 5115      7400
 5116              	.LASF88:
 5117 06a7 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5117      656E7365 
 5117      5F476574 
 5117      4C6F7742 
 5117      6173656C 
 5118              	.LASF66:
 5119 06c4 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 147


 5119      656E7365 
 5119      5F436865 
 5119      636B4973 
 5119      57696467 
 5120              	.LASF1:
 5121 06e1 756E7369 		.ascii	"unsigned char\000"
 5121      676E6564 
 5121      20636861 
 5121      7200
 5122              	.LASF41:
 5123 06ef 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5123      656E7365 
 5123      5F496E69 
 5123      7469616C 
 5123      697A6541 
 5124              	.LASF27:
 5125 070f 70747252 		.ascii	"ptrReadSensorRaw\000"
 5125      65616453 
 5125      656E736F 
 5125      72526177 
 5125      00
 5126              	.LASF45:
 5127 0720 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5127      656E7365 
 5127      5F536574 
 5127      42617365 
 5127      6C696E65 
 5128              	.LASF80:
 5129 0739 6E6F6973 		.ascii	"noiseThreshold\000"
 5129      65546872 
 5129      6573686F 
 5129      6C6400
 5130              	.LASF2:
 5131 0748 73686F72 		.ascii	"short int\000"
 5131      7420696E 
 5131      7400
 5132              	.LASF42:
 5133 0752 77696467 		.ascii	"widget\000"
 5133      657400
 5134              	.LASF20:
 5135 0759 6D6F6444 		.ascii	"modDivTbl\000"
 5135      69765462 
 5135      6C00
 5136              	.LASF44:
 5137 0763 69735365 		.ascii	"isSensorEnabled\000"
 5137      6E736F72 
 5137      456E6162 
 5137      6C656400 
 5138              	.LASF38:
 5139 0773 43617053 		.ascii	"CapSense_BaseInit\000"
 5139      656E7365 
 5139      5F426173 
 5139      65496E69 
 5139      7400
 5140              	.LASF37:
 5141 0785 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_20\000"
 5141      656E7365 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 148


 5141      5F434F4E 
 5141      4649475F 
 5141      54595045 
 5142              	.LASF84:
 5143 07a3 73656E73 		.ascii	"sensorsPerWidget\000"
 5143      6F727350 
 5143      65725769 
 5143      64676574 
 5143      00
 5144              	.LASF100:
 5145 07b4 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5145      656E7365 
 5145      5F6C6F77 
 5145      42617365 
 5145      6C696E65 
 5146              	.LASF56:
 5147 07d1 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5147      656E7365 
 5147      5F536574 
 5147      4E6F6973 
 5147      65546872 
 5148              	.LASF96:
 5149 07ec 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5149      656E7365 
 5149      5F73656E 
 5149      736F7242 
 5149      6173656C 
 5150              	.LASF105:
 5151 0804 43617053 		.ascii	"CapSense_hysteresis\000"
 5151      656E7365 
 5151      5F687973 
 5151      74657265 
 5151      73697300 
 5152              	.LASF14:
 5153 0818 63686172 		.ascii	"char\000"
 5153      00
 5154              	.LASF111:
 5155 081d 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5155      656E7365 
 5155      5F656E61 
 5155      626C6552 
 5155      61774669 
 5156              	.LASF53:
 5157 0837 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5157      656E7365 
 5157      5F476574 
 5157      46696E67 
 5157      65724879 
 5158              	.LASF85:
 5159 0854 66697273 		.ascii	"firstSensor\000"
 5159      7453656E 
 5159      736F7200 
 5160              	.LASF63:
 5161 0860 6465626F 		.ascii	"debounceIndex\000"
 5161      756E6365 
 5161      496E6465 
 5161      7800
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 149


 5162              	.LASF51:
 5163 086e 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5163      656E7365 
 5163      5F476574 
 5163      46696E67 
 5163      65725468 
 5164              	.LASF26:
 5165 088a 70747250 		.ascii	"ptrPreScan\000"
 5165      72655363 
 5165      616E00
 5166              	.LASF30:
 5167 0895 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_20\000"
 5167      656E7365 
 5167      5F434F4E 
 5167      4649475F 
 5167      54595045 
 5168              	.LASF121:
 5169 08bc 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 5169      656E7365 
 5169      5F557064 
 5169      61746554 
 5169      68726573 
 5170              	.LASF77:
 5171 08d6 7369676E 		.ascii	"sign\000"
 5171      00
 5172              	.LASF68:
 5173 08db 6E756D4F 		.ascii	"numOfSensors\000"
 5173      6653656E 
 5173      736F7273 
 5173      00
 5174              	.LASF31:
 5175 08e8 746F7461 		.ascii	"totalScanslotsNum\000"
 5175      6C536361 
 5175      6E736C6F 
 5175      74734E75 
 5175      6D00
 5176              	.LASF93:
 5177 08fa 43617053 		.ascii	"CapSense_sensorRaw\000"
 5177      656E7365 
 5177      5F73656E 
 5177      736F7252 
 5177      617700
 5178              	.LASF49:
 5179 090d 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5179      656E7365 
 5179      5F536574 
 5179      44696666 
 5179      436F756E 
 5180              	.LASF29:
 5181 0927 70747253 		.ascii	"ptrSetBitValue\000"
 5181      65744269 
 5181      7456616C 
 5181      756500
 5182              	.LASF120:
 5183 0936 43617053 		.ascii	"CapSense_GetBitValue\000"
 5183      656E7365 
 5183      5F476574 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccv2tvsi.s 			page 150


 5183      42697456 
 5183      616C7565 
 5184              	.LASF87:
 5185 094b 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5185      656E7365 
 5185      5F476574 
 5185      57696467 
 5185      65744E75 
 5186              	.LASF119:
 5187 0964 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 5187      656E7365 
 5187      5F536361 
 5187      6E456E61 
 5187      626C6564 
 5188              	.LASF90:
 5189 0980 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5189      656E7365 
 5189      5F456E61 
 5189      626C6552 
 5189      61774461 
 5190              	.LASF92:
 5191 099e 43617053 		.ascii	"CapSense_debounceCounter\000"
 5191      656E7365 
 5191      5F646562 
 5191      6F756E63 
 5191      65436F75 
 5192              	.LASF23:
 5193 09b7 72617744 		.ascii	"rawDataIndex\000"
 5193      61746149 
 5193      6E646578 
 5193      00
 5194              	.LASF78:
 5195 09c4 74656D70 		.ascii	"tempRaw\000"
 5195      52617700 
 5196              	.LASF114:
 5197 09cc 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_20\000"
 5197      7572654E 
 5197      6F697365 
 5197      456E7665 
 5197      6C6F7065 
 5198              	.LASF32:
 5199 09ea 746F7461 		.ascii	"totalWidgetsNum\000"
 5199      6C576964 
 5199      67657473 
 5199      4E756D00 
 5200              	.LASF104:
 5201 09fa 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5201      656E7365 
 5201      5F6E6567 
 5201      61746976 
 5201      654E6F69 
 5202              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

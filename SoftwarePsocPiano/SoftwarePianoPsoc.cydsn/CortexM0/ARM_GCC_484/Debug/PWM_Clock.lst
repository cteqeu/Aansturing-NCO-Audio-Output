ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_Clock.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Clock_StartEx,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_Clock_StartEx
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Clock_StartEx, %function
  23              	PWM_Clock_StartEx:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_Clock.c"
   1:.\Generated_Source\PSoC4/PWM_Clock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_Clock.c **** * File Name: PWM_Clock.c
   3:.\Generated_Source\PSoC4/PWM_Clock.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/PWM_Clock.c **** *
   5:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Description:
   6:.\Generated_Source\PSoC4/PWM_Clock.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:.\Generated_Source\PSoC4/PWM_Clock.c **** *
   8:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Note:
   9:.\Generated_Source\PSoC4/PWM_Clock.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/PWM_Clock.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  12:.\Generated_Source\PSoC4/PWM_Clock.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_Clock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_Clock.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_Clock.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_Clock.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_Clock.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  19:.\Generated_Source\PSoC4/PWM_Clock.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC4/PWM_Clock.c **** #include "PWM_Clock.h"
  21:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  22:.\Generated_Source\PSoC4/PWM_Clock.c **** #if defined CYREG_PERI_DIV_CMD
  23:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  24:.\Generated_Source\PSoC4/PWM_Clock.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_Clock.c **** * Function Name: PWM_Clock_StartEx
  26:.\Generated_Source\PSoC4/PWM_Clock.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  28:.\Generated_Source\PSoC4/PWM_Clock.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Starts the clock, aligned to the specified running clock.
  30:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  31:.\Generated_Source\PSoC4/PWM_Clock.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_Clock.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_Clock.c **** *    clock is started.
  34:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  35:.\Generated_Source\PSoC4/PWM_Clock.c **** * Returns:
  36:.\Generated_Source\PSoC4/PWM_Clock.c **** *  None
  37:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  38:.\Generated_Source\PSoC4/PWM_Clock.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM_Clock.c **** void PWM_Clock_StartEx(uint32 alignClkDiv)
  40:.\Generated_Source\PSoC4/PWM_Clock.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  28              	.LVL0:
  41:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* Make sure any previous start command has finished. */
  42:.\Generated_Source\PSoC4/PWM_Clock.c ****     while((PWM_Clock_CMD_REG & PWM_Clock_CMD_ENABLE_MASK) != 0u)
  29              		.loc 1 42 0
  30 0000 044A     		ldr	r2, .L4
  31              	.L2:
  32              		.loc 1 42 0 is_stmt 0 discriminator 1
  33 0002 1368     		ldr	r3, [r2]
  34 0004 002B     		cmp	r3, #0
  35 0006 FCDB     		blt	.L2
  43:.\Generated_Source\PSoC4/PWM_Clock.c ****     {
  44:.\Generated_Source\PSoC4/PWM_Clock.c ****     }
  45:.\Generated_Source\PSoC4/PWM_Clock.c ****     
  46:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:.\Generated_Source\PSoC4/PWM_Clock.c ****     PWM_Clock_CMD_REG =
  48:.\Generated_Source\PSoC4/PWM_Clock.c ****         ((uint32)PWM_Clock__DIV_ID << PWM_Clock_CMD_DIV_SHIFT)|
  49:.\Generated_Source\PSoC4/PWM_Clock.c ****         (alignClkDiv << PWM_Clock_CMD_PA_DIV_SHIFT) |
  36              		.loc 1 49 0 is_stmt 1
  37 0008 0002     		lsl	r0, r0, #8
  38              	.LVL1:
  39 000a 034B     		ldr	r3, .L4+4
  40 000c 1843     		orr	r0, r3
  47:.\Generated_Source\PSoC4/PWM_Clock.c ****     PWM_Clock_CMD_REG =
  41              		.loc 1 47 0
  42 000e 014B     		ldr	r3, .L4
  43 0010 1860     		str	r0, [r3]
  50:.\Generated_Source\PSoC4/PWM_Clock.c ****         (uint32)PWM_Clock_CMD_ENABLE_MASK;
  51:.\Generated_Source\PSoC4/PWM_Clock.c **** }
  44              		.loc 1 51 0
  45              		@ sp needed
  46 0012 7047     		bx	lr
  47              	.L5:
  48              		.align	2
  49              	.L4:
  50 0014 00000140 		.word	1073807360
  51 0018 80000080 		.word	-2147483520
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	PWM_Clock_StartEx, .-PWM_Clock_StartEx
  55              		.section	.text.PWM_Clock_Stop,"ax",%progbits
  56              		.align	2
  57              		.global	PWM_Clock_Stop
  58              		.code	16
  59              		.thumb_func
  60              		.type	PWM_Clock_Stop, %function
  61              	PWM_Clock_Stop:
  62              	.LFB1:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 3


  52:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  53:.\Generated_Source\PSoC4/PWM_Clock.c **** #else
  54:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  55:.\Generated_Source\PSoC4/PWM_Clock.c **** /*******************************************************************************
  56:.\Generated_Source\PSoC4/PWM_Clock.c **** * Function Name: PWM_Clock_Start
  57:.\Generated_Source\PSoC4/PWM_Clock.c **** ********************************************************************************
  58:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  59:.\Generated_Source\PSoC4/PWM_Clock.c **** * Summary:
  60:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Starts the clock.
  61:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  62:.\Generated_Source\PSoC4/PWM_Clock.c **** * Parameters:
  63:.\Generated_Source\PSoC4/PWM_Clock.c **** *  None
  64:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  65:.\Generated_Source\PSoC4/PWM_Clock.c **** * Returns:
  66:.\Generated_Source\PSoC4/PWM_Clock.c **** *  None
  67:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  68:.\Generated_Source\PSoC4/PWM_Clock.c **** *******************************************************************************/
  69:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  70:.\Generated_Source\PSoC4/PWM_Clock.c **** void PWM_Clock_Start(void)
  71:.\Generated_Source\PSoC4/PWM_Clock.c **** {
  72:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* Set the bit to enable the clock. */
  73:.\Generated_Source\PSoC4/PWM_Clock.c ****     PWM_Clock_ENABLE_REG |= PWM_Clock__ENABLE_MASK;
  74:.\Generated_Source\PSoC4/PWM_Clock.c **** }
  75:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  76:.\Generated_Source\PSoC4/PWM_Clock.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  78:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  79:.\Generated_Source\PSoC4/PWM_Clock.c **** /*******************************************************************************
  80:.\Generated_Source\PSoC4/PWM_Clock.c **** * Function Name: PWM_Clock_Stop
  81:.\Generated_Source\PSoC4/PWM_Clock.c **** ********************************************************************************
  82:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  83:.\Generated_Source\PSoC4/PWM_Clock.c **** * Summary:
  84:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Stops the clock and returns immediately. This API does not require the
  85:.\Generated_Source\PSoC4/PWM_Clock.c **** *  source clock to be running but may return before the hardware is actually
  86:.\Generated_Source\PSoC4/PWM_Clock.c **** *  disabled.
  87:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  88:.\Generated_Source\PSoC4/PWM_Clock.c **** * Parameters:
  89:.\Generated_Source\PSoC4/PWM_Clock.c **** *  None
  90:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  91:.\Generated_Source\PSoC4/PWM_Clock.c **** * Returns:
  92:.\Generated_Source\PSoC4/PWM_Clock.c **** *  None
  93:.\Generated_Source\PSoC4/PWM_Clock.c **** *
  94:.\Generated_Source\PSoC4/PWM_Clock.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/PWM_Clock.c **** void PWM_Clock_Stop(void)
  96:.\Generated_Source\PSoC4/PWM_Clock.c **** {
  63              		.loc 1 96 0
  64              		.cfi_startproc
  97:.\Generated_Source\PSoC4/PWM_Clock.c **** #if defined CYREG_PERI_DIV_CMD
  98:.\Generated_Source\PSoC4/PWM_Clock.c **** 
  99:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* Make sure any previous start command has finished. */
 100:.\Generated_Source\PSoC4/PWM_Clock.c ****     while((PWM_Clock_CMD_REG & PWM_Clock_CMD_ENABLE_MASK) != 0u)
  65              		.loc 1 100 0
  66 0000 034A     		ldr	r2, .L9
  67              	.L7:
  68              		.loc 1 100 0 is_stmt 0 discriminator 1
  69 0002 1368     		ldr	r3, [r2]
  70 0004 002B     		cmp	r3, #0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 4


  71 0006 FCDB     		blt	.L7
 101:.\Generated_Source\PSoC4/PWM_Clock.c ****     {
 102:.\Generated_Source\PSoC4/PWM_Clock.c ****     }
 103:.\Generated_Source\PSoC4/PWM_Clock.c ****     
 104:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:.\Generated_Source\PSoC4/PWM_Clock.c ****     PWM_Clock_CMD_REG =
  72              		.loc 1 105 0 is_stmt 1
  73 0008 024A     		ldr	r2, .L9+4
  74 000a 014B     		ldr	r3, .L9
  75 000c 1A60     		str	r2, [r3]
 106:.\Generated_Source\PSoC4/PWM_Clock.c ****         ((uint32)PWM_Clock__DIV_ID << PWM_Clock_CMD_DIV_SHIFT)|
 107:.\Generated_Source\PSoC4/PWM_Clock.c ****         ((uint32)PWM_Clock_CMD_DISABLE_MASK);
 108:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 109:.\Generated_Source\PSoC4/PWM_Clock.c **** #else
 110:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 111:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* Clear the bit to disable the clock. */
 112:.\Generated_Source\PSoC4/PWM_Clock.c ****     PWM_Clock_ENABLE_REG &= (uint32)(~PWM_Clock__ENABLE_MASK);
 113:.\Generated_Source\PSoC4/PWM_Clock.c ****     
 114:.\Generated_Source\PSoC4/PWM_Clock.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:.\Generated_Source\PSoC4/PWM_Clock.c **** }
  76              		.loc 1 115 0
  77              		@ sp needed
  78 000e 7047     		bx	lr
  79              	.L10:
  80              		.align	2
  81              	.L9:
  82 0010 00000140 		.word	1073807360
  83 0014 80000040 		.word	1073741952
  84              		.cfi_endproc
  85              	.LFE1:
  86              		.size	PWM_Clock_Stop, .-PWM_Clock_Stop
  87              		.section	.text.PWM_Clock_SetFractionalDividerRegister,"ax",%progbits
  88              		.align	2
  89              		.global	PWM_Clock_SetFractionalDividerRegister
  90              		.code	16
  91              		.thumb_func
  92              		.type	PWM_Clock_SetFractionalDividerRegister, %function
  93              	PWM_Clock_SetFractionalDividerRegister:
  94              	.LFB2:
 116:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 117:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 118:.\Generated_Source\PSoC4/PWM_Clock.c **** /*******************************************************************************
 119:.\Generated_Source\PSoC4/PWM_Clock.c **** * Function Name: PWM_Clock_SetFractionalDividerRegister
 120:.\Generated_Source\PSoC4/PWM_Clock.c **** ********************************************************************************
 121:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 122:.\Generated_Source\PSoC4/PWM_Clock.c **** * Summary:
 123:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Modifies the clock divider and the fractional divider.
 124:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 125:.\Generated_Source\PSoC4/PWM_Clock.c **** * Parameters:
 126:.\Generated_Source\PSoC4/PWM_Clock.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:.\Generated_Source\PSoC4/PWM_Clock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:.\Generated_Source\PSoC4/PWM_Clock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:.\Generated_Source\PSoC4/PWM_Clock.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:.\Generated_Source\PSoC4/PWM_Clock.c **** * Returns:
 131:.\Generated_Source\PSoC4/PWM_Clock.c **** *  None
 132:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 133:.\Generated_Source\PSoC4/PWM_Clock.c **** *******************************************************************************/
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 5


 134:.\Generated_Source\PSoC4/PWM_Clock.c **** void PWM_Clock_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:.\Generated_Source\PSoC4/PWM_Clock.c **** {
  95              		.loc 1 135 0
  96              		.cfi_startproc
  97              	.LVL2:
  98 0000 10B5     		push	{r4, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
 101              		.cfi_offset 14, -4
 136:.\Generated_Source\PSoC4/PWM_Clock.c ****     uint32 maskVal;
 137:.\Generated_Source\PSoC4/PWM_Clock.c ****     uint32 regVal;
 138:.\Generated_Source\PSoC4/PWM_Clock.c ****     
 139:.\Generated_Source\PSoC4/PWM_Clock.c **** #if defined (PWM_Clock__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:.\Generated_Source\PSoC4/PWM_Clock.c ****     
 141:.\Generated_Source\PSoC4/PWM_Clock.c **** 	/* get all but divider bits */
 142:.\Generated_Source\PSoC4/PWM_Clock.c ****     maskVal = PWM_Clock_DIV_REG & 
 102              		.loc 1 142 0
 103 0002 064B     		ldr	r3, .L12
 104 0004 1A68     		ldr	r2, [r3]
 105 0006 0724     		mov	r4, #7
 106 0008 2240     		and	r2, r4
 107              	.LVL3:
 143:.\Generated_Source\PSoC4/PWM_Clock.c ****                     (uint32)(~(uint32)(PWM_Clock_DIV_INT_MASK | PWM_Clock_DIV_FRAC_MASK)); 
 144:.\Generated_Source\PSoC4/PWM_Clock.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:.\Generated_Source\PSoC4/PWM_Clock.c ****     regVal = maskVal |
 146:.\Generated_Source\PSoC4/PWM_Clock.c ****         ((uint32)((uint32)clkDivider <<  PWM_Clock_DIV_INT_SHIFT) & PWM_Clock_DIV_INT_MASK) |
 108              		.loc 1 146 0
 109 000a 0002     		lsl	r0, r0, #8
 110              	.LVL4:
 145:.\Generated_Source\PSoC4/PWM_Clock.c ****     regVal = maskVal |
 111              		.loc 1 145 0
 112 000c 1043     		orr	r0, r2
 147:.\Generated_Source\PSoC4/PWM_Clock.c ****         ((uint32)((uint32)clkFractional << PWM_Clock_DIV_FRAC_SHIFT) & PWM_Clock_DIV_FRAC_MASK);
 113              		.loc 1 147 0
 114 000e C900     		lsl	r1, r1, #3
 115              	.LVL5:
 116 0010 FF22     		mov	r2, #255
 117              	.LVL6:
 118 0012 1140     		and	r1, r2
 145:.\Generated_Source\PSoC4/PWM_Clock.c ****     regVal = maskVal |
 119              		.loc 1 145 0
 120 0014 0843     		orr	r0, r1
 121              	.LVL7:
 148:.\Generated_Source\PSoC4/PWM_Clock.c ****     
 149:.\Generated_Source\PSoC4/PWM_Clock.c **** #else
 150:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* get all but integer divider bits */
 151:.\Generated_Source\PSoC4/PWM_Clock.c ****     maskVal = PWM_Clock_DIV_REG & (uint32)(~(uint32)PWM_Clock__DIVIDER_MASK);
 152:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* combine mask and new divider val into 32-bit value */
 153:.\Generated_Source\PSoC4/PWM_Clock.c ****     regVal = clkDivider | maskVal;
 154:.\Generated_Source\PSoC4/PWM_Clock.c ****     
 155:.\Generated_Source\PSoC4/PWM_Clock.c **** #endif /* PWM_Clock__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 157:.\Generated_Source\PSoC4/PWM_Clock.c ****     PWM_Clock_DIV_REG = regVal;
 122              		.loc 1 157 0
 123 0016 1860     		str	r0, [r3]
 158:.\Generated_Source\PSoC4/PWM_Clock.c **** }
 124              		.loc 1 158 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 6


 125              		@ sp needed
 126 0018 10BD     		pop	{r4, pc}
 127              	.L13:
 128 001a C046     		.align	2
 129              	.L12:
 130 001c 00040140 		.word	1073808384
 131              		.cfi_endproc
 132              	.LFE2:
 133              		.size	PWM_Clock_SetFractionalDividerRegister, .-PWM_Clock_SetFractionalDividerRegister
 134              		.section	.text.PWM_Clock_GetDividerRegister,"ax",%progbits
 135              		.align	2
 136              		.global	PWM_Clock_GetDividerRegister
 137              		.code	16
 138              		.thumb_func
 139              		.type	PWM_Clock_GetDividerRegister, %function
 140              	PWM_Clock_GetDividerRegister:
 141              	.LFB3:
 159:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 160:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 161:.\Generated_Source\PSoC4/PWM_Clock.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/PWM_Clock.c **** * Function Name: PWM_Clock_GetDividerRegister
 163:.\Generated_Source\PSoC4/PWM_Clock.c **** ********************************************************************************
 164:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 165:.\Generated_Source\PSoC4/PWM_Clock.c **** * Summary:
 166:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Gets the clock divider register value.
 167:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 168:.\Generated_Source\PSoC4/PWM_Clock.c **** * Parameters:
 169:.\Generated_Source\PSoC4/PWM_Clock.c **** *  None
 170:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 171:.\Generated_Source\PSoC4/PWM_Clock.c **** * Returns:
 172:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:.\Generated_Source\PSoC4/PWM_Clock.c **** *  divide by 2, the return value will be 1.
 174:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 175:.\Generated_Source\PSoC4/PWM_Clock.c **** *******************************************************************************/
 176:.\Generated_Source\PSoC4/PWM_Clock.c **** uint16 PWM_Clock_GetDividerRegister(void)
 177:.\Generated_Source\PSoC4/PWM_Clock.c **** {
 142              		.loc 1 177 0
 143              		.cfi_startproc
 178:.\Generated_Source\PSoC4/PWM_Clock.c ****     return (uint16)((PWM_Clock_DIV_REG & PWM_Clock_DIV_INT_MASK)
 144              		.loc 1 178 0
 145 0000 024B     		ldr	r3, .L15
 146 0002 1868     		ldr	r0, [r3]
 179:.\Generated_Source\PSoC4/PWM_Clock.c ****         >> PWM_Clock_DIV_INT_SHIFT);
 147              		.loc 1 179 0
 148 0004 000A     		lsr	r0, r0, #8
 178:.\Generated_Source\PSoC4/PWM_Clock.c ****     return (uint16)((PWM_Clock_DIV_REG & PWM_Clock_DIV_INT_MASK)
 149              		.loc 1 178 0
 150 0006 80B2     		uxth	r0, r0
 180:.\Generated_Source\PSoC4/PWM_Clock.c **** }
 151              		.loc 1 180 0
 152              		@ sp needed
 153 0008 7047     		bx	lr
 154              	.L16:
 155 000a C046     		.align	2
 156              	.L15:
 157 000c 00040140 		.word	1073808384
 158              		.cfi_endproc
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 7


 159              	.LFE3:
 160              		.size	PWM_Clock_GetDividerRegister, .-PWM_Clock_GetDividerRegister
 161              		.section	.text.PWM_Clock_GetFractionalDividerRegister,"ax",%progbits
 162              		.align	2
 163              		.global	PWM_Clock_GetFractionalDividerRegister
 164              		.code	16
 165              		.thumb_func
 166              		.type	PWM_Clock_GetFractionalDividerRegister, %function
 167              	PWM_Clock_GetFractionalDividerRegister:
 168              	.LFB4:
 181:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 182:.\Generated_Source\PSoC4/PWM_Clock.c **** 
 183:.\Generated_Source\PSoC4/PWM_Clock.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC4/PWM_Clock.c **** * Function Name: PWM_Clock_GetFractionalDividerRegister
 185:.\Generated_Source\PSoC4/PWM_Clock.c **** ********************************************************************************
 186:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 187:.\Generated_Source\PSoC4/PWM_Clock.c **** * Summary:
 188:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Gets the clock fractional divider register value.
 189:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 190:.\Generated_Source\PSoC4/PWM_Clock.c **** * Parameters:
 191:.\Generated_Source\PSoC4/PWM_Clock.c **** *  None
 192:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 193:.\Generated_Source\PSoC4/PWM_Clock.c **** * Returns:
 194:.\Generated_Source\PSoC4/PWM_Clock.c **** *  Fractional Divide value of the clock
 195:.\Generated_Source\PSoC4/PWM_Clock.c **** *  0 if the fractional divider is not in use.
 196:.\Generated_Source\PSoC4/PWM_Clock.c **** *
 197:.\Generated_Source\PSoC4/PWM_Clock.c **** *******************************************************************************/
 198:.\Generated_Source\PSoC4/PWM_Clock.c **** uint8 PWM_Clock_GetFractionalDividerRegister(void)
 199:.\Generated_Source\PSoC4/PWM_Clock.c **** {
 169              		.loc 1 199 0
 170              		.cfi_startproc
 200:.\Generated_Source\PSoC4/PWM_Clock.c **** #if defined (PWM_Clock__FRAC_MASK)
 201:.\Generated_Source\PSoC4/PWM_Clock.c ****     /* return fractional divider bits */
 202:.\Generated_Source\PSoC4/PWM_Clock.c ****     return (uint8)((PWM_Clock_DIV_REG & PWM_Clock_DIV_FRAC_MASK)
 171              		.loc 1 202 0
 172 0000 024B     		ldr	r3, .L18
 173 0002 1868     		ldr	r0, [r3]
 174 0004 0006     		lsl	r0, r0, #24
 175 0006 C00E     		lsr	r0, r0, #27
 203:.\Generated_Source\PSoC4/PWM_Clock.c ****         >> PWM_Clock_DIV_FRAC_SHIFT);
 204:.\Generated_Source\PSoC4/PWM_Clock.c **** #else
 205:.\Generated_Source\PSoC4/PWM_Clock.c ****     return 0u;
 206:.\Generated_Source\PSoC4/PWM_Clock.c **** #endif /* PWM_Clock__FRAC_MASK */
 207:.\Generated_Source\PSoC4/PWM_Clock.c **** }
 176              		.loc 1 207 0
 177              		@ sp needed
 178 0008 7047     		bx	lr
 179              	.L19:
 180 000a C046     		.align	2
 181              	.L18:
 182 000c 00040140 		.word	1073808384
 183              		.cfi_endproc
 184              	.LFE4:
 185              		.size	PWM_Clock_GetFractionalDividerRegister, .-PWM_Clock_GetFractionalDividerRegister
 186              		.text
 187              	.Letext0:
 188              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 8


 189              		.section	.debug_info,"",%progbits
 190              	.Ldebug_info0:
 191 0000 5F010000 		.4byte	0x15f
 192 0004 0400     		.2byte	0x4
 193 0006 00000000 		.4byte	.Ldebug_abbrev0
 194 000a 04       		.byte	0x4
 195 000b 01       		.uleb128 0x1
 196 000c 38010000 		.4byte	.LASF25
 197 0010 01       		.byte	0x1
 198 0011 C7010000 		.4byte	.LASF26
 199 0015 EC010000 		.4byte	.LASF27
 200 0019 00000000 		.4byte	.Ldebug_ranges0+0
 201 001d 00000000 		.4byte	0
 202 0021 00000000 		.4byte	.Ldebug_line0
 203 0025 02       		.uleb128 0x2
 204 0026 01       		.byte	0x1
 205 0027 06       		.byte	0x6
 206 0028 6E020000 		.4byte	.LASF0
 207 002c 02       		.uleb128 0x2
 208 002d 01       		.byte	0x1
 209 002e 08       		.byte	0x8
 210 002f 79000000 		.4byte	.LASF1
 211 0033 02       		.uleb128 0x2
 212 0034 02       		.byte	0x2
 213 0035 05       		.byte	0x5
 214 0036 55020000 		.4byte	.LASF2
 215 003a 02       		.uleb128 0x2
 216 003b 02       		.byte	0x2
 217 003c 07       		.byte	0x7
 218 003d 99000000 		.4byte	.LASF3
 219 0041 02       		.uleb128 0x2
 220 0042 04       		.byte	0x4
 221 0043 05       		.byte	0x5
 222 0044 65020000 		.4byte	.LASF4
 223 0048 02       		.uleb128 0x2
 224 0049 04       		.byte	0x4
 225 004a 07       		.byte	0x7
 226 004b 87000000 		.4byte	.LASF5
 227 004f 02       		.uleb128 0x2
 228 0050 08       		.byte	0x8
 229 0051 05       		.byte	0x5
 230 0052 B4010000 		.4byte	.LASF6
 231 0056 02       		.uleb128 0x2
 232 0057 08       		.byte	0x8
 233 0058 07       		.byte	0x7
 234 0059 21010000 		.4byte	.LASF7
 235 005d 03       		.uleb128 0x3
 236 005e 04       		.byte	0x4
 237 005f 05       		.byte	0x5
 238 0060 696E7400 		.ascii	"int\000"
 239 0064 02       		.uleb128 0x2
 240 0065 04       		.byte	0x4
 241 0066 07       		.byte	0x7
 242 0067 14010000 		.4byte	.LASF8
 243 006b 04       		.uleb128 0x4
 244 006c 5F020000 		.4byte	.LASF9
 245 0070 02       		.byte	0x2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 9


 246 0071 B3       		.byte	0xb3
 247 0072 2C000000 		.4byte	0x2c
 248 0076 04       		.uleb128 0x4
 249 0077 06010000 		.4byte	.LASF10
 250 007b 02       		.byte	0x2
 251 007c B4       		.byte	0xb4
 252 007d 3A000000 		.4byte	0x3a
 253 0081 04       		.uleb128 0x4
 254 0082 0D010000 		.4byte	.LASF11
 255 0086 02       		.byte	0x2
 256 0087 B5       		.byte	0xb5
 257 0088 48000000 		.4byte	0x48
 258 008c 02       		.uleb128 0x2
 259 008d 04       		.byte	0x4
 260 008e 04       		.byte	0x4
 261 008f 73000000 		.4byte	.LASF12
 262 0093 02       		.uleb128 0x2
 263 0094 08       		.byte	0x8
 264 0095 04       		.byte	0x4
 265 0096 DE000000 		.4byte	.LASF13
 266 009a 02       		.uleb128 0x2
 267 009b 01       		.byte	0x1
 268 009c 08       		.byte	0x8
 269 009d C2010000 		.4byte	.LASF14
 270 00a1 05       		.uleb128 0x5
 271 00a2 00000000 		.4byte	.LASF15
 272 00a6 02       		.byte	0x2
 273 00a7 5F01     		.2byte	0x15f
 274 00a9 AD000000 		.4byte	0xad
 275 00ad 06       		.uleb128 0x6
 276 00ae 81000000 		.4byte	0x81
 277 00b2 07       		.uleb128 0x7
 278 00b3 06000000 		.4byte	.LASF16
 279 00b7 01       		.byte	0x1
 280 00b8 27       		.byte	0x27
 281 00b9 00000000 		.4byte	.LFB0
 282 00bd 1C000000 		.4byte	.LFE0-.LFB0
 283 00c1 01       		.uleb128 0x1
 284 00c2 9C       		.byte	0x9c
 285 00c3 D7000000 		.4byte	0xd7
 286 00c7 08       		.uleb128 0x8
 287 00c8 EC000000 		.4byte	.LASF18
 288 00cc 01       		.byte	0x1
 289 00cd 27       		.byte	0x27
 290 00ce 81000000 		.4byte	0x81
 291 00d2 00000000 		.4byte	.LLST0
 292 00d6 00       		.byte	0
 293 00d7 09       		.uleb128 0x9
 294 00d8 20000000 		.4byte	.LASF28
 295 00dc 01       		.byte	0x1
 296 00dd 5F       		.byte	0x5f
 297 00de 00000000 		.4byte	.LFB1
 298 00e2 18000000 		.4byte	.LFE1-.LFB1
 299 00e6 01       		.uleb128 0x1
 300 00e7 9C       		.byte	0x9c
 301 00e8 07       		.uleb128 0x7
 302 00e9 B7000000 		.4byte	.LASF17
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 10


 303 00ed 01       		.byte	0x1
 304 00ee 86       		.byte	0x86
 305 00ef 00000000 		.4byte	.LFB2
 306 00f3 20000000 		.4byte	.LFE2-.LFB2
 307 00f7 01       		.uleb128 0x1
 308 00f8 9C       		.byte	0x9c
 309 00f9 38010000 		.4byte	0x138
 310 00fd 08       		.uleb128 0x8
 311 00fe AC000000 		.4byte	.LASF19
 312 0102 01       		.byte	0x1
 313 0103 86       		.byte	0x86
 314 0104 76000000 		.4byte	0x76
 315 0108 21000000 		.4byte	.LLST1
 316 010c 08       		.uleb128 0x8
 317 010d F8000000 		.4byte	.LASF20
 318 0111 01       		.byte	0x1
 319 0112 86       		.byte	0x86
 320 0113 6B000000 		.4byte	0x6b
 321 0117 42000000 		.4byte	.LLST2
 322 011b 0A       		.uleb128 0xa
 323 011c 18000000 		.4byte	.LASF21
 324 0120 01       		.byte	0x1
 325 0121 88       		.byte	0x88
 326 0122 81000000 		.4byte	0x81
 327 0126 63000000 		.4byte	.LLST3
 328 012a 0B       		.uleb128 0xb
 329 012b E5000000 		.4byte	.LASF22
 330 012f 01       		.byte	0x1
 331 0130 89       		.byte	0x89
 332 0131 81000000 		.4byte	0x81
 333 0135 01       		.uleb128 0x1
 334 0136 50       		.byte	0x50
 335 0137 00       		.byte	0
 336 0138 0C       		.uleb128 0xc
 337 0139 56000000 		.4byte	.LASF23
 338 013d 01       		.byte	0x1
 339 013e B0       		.byte	0xb0
 340 013f 76000000 		.4byte	0x76
 341 0143 00000000 		.4byte	.LFB3
 342 0147 10000000 		.4byte	.LFE3-.LFB3
 343 014b 01       		.uleb128 0x1
 344 014c 9C       		.byte	0x9c
 345 014d 0C       		.uleb128 0xc
 346 014e 2F000000 		.4byte	.LASF24
 347 0152 01       		.byte	0x1
 348 0153 C6       		.byte	0xc6
 349 0154 6B000000 		.4byte	0x6b
 350 0158 00000000 		.4byte	.LFB4
 351 015c 10000000 		.4byte	.LFE4-.LFB4
 352 0160 01       		.uleb128 0x1
 353 0161 9C       		.byte	0x9c
 354 0162 00       		.byte	0
 355              		.section	.debug_abbrev,"",%progbits
 356              	.Ldebug_abbrev0:
 357 0000 01       		.uleb128 0x1
 358 0001 11       		.uleb128 0x11
 359 0002 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 11


 360 0003 25       		.uleb128 0x25
 361 0004 0E       		.uleb128 0xe
 362 0005 13       		.uleb128 0x13
 363 0006 0B       		.uleb128 0xb
 364 0007 03       		.uleb128 0x3
 365 0008 0E       		.uleb128 0xe
 366 0009 1B       		.uleb128 0x1b
 367 000a 0E       		.uleb128 0xe
 368 000b 55       		.uleb128 0x55
 369 000c 17       		.uleb128 0x17
 370 000d 11       		.uleb128 0x11
 371 000e 01       		.uleb128 0x1
 372 000f 10       		.uleb128 0x10
 373 0010 17       		.uleb128 0x17
 374 0011 00       		.byte	0
 375 0012 00       		.byte	0
 376 0013 02       		.uleb128 0x2
 377 0014 24       		.uleb128 0x24
 378 0015 00       		.byte	0
 379 0016 0B       		.uleb128 0xb
 380 0017 0B       		.uleb128 0xb
 381 0018 3E       		.uleb128 0x3e
 382 0019 0B       		.uleb128 0xb
 383 001a 03       		.uleb128 0x3
 384 001b 0E       		.uleb128 0xe
 385 001c 00       		.byte	0
 386 001d 00       		.byte	0
 387 001e 03       		.uleb128 0x3
 388 001f 24       		.uleb128 0x24
 389 0020 00       		.byte	0
 390 0021 0B       		.uleb128 0xb
 391 0022 0B       		.uleb128 0xb
 392 0023 3E       		.uleb128 0x3e
 393 0024 0B       		.uleb128 0xb
 394 0025 03       		.uleb128 0x3
 395 0026 08       		.uleb128 0x8
 396 0027 00       		.byte	0
 397 0028 00       		.byte	0
 398 0029 04       		.uleb128 0x4
 399 002a 16       		.uleb128 0x16
 400 002b 00       		.byte	0
 401 002c 03       		.uleb128 0x3
 402 002d 0E       		.uleb128 0xe
 403 002e 3A       		.uleb128 0x3a
 404 002f 0B       		.uleb128 0xb
 405 0030 3B       		.uleb128 0x3b
 406 0031 0B       		.uleb128 0xb
 407 0032 49       		.uleb128 0x49
 408 0033 13       		.uleb128 0x13
 409 0034 00       		.byte	0
 410 0035 00       		.byte	0
 411 0036 05       		.uleb128 0x5
 412 0037 16       		.uleb128 0x16
 413 0038 00       		.byte	0
 414 0039 03       		.uleb128 0x3
 415 003a 0E       		.uleb128 0xe
 416 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 12


 417 003c 0B       		.uleb128 0xb
 418 003d 3B       		.uleb128 0x3b
 419 003e 05       		.uleb128 0x5
 420 003f 49       		.uleb128 0x49
 421 0040 13       		.uleb128 0x13
 422 0041 00       		.byte	0
 423 0042 00       		.byte	0
 424 0043 06       		.uleb128 0x6
 425 0044 35       		.uleb128 0x35
 426 0045 00       		.byte	0
 427 0046 49       		.uleb128 0x49
 428 0047 13       		.uleb128 0x13
 429 0048 00       		.byte	0
 430 0049 00       		.byte	0
 431 004a 07       		.uleb128 0x7
 432 004b 2E       		.uleb128 0x2e
 433 004c 01       		.byte	0x1
 434 004d 3F       		.uleb128 0x3f
 435 004e 19       		.uleb128 0x19
 436 004f 03       		.uleb128 0x3
 437 0050 0E       		.uleb128 0xe
 438 0051 3A       		.uleb128 0x3a
 439 0052 0B       		.uleb128 0xb
 440 0053 3B       		.uleb128 0x3b
 441 0054 0B       		.uleb128 0xb
 442 0055 27       		.uleb128 0x27
 443 0056 19       		.uleb128 0x19
 444 0057 11       		.uleb128 0x11
 445 0058 01       		.uleb128 0x1
 446 0059 12       		.uleb128 0x12
 447 005a 06       		.uleb128 0x6
 448 005b 40       		.uleb128 0x40
 449 005c 18       		.uleb128 0x18
 450 005d 9742     		.uleb128 0x2117
 451 005f 19       		.uleb128 0x19
 452 0060 01       		.uleb128 0x1
 453 0061 13       		.uleb128 0x13
 454 0062 00       		.byte	0
 455 0063 00       		.byte	0
 456 0064 08       		.uleb128 0x8
 457 0065 05       		.uleb128 0x5
 458 0066 00       		.byte	0
 459 0067 03       		.uleb128 0x3
 460 0068 0E       		.uleb128 0xe
 461 0069 3A       		.uleb128 0x3a
 462 006a 0B       		.uleb128 0xb
 463 006b 3B       		.uleb128 0x3b
 464 006c 0B       		.uleb128 0xb
 465 006d 49       		.uleb128 0x49
 466 006e 13       		.uleb128 0x13
 467 006f 02       		.uleb128 0x2
 468 0070 17       		.uleb128 0x17
 469 0071 00       		.byte	0
 470 0072 00       		.byte	0
 471 0073 09       		.uleb128 0x9
 472 0074 2E       		.uleb128 0x2e
 473 0075 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 13


 474 0076 3F       		.uleb128 0x3f
 475 0077 19       		.uleb128 0x19
 476 0078 03       		.uleb128 0x3
 477 0079 0E       		.uleb128 0xe
 478 007a 3A       		.uleb128 0x3a
 479 007b 0B       		.uleb128 0xb
 480 007c 3B       		.uleb128 0x3b
 481 007d 0B       		.uleb128 0xb
 482 007e 27       		.uleb128 0x27
 483 007f 19       		.uleb128 0x19
 484 0080 11       		.uleb128 0x11
 485 0081 01       		.uleb128 0x1
 486 0082 12       		.uleb128 0x12
 487 0083 06       		.uleb128 0x6
 488 0084 40       		.uleb128 0x40
 489 0085 18       		.uleb128 0x18
 490 0086 9742     		.uleb128 0x2117
 491 0088 19       		.uleb128 0x19
 492 0089 00       		.byte	0
 493 008a 00       		.byte	0
 494 008b 0A       		.uleb128 0xa
 495 008c 34       		.uleb128 0x34
 496 008d 00       		.byte	0
 497 008e 03       		.uleb128 0x3
 498 008f 0E       		.uleb128 0xe
 499 0090 3A       		.uleb128 0x3a
 500 0091 0B       		.uleb128 0xb
 501 0092 3B       		.uleb128 0x3b
 502 0093 0B       		.uleb128 0xb
 503 0094 49       		.uleb128 0x49
 504 0095 13       		.uleb128 0x13
 505 0096 02       		.uleb128 0x2
 506 0097 17       		.uleb128 0x17
 507 0098 00       		.byte	0
 508 0099 00       		.byte	0
 509 009a 0B       		.uleb128 0xb
 510 009b 34       		.uleb128 0x34
 511 009c 00       		.byte	0
 512 009d 03       		.uleb128 0x3
 513 009e 0E       		.uleb128 0xe
 514 009f 3A       		.uleb128 0x3a
 515 00a0 0B       		.uleb128 0xb
 516 00a1 3B       		.uleb128 0x3b
 517 00a2 0B       		.uleb128 0xb
 518 00a3 49       		.uleb128 0x49
 519 00a4 13       		.uleb128 0x13
 520 00a5 02       		.uleb128 0x2
 521 00a6 18       		.uleb128 0x18
 522 00a7 00       		.byte	0
 523 00a8 00       		.byte	0
 524 00a9 0C       		.uleb128 0xc
 525 00aa 2E       		.uleb128 0x2e
 526 00ab 00       		.byte	0
 527 00ac 3F       		.uleb128 0x3f
 528 00ad 19       		.uleb128 0x19
 529 00ae 03       		.uleb128 0x3
 530 00af 0E       		.uleb128 0xe
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 14


 531 00b0 3A       		.uleb128 0x3a
 532 00b1 0B       		.uleb128 0xb
 533 00b2 3B       		.uleb128 0x3b
 534 00b3 0B       		.uleb128 0xb
 535 00b4 27       		.uleb128 0x27
 536 00b5 19       		.uleb128 0x19
 537 00b6 49       		.uleb128 0x49
 538 00b7 13       		.uleb128 0x13
 539 00b8 11       		.uleb128 0x11
 540 00b9 01       		.uleb128 0x1
 541 00ba 12       		.uleb128 0x12
 542 00bb 06       		.uleb128 0x6
 543 00bc 40       		.uleb128 0x40
 544 00bd 18       		.uleb128 0x18
 545 00be 9742     		.uleb128 0x2117
 546 00c0 19       		.uleb128 0x19
 547 00c1 00       		.byte	0
 548 00c2 00       		.byte	0
 549 00c3 00       		.byte	0
 550              		.section	.debug_loc,"",%progbits
 551              	.Ldebug_loc0:
 552              	.LLST0:
 553 0000 00000000 		.4byte	.LVL0
 554 0004 0A000000 		.4byte	.LVL1
 555 0008 0100     		.2byte	0x1
 556 000a 50       		.byte	0x50
 557 000b 0A000000 		.4byte	.LVL1
 558 000f 1C000000 		.4byte	.LFE0
 559 0013 0400     		.2byte	0x4
 560 0015 F3       		.byte	0xf3
 561 0016 01       		.uleb128 0x1
 562 0017 50       		.byte	0x50
 563 0018 9F       		.byte	0x9f
 564 0019 00000000 		.4byte	0
 565 001d 00000000 		.4byte	0
 566              	.LLST1:
 567 0021 00000000 		.4byte	.LVL2
 568 0025 0C000000 		.4byte	.LVL4
 569 0029 0100     		.2byte	0x1
 570 002b 50       		.byte	0x50
 571 002c 0C000000 		.4byte	.LVL4
 572 0030 20000000 		.4byte	.LFE2
 573 0034 0400     		.2byte	0x4
 574 0036 F3       		.byte	0xf3
 575 0037 01       		.uleb128 0x1
 576 0038 50       		.byte	0x50
 577 0039 9F       		.byte	0x9f
 578 003a 00000000 		.4byte	0
 579 003e 00000000 		.4byte	0
 580              	.LLST2:
 581 0042 00000000 		.4byte	.LVL2
 582 0046 10000000 		.4byte	.LVL5
 583 004a 0100     		.2byte	0x1
 584 004c 51       		.byte	0x51
 585 004d 10000000 		.4byte	.LVL5
 586 0051 20000000 		.4byte	.LFE2
 587 0055 0400     		.2byte	0x4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 15


 588 0057 F3       		.byte	0xf3
 589 0058 01       		.uleb128 0x1
 590 0059 51       		.byte	0x51
 591 005a 9F       		.byte	0x9f
 592 005b 00000000 		.4byte	0
 593 005f 00000000 		.4byte	0
 594              	.LLST3:
 595 0063 0A000000 		.4byte	.LVL3
 596 0067 12000000 		.4byte	.LVL6
 597 006b 0100     		.2byte	0x1
 598 006d 52       		.byte	0x52
 599 006e 00000000 		.4byte	0
 600 0072 00000000 		.4byte	0
 601              		.section	.debug_aranges,"",%progbits
 602 0000 3C000000 		.4byte	0x3c
 603 0004 0200     		.2byte	0x2
 604 0006 00000000 		.4byte	.Ldebug_info0
 605 000a 04       		.byte	0x4
 606 000b 00       		.byte	0
 607 000c 0000     		.2byte	0
 608 000e 0000     		.2byte	0
 609 0010 00000000 		.4byte	.LFB0
 610 0014 1C000000 		.4byte	.LFE0-.LFB0
 611 0018 00000000 		.4byte	.LFB1
 612 001c 18000000 		.4byte	.LFE1-.LFB1
 613 0020 00000000 		.4byte	.LFB2
 614 0024 20000000 		.4byte	.LFE2-.LFB2
 615 0028 00000000 		.4byte	.LFB3
 616 002c 10000000 		.4byte	.LFE3-.LFB3
 617 0030 00000000 		.4byte	.LFB4
 618 0034 10000000 		.4byte	.LFE4-.LFB4
 619 0038 00000000 		.4byte	0
 620 003c 00000000 		.4byte	0
 621              		.section	.debug_ranges,"",%progbits
 622              	.Ldebug_ranges0:
 623 0000 00000000 		.4byte	.LFB0
 624 0004 1C000000 		.4byte	.LFE0
 625 0008 00000000 		.4byte	.LFB1
 626 000c 18000000 		.4byte	.LFE1
 627 0010 00000000 		.4byte	.LFB2
 628 0014 20000000 		.4byte	.LFE2
 629 0018 00000000 		.4byte	.LFB3
 630 001c 10000000 		.4byte	.LFE3
 631 0020 00000000 		.4byte	.LFB4
 632 0024 10000000 		.4byte	.LFE4
 633 0028 00000000 		.4byte	0
 634 002c 00000000 		.4byte	0
 635              		.section	.debug_line,"",%progbits
 636              	.Ldebug_line0:
 637 0000 DA000000 		.section	.debug_str,"MS",%progbits,1
 637      02005F00 
 637      00000201 
 637      FB0E0D00 
 637      01010101 
 638              	.LASF15:
 639 0000 72656733 		.ascii	"reg32\000"
 639      3200
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 16


 640              	.LASF16:
 641 0006 50574D5F 		.ascii	"PWM_Clock_StartEx\000"
 641      436C6F63 
 641      6B5F5374 
 641      61727445 
 641      7800
 642              	.LASF21:
 643 0018 6D61736B 		.ascii	"maskVal\000"
 643      56616C00 
 644              	.LASF28:
 645 0020 50574D5F 		.ascii	"PWM_Clock_Stop\000"
 645      436C6F63 
 645      6B5F5374 
 645      6F7000
 646              	.LASF24:
 647 002f 50574D5F 		.ascii	"PWM_Clock_GetFractionalDividerRegister\000"
 647      436C6F63 
 647      6B5F4765 
 647      74467261 
 647      6374696F 
 648              	.LASF23:
 649 0056 50574D5F 		.ascii	"PWM_Clock_GetDividerRegister\000"
 649      436C6F63 
 649      6B5F4765 
 649      74446976 
 649      69646572 
 650              	.LASF12:
 651 0073 666C6F61 		.ascii	"float\000"
 651      7400
 652              	.LASF1:
 653 0079 756E7369 		.ascii	"unsigned char\000"
 653      676E6564 
 653      20636861 
 653      7200
 654              	.LASF5:
 655 0087 6C6F6E67 		.ascii	"long unsigned int\000"
 655      20756E73 
 655      69676E65 
 655      6420696E 
 655      7400
 656              	.LASF3:
 657 0099 73686F72 		.ascii	"short unsigned int\000"
 657      7420756E 
 657      7369676E 
 657      65642069 
 657      6E7400
 658              	.LASF19:
 659 00ac 636C6B44 		.ascii	"clkDivider\000"
 659      69766964 
 659      657200
 660              	.LASF17:
 661 00b7 50574D5F 		.ascii	"PWM_Clock_SetFractionalDividerRegister\000"
 661      436C6F63 
 661      6B5F5365 
 661      74467261 
 661      6374696F 
 662              	.LASF13:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 17


 663 00de 646F7562 		.ascii	"double\000"
 663      6C6500
 664              	.LASF22:
 665 00e5 72656756 		.ascii	"regVal\000"
 665      616C00
 666              	.LASF18:
 667 00ec 616C6967 		.ascii	"alignClkDiv\000"
 667      6E436C6B 
 667      44697600 
 668              	.LASF20:
 669 00f8 636C6B46 		.ascii	"clkFractional\000"
 669      72616374 
 669      696F6E61 
 669      6C00
 670              	.LASF10:
 671 0106 75696E74 		.ascii	"uint16\000"
 671      313600
 672              	.LASF11:
 673 010d 75696E74 		.ascii	"uint32\000"
 673      333200
 674              	.LASF8:
 675 0114 756E7369 		.ascii	"unsigned int\000"
 675      676E6564 
 675      20696E74 
 675      00
 676              	.LASF7:
 677 0121 6C6F6E67 		.ascii	"long long unsigned int\000"
 677      206C6F6E 
 677      6720756E 
 677      7369676E 
 677      65642069 
 678              	.LASF25:
 679 0138 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 679      4320342E 
 679      382E3420 
 679      32303134 
 679      30353236 
 680 016b 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 680      20726576 
 680      6973696F 
 680      6E203231 
 680      31333538 
 681 019e 67202D66 		.ascii	"g -ffunction-sections\000"
 681      66756E63 
 681      74696F6E 
 681      2D736563 
 681      74696F6E 
 682              	.LASF6:
 683 01b4 6C6F6E67 		.ascii	"long long int\000"
 683      206C6F6E 
 683      6720696E 
 683      7400
 684              	.LASF14:
 685 01c2 63686172 		.ascii	"char\000"
 685      00
 686              	.LASF26:
 687 01c7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_Clock.c\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccQbBjHo.s 			page 18


 687      6E657261 
 687      7465645F 
 687      536F7572 
 687      63655C50 
 688              	.LASF27:
 689 01ec 433A5C55 		.ascii	"C:\\Users\\11401393\\Documents\\PSoC Creator\\CE976"
 689      73657273 
 689      5C313134 
 689      30313339 
 689      335C446F 
 690 021a 33342050 		.ascii	"34 PSoC 4 Breathing LED\\CE97634 PSoC 4 Breathing L"
 690      536F4320 
 690      34204272 
 690      65617468 
 690      696E6720 
 691 024c 45442E63 		.ascii	"ED.cydsn\000"
 691      7964736E 
 691      00
 692              	.LASF2:
 693 0255 73686F72 		.ascii	"short int\000"
 693      7420696E 
 693      7400
 694              	.LASF9:
 695 025f 75696E74 		.ascii	"uint8\000"
 695      3800
 696              	.LASF4:
 697 0265 6C6F6E67 		.ascii	"long int\000"
 697      20696E74 
 697      00
 698              	.LASF0:
 699 026e 7369676E 		.ascii	"signed char\000"
 699      65642063 
 699      68617200 
 700              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	CySysClkImoGetWcoLock, %function
  22              	CySysClkImoGetWcoLock:
  23              	.LFB5:
  24              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.0
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the clocking, interrupts, and watchdog timer.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/CyLib.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/CyLib.c **** *
  12:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2 && CY_IP_FMLT)
  22:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  24:.\Generated_Source\PSoC4/CyLib.c **** 
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
  33:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 2


  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void);
  38:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  39:.\Generated_Source\PSoC4/CyLib.c **** 
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  42:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  43:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  44:.\Generated_Source\PSoC4/CyLib.c **** *
  45:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  46:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  47:.\Generated_Source\PSoC4/CyLib.c **** *
  48:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  49:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  51:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  52:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  53:.\Generated_Source\PSoC4/CyLib.c **** 
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  56:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  57:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  58:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  70:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  71:.\Generated_Source\PSoC4/CyLib.c **** 
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  74:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  75:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  76:.\Generated_Source\PSoC4/CyLib.c **** *
  77:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  78:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  79:.\Generated_Source\PSoC4/CyLib.c **** *
  80:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  81:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
  82:.\Generated_Source\PSoC4/CyLib.c **** *
  83:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
  84:.\Generated_Source\PSoC4/CyLib.c **** *  None
  85:.\Generated_Source\PSoC4/CyLib.c **** *
  86:.\Generated_Source\PSoC4/CyLib.c **** * Return:
  87:.\Generated_Source\PSoC4/CyLib.c **** *  None
  88:.\Generated_Source\PSoC4/CyLib.c **** *
  89:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  90:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 3


  91:.\Generated_Source\PSoC4/CyLib.c **** {
  92:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  93:.\Generated_Source\PSoC4/CyLib.c **** 
  94:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  95:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
  96:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
  97:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
  98:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  99:.\Generated_Source\PSoC4/CyLib.c **** 
 100:.\Generated_Source\PSoC4/CyLib.c **** }
 101:.\Generated_Source\PSoC4/CyLib.c **** 
 102:.\Generated_Source\PSoC4/CyLib.c **** 
 103:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 104:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 105:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices , this function will also disable WCO lock
 111:.\Generated_Source\PSoC4/CyLib.c **** *  if already enabled.
 112:.\Generated_Source\PSoC4/CyLib.c **** *
 113:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 114:.\Generated_Source\PSoC4/CyLib.c **** *  None
 115:.\Generated_Source\PSoC4/CyLib.c **** *
 116:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 117:.\Generated_Source\PSoC4/CyLib.c **** *  None
 118:.\Generated_Source\PSoC4/CyLib.c **** *
 119:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 120:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 121:.\Generated_Source\PSoC4/CyLib.c **** {
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 123:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 124:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 125:.\Generated_Source\PSoC4/CyLib.c **** 
 126:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 127:.\Generated_Source\PSoC4/CyLib.c **** }
 128:.\Generated_Source\PSoC4/CyLib.c **** 
 129:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 133:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c ****     *
 135:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 137:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 138:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 139:.\Generated_Source\PSoC4/CyLib.c ****     *
 140:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 141:.\Generated_Source\PSoC4/CyLib.c ****     *
 142:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 144:.\Generated_Source\PSoC4/CyLib.c ****     *
 145:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 146:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 147:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 4


 148:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 150:.\Generated_Source\PSoC4/CyLib.c ****     {
 151:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 152:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 153:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 154:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 155:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 156:.\Generated_Source\PSoC4/CyLib.c **** 
 157:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 158:.\Generated_Source\PSoC4/CyLib.c ****         {
 159:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 160:.\Generated_Source\PSoC4/CyLib.c **** 
 161:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 163:.\Generated_Source\PSoC4/CyLib.c ****             {
 164:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 165:.\Generated_Source\PSoC4/CyLib.c ****                 {
 166:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 167:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 168:.\Generated_Source\PSoC4/CyLib.c ****                 }
 169:.\Generated_Source\PSoC4/CyLib.c ****             }
 170:.\Generated_Source\PSoC4/CyLib.c **** 
 171:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 172:.\Generated_Source\PSoC4/CyLib.c ****             {
 173:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 174:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_GAIN;
 175:.\Generated_Source\PSoC4/CyLib.c ****             }
 176:.\Generated_Source\PSoC4/CyLib.c **** 
 177:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 178:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 179:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK);
 180:.\Generated_Source\PSoC4/CyLib.c **** 
 181:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 182:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 185:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 186:.\Generated_Source\PSoC4/CyLib.c **** 
 187:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 188:.\Generated_Source\PSoC4/CyLib.c **** 
 189:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 190:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 191:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 192:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(320u);
 193:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 196:.\Generated_Source\PSoC4/CyLib.c ****         }
 197:.\Generated_Source\PSoC4/CyLib.c ****     }
 198:.\Generated_Source\PSoC4/CyLib.c **** 
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 201:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 202:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 203:.\Generated_Source\PSoC4/CyLib.c ****     *
 204:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 5


 205:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 206:.\Generated_Source\PSoC4/CyLib.c ****     *
 207:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 208:.\Generated_Source\PSoC4/CyLib.c ****     *
 209:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 210:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 211:.\Generated_Source\PSoC4/CyLib.c ****     *
 212:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 213:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 214:.\Generated_Source\PSoC4/CyLib.c ****     *
 215:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 216:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 217:.\Generated_Source\PSoC4/CyLib.c ****     {
 218:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 219:.\Generated_Source\PSoC4/CyLib.c ****     }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c **** 
 222:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 224:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/CyLib.c ****     *
 226:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 227:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 228:.\Generated_Source\PSoC4/CyLib.c ****     *
 229:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 230:.\Generated_Source\PSoC4/CyLib.c ****     *
 231:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 232:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 233:.\Generated_Source\PSoC4/CyLib.c ****     *
 234:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 235:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 236:.\Generated_Source\PSoC4/CyLib.c ****     *
 237:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 238:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void)
 239:.\Generated_Source\PSoC4/CyLib.c ****     {
  25              		.loc 1 239 0
  26              		.cfi_startproc
 240:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
  27              		.loc 1 240 0
  28 0000 034B     		ldr	r3, .L4
  29 0002 1B68     		ldr	r3, [r3]
 241:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
  30              		.loc 1 241 0
  31 0004 5A00     		lsl	r2, r3, #1
  32 0006 01D5     		bpl	.L3
  33 0008 0120     		mov	r0, #1
  34 000a 00E0     		b	.L2
  35              	.L3:
  36 000c 0020     		mov	r0, #0
  37              	.L2:
 242:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 243:.\Generated_Source\PSoC4/CyLib.c ****     }
  38              		.loc 1 243 0
  39              		@ sp needed
  40 000e 7047     		bx	lr
  41              	.L5:
  42              		.align	2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 6


  43              	.L4:
  44 0010 00002240 		.word	1075970048
  45              		.cfi_endproc
  46              	.LFE5:
  47              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
  48              		.section	.text.CySysClkImoStart,"ax",%progbits
  49              		.align	2
  50              		.global	CySysClkImoStart
  51              		.code	16
  52              		.thumb_func
  53              		.type	CySysClkImoStart, %function
  54              	CySysClkImoStart:
  55              	.LFB1:
  91:.\Generated_Source\PSoC4/CyLib.c **** {
  56              		.loc 1 91 0
  57              		.cfi_startproc
  92:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  58              		.loc 1 92 0
  59 0000 034B     		ldr	r3, .L7
  60 0002 1968     		ldr	r1, [r3]
  61 0004 8022     		mov	r2, #128
  62 0006 1206     		lsl	r2, r2, #24
  63 0008 0A43     		orr	r2, r1
  64 000a 1A60     		str	r2, [r3]
 100:.\Generated_Source\PSoC4/CyLib.c **** }
  65              		.loc 1 100 0
  66              		@ sp needed
  67 000c 7047     		bx	lr
  68              	.L8:
  69 000e C046     		.align	2
  70              	.L7:
  71 0010 08010B40 		.word	1074462984
  72              		.cfi_endproc
  73              	.LFE1:
  74              		.size	CySysClkImoStart, .-CySysClkImoStart
  75              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  76              		.align	2
  77              		.global	CySysClkImoDisableWcoLock
  78              		.code	16
  79              		.thumb_func
  80              		.type	CySysClkImoDisableWcoLock, %function
  81              	CySysClkImoDisableWcoLock:
  82              	.LFB4:
 217:.\Generated_Source\PSoC4/CyLib.c ****     {
  83              		.loc 1 217 0
  84              		.cfi_startproc
 218:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  85              		.loc 1 218 0
  86 0000 024B     		ldr	r3, .L10
  87 0002 1968     		ldr	r1, [r3]
  88 0004 024A     		ldr	r2, .L10+4
  89 0006 0A40     		and	r2, r1
  90 0008 1A60     		str	r2, [r3]
 219:.\Generated_Source\PSoC4/CyLib.c ****     }
  91              		.loc 1 219 0
  92              		@ sp needed
  93 000a 7047     		bx	lr
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 7


  94              	.L11:
  95              		.align	2
  96              	.L10:
  97 000c 00002240 		.word	1075970048
  98 0010 FFFFFFBF 		.word	-1073741825
  99              		.cfi_endproc
 100              	.LFE4:
 101              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 102              		.section	.text.CySysClkImoStop,"ax",%progbits
 103              		.align	2
 104              		.global	CySysClkImoStop
 105              		.code	16
 106              		.thumb_func
 107              		.type	CySysClkImoStop, %function
 108              	CySysClkImoStop:
 109              	.LFB2:
 121:.\Generated_Source\PSoC4/CyLib.c **** {
 110              		.loc 1 121 0
 111              		.cfi_startproc
 112 0000 08B5     		push	{r3, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 3, -8
 115              		.cfi_offset 14, -4
 123:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 116              		.loc 1 123 0
 117 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 118              	.LVL0:
 126:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 119              		.loc 1 126 0
 120 0006 034B     		ldr	r3, .L13
 121 0008 1A68     		ldr	r2, [r3]
 122 000a 5200     		lsl	r2, r2, #1
 123 000c 5208     		lsr	r2, r2, #1
 124 000e 1A60     		str	r2, [r3]
 127:.\Generated_Source\PSoC4/CyLib.c **** }
 125              		.loc 1 127 0
 126              		@ sp needed
 127 0010 08BD     		pop	{r3, pc}
 128              	.L14:
 129 0012 C046     		.align	2
 130              	.L13:
 131 0014 08010B40 		.word	1074462984
 132              		.cfi_endproc
 133              	.LFE2:
 134              		.size	CySysClkImoStop, .-CySysClkImoStop
 135              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 136              		.align	2
 137              		.global	CySysClkWriteHfclkDirect
 138              		.code	16
 139              		.thumb_func
 140              		.type	CySysClkWriteHfclkDirect, %function
 141              	CySysClkWriteHfclkDirect:
 142              	.LFB6:
 244:.\Generated_Source\PSoC4/CyLib.c **** 
 245:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 246:.\Generated_Source\PSoC4/CyLib.c **** 
 247:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 8


 248:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 250:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CyLib.c **** *
 252:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 253:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 254:.\Generated_Source\PSoC4/CyLib.c **** *
 255:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 256:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 257:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 258:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 259:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 260:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 261:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 262:.\Generated_Source\PSoC4/CyLib.c **** *
 263:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 264:.\Generated_Source\PSoC4/CyLib.c **** *  None
 265:.\Generated_Source\PSoC4/CyLib.c **** *
 266:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 267:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 268:.\Generated_Source\PSoC4/CyLib.c **** *
 269:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 270:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 271:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 272:.\Generated_Source\PSoC4/CyLib.c **** *
 273:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 274:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 275:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 276:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 277:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 278:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 279:.\Generated_Source\PSoC4/CyLib.c **** *
 280:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 282:.\Generated_Source\PSoC4/CyLib.c **** {
 143              		.loc 1 282 0
 144              		.cfi_startproc
 145              	.LVL1:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 041C     		mov	r4, r0
 283:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 284:.\Generated_Source\PSoC4/CyLib.c **** 
 285:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 151              		.loc 1 285 0
 152 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL2:
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
 154              		.loc 1 287 0
 155 0008 054B     		ldr	r3, .L16
 156 000a 1A68     		ldr	r2, [r3]
 157 000c 0721     		mov	r1, #7
 158 000e 8A43     		bic	r2, r1
 288:.\Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 9


 159              		.loc 1 288 0
 160 0010 0121     		mov	r1, #1
 161 0012 0C40     		and	r4, r1
 162              	.LVL3:
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
 163              		.loc 1 287 0
 164 0014 1443     		orr	r4, r2
 165 0016 1C60     		str	r4, [r3]
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 166              		.loc 1 290 0
 167 0018 FFF7FEFF 		bl	CyExitCriticalSection
 168              	.LVL4:
 291:.\Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 291 0
 170              		@ sp needed
 171 001c 10BD     		pop	{r4, pc}
 172              	.L17:
 173 001e C046     		.align	2
 174              	.L16:
 175 0020 00010B40 		.word	1074462976
 176              		.cfi_endproc
 177              	.LFE6:
 178              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 179              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 180              		.align	2
 181              		.global	CySysClkWriteSysclkDiv
 182              		.code	16
 183              		.thumb_func
 184              		.type	CySysClkWriteSysclkDiv, %function
 185              	CySysClkWriteSysclkDiv:
 186              	.LFB7:
 292:.\Generated_Source\PSoC4/CyLib.c **** 
 293:.\Generated_Source\PSoC4/CyLib.c **** 
 294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 296:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 297:.\Generated_Source\PSoC4/CyLib.c **** *
 298:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 299:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 300:.\Generated_Source\PSoC4/CyLib.c **** *
 301:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 302:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 303:.\Generated_Source\PSoC4/CyLib.c **** *
 304:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 305:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 306:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 307:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 308:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 309:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 310:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 311:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 312:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 313:.\Generated_Source\PSoC4/CyLib.c **** *
 314:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 315:.\Generated_Source\PSoC4/CyLib.c **** *  None
 316:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 10


 317:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 318:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 319:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 320:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 321:.\Generated_Source\PSoC4/CyLib.c **** *
 322:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 323:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 324:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 325:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 326:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 327:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 328:.\Generated_Source\PSoC4/CyLib.c **** *
 329:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 331:.\Generated_Source\PSoC4/CyLib.c **** {
 187              		.loc 1 331 0
 188              		.cfi_startproc
 189              	.LVL5:
 190 0000 10B5     		push	{r4, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 4, -8
 193              		.cfi_offset 14, -4
 194 0002 041C     		mov	r4, r0
 332:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 333:.\Generated_Source\PSoC4/CyLib.c **** 
 334:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 195              		.loc 1 334 0
 196 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 197              	.LVL6:
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 198              		.loc 1 336 0
 199 0008 0722     		mov	r2, #7
 200 000a 1440     		and	r4, r2
 201              	.LVL7:
 202 000c E204     		lsl	r2, r4, #19
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 338:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 203              		.loc 1 338 0
 204 000e 044B     		ldr	r3, .L19
 205 0010 1C68     		ldr	r4, [r3]
 206 0012 0449     		ldr	r1, .L19+4
 207 0014 0C40     		and	r4, r1
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 208              		.loc 1 337 0
 209 0016 1443     		orr	r4, r2
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 210              		.loc 1 336 0
 211 0018 1C60     		str	r4, [r3]
 339:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 340:.\Generated_Source\PSoC4/CyLib.c **** 
 341:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 212              		.loc 1 341 0
 213 001a FFF7FEFF 		bl	CyExitCriticalSection
 214              	.LVL8:
 342:.\Generated_Source\PSoC4/CyLib.c **** }
 215              		.loc 1 342 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 11


 216              		@ sp needed
 217 001e 10BD     		pop	{r4, pc}
 218              	.L20:
 219              		.align	2
 220              	.L19:
 221 0020 00010B40 		.word	1074462976
 222 0024 FFFFC7FF 		.word	-3670017
 223              		.cfi_endproc
 224              	.LFE7:
 225              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 226              		.section	.text.CySysLvdDisable,"ax",%progbits
 227              		.align	2
 228              		.global	CySysLvdDisable
 229              		.code	16
 230              		.thumb_func
 231              		.type	CySysLvdDisable, %function
 232              	CySysLvdDisable:
 233              	.LFB10:
 343:.\Generated_Source\PSoC4/CyLib.c **** 
 344:.\Generated_Source\PSoC4/CyLib.c **** 
 345:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 347:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c **** *
 349:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 350:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 351:.\Generated_Source\PSoC4/CyLib.c **** *
 352:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 353:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 354:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 355:.\Generated_Source\PSoC4/CyLib.c **** *
 356:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 357:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 358:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 359:.\Generated_Source\PSoC4/CyLib.c **** *
 360:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, if WCO lock feature is enabled then this
 361:.\Generated_Source\PSoC4/CyLib.c **** *  API will disable the lock, write the new IMO frequency and then re-enable the
 362:.\Generated_Source\PSoC4/CyLib.c **** *  lock.
 363:.\Generated_Source\PSoC4/CyLib.c **** *
 364:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 365:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 366:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 367:.\Generated_Source\PSoC4/CyLib.c **** *
 368:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 369:.\Generated_Source\PSoC4/CyLib.c **** *
 370:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 371:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 372:.\Generated_Source\PSoC4/CyLib.c **** *
 373:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 374:.\Generated_Source\PSoC4/CyLib.c **** *  None
 375:.\Generated_Source\PSoC4/CyLib.c **** *
 376:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 377:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 378:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 379:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 380:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 381:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 12


 382:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 383:.\Generated_Source\PSoC4/CyLib.c **** *
 384:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 385:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 386:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 387:.\Generated_Source\PSoC4/CyLib.c **** *
 388:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 390:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 392:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 393:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 394:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 395:.\Generated_Source\PSoC4/CyLib.c ****         #else
 396:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 397:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 398:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 399:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 400:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 401:.\Generated_Source\PSoC4/CyLib.c **** 
 402:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 403:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 404:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 405:.\Generated_Source\PSoC4/CyLib.c **** 
 406:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 407:.\Generated_Source\PSoC4/CyLib.c **** 
 408:.\Generated_Source\PSoC4/CyLib.c **** 
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 412:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 413:.\Generated_Source\PSoC4/CyLib.c ****             {
 414:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 415:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 416:.\Generated_Source\PSoC4/CyLib.c ****             }
 417:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 418:.\Generated_Source\PSoC4/CyLib.c **** 
 419:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 420:.\Generated_Source\PSoC4/CyLib.c **** 
 421:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 422:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 423:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 424:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 425:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 426:.\Generated_Source\PSoC4/CyLib.c **** 
 427:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 428:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 429:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 430:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 431:.\Generated_Source\PSoC4/CyLib.c **** 
 432:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 433:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 434:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 435:.\Generated_Source\PSoC4/CyLib.c **** 
 436:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 437:.\Generated_Source\PSoC4/CyLib.c **** 
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 13


 439:.\Generated_Source\PSoC4/CyLib.c ****         {
 440:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 441:.\Generated_Source\PSoC4/CyLib.c ****             {
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 443:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 444:.\Generated_Source\PSoC4/CyLib.c ****             }
 445:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 446:.\Generated_Source\PSoC4/CyLib.c ****             {
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 448:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 449:.\Generated_Source\PSoC4/CyLib.c ****             }
 450:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 451:.\Generated_Source\PSoC4/CyLib.c ****             {
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 453:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 454:.\Generated_Source\PSoC4/CyLib.c ****             }
 455:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 456:.\Generated_Source\PSoC4/CyLib.c ****             {
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 458:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 459:.\Generated_Source\PSoC4/CyLib.c ****             }
 460:.\Generated_Source\PSoC4/CyLib.c ****             else
 461:.\Generated_Source\PSoC4/CyLib.c ****             {
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 464:.\Generated_Source\PSoC4/CyLib.c ****             }
 465:.\Generated_Source\PSoC4/CyLib.c **** 
 466:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 468:.\Generated_Source\PSoC4/CyLib.c **** 
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c ****             /**********************************************`*****************************
 471:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 472:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 473:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 474:.\Generated_Source\PSoC4/CyLib.c ****             *
 475:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 476:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 477:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 478:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 480:.\Generated_Source\PSoC4/CyLib.c ****             {
 481:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 482:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 483:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 484:.\Generated_Source\PSoC4/CyLib.c **** 
 485:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 488:.\Generated_Source\PSoC4/CyLib.c ****             }
 489:.\Generated_Source\PSoC4/CyLib.c ****             else
 490:.\Generated_Source\PSoC4/CyLib.c ****             {
 491:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 492:.\Generated_Source\PSoC4/CyLib.c ****             }
 493:.\Generated_Source\PSoC4/CyLib.c **** 
 494:.\Generated_Source\PSoC4/CyLib.c **** 
 495:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 14


 496:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 497:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 498:.\Generated_Source\PSoC4/CyLib.c ****             *
 499:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 500:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 501:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 502:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 503:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 504:.\Generated_Source\PSoC4/CyLib.c ****             {
 505:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 506:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 507:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 508:.\Generated_Source\PSoC4/CyLib.c ****             }
 509:.\Generated_Source\PSoC4/CyLib.c **** 
 510:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 515:.\Generated_Source\PSoC4/CyLib.c **** 
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 517:.\Generated_Source\PSoC4/CyLib.c ****             {
 518:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 521:.\Generated_Source\PSoC4/CyLib.c ****             }
 522:.\Generated_Source\PSoC4/CyLib.c ****         }
 523:.\Generated_Source\PSoC4/CyLib.c ****         else
 524:.\Generated_Source\PSoC4/CyLib.c ****         {
 525:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 526:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 527:.\Generated_Source\PSoC4/CyLib.c ****         }
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 530:.\Generated_Source\PSoC4/CyLib.c **** 
 531:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 532:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 533:.\Generated_Source\PSoC4/CyLib.c ****             {
 534:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 535:.\Generated_Source\PSoC4/CyLib.c ****             }
 536:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 537:.\Generated_Source\PSoC4/CyLib.c **** 
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 540:.\Generated_Source\PSoC4/CyLib.c **** 
 541:.\Generated_Source\PSoC4/CyLib.c **** #else
 542:.\Generated_Source\PSoC4/CyLib.c **** 
 543:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 544:.\Generated_Source\PSoC4/CyLib.c ****     {
 545:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 546:.\Generated_Source\PSoC4/CyLib.c **** 
 547:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 548:.\Generated_Source\PSoC4/CyLib.c ****         {
 549:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 550:.\Generated_Source\PSoC4/CyLib.c **** 
 551:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 552:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 15


 553:.\Generated_Source\PSoC4/CyLib.c **** 
 554:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 555:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 556:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 559:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 560:.\Generated_Source\PSoC4/CyLib.c **** 
 561:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 562:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 563:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 566:.\Generated_Source\PSoC4/CyLib.c **** 
 567:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 568:.\Generated_Source\PSoC4/CyLib.c ****             {
 569:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 570:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 571:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 572:.\Generated_Source\PSoC4/CyLib.c **** 
 573:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 574:.\Generated_Source\PSoC4/CyLib.c **** 
 575:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 576:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 577:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 578:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 579:.\Generated_Source\PSoC4/CyLib.c ****             }
 580:.\Generated_Source\PSoC4/CyLib.c **** 
 581:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 582:.\Generated_Source\PSoC4/CyLib.c ****         }
 583:.\Generated_Source\PSoC4/CyLib.c ****         else
 584:.\Generated_Source\PSoC4/CyLib.c ****         {
 585:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 586:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 587:.\Generated_Source\PSoC4/CyLib.c ****         }
 588:.\Generated_Source\PSoC4/CyLib.c ****     }
 589:.\Generated_Source\PSoC4/CyLib.c **** 
 590:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 591:.\Generated_Source\PSoC4/CyLib.c **** 
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 594:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 595:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 596:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 597:.\Generated_Source\PSoC4/CyLib.c ****     *
 598:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 599:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 600:.\Generated_Source\PSoC4/CyLib.c ****     *
 601:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 602:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 603:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 604:.\Generated_Source\PSoC4/CyLib.c ****     *
 605:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 606:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 607:.\Generated_Source\PSoC4/CyLib.c ****     *
 608:.\Generated_Source\PSoC4/CyLib.c ****     *
 609:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 16


 610:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 611:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 612:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 613:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 614:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 615:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 616:.\Generated_Source\PSoC4/CyLib.c ****     *
 617:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 618:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 619:.\Generated_Source\PSoC4/CyLib.c ****     *
 620:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 621:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 622:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 623:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 624:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 625:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 626:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 627:.\Generated_Source\PSoC4/CyLib.c ****     *
 628:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 629:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 630:.\Generated_Source\PSoC4/CyLib.c ****     {
 631:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 636:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 637:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 640:.\Generated_Source\PSoC4/CyLib.c ****     }
 641:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 647:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 648:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 649:.\Generated_Source\PSoC4/CyLib.c ****     *
 650:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 651:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 652:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 653:.\Generated_Source\PSoC4/CyLib.c ****     *
 654:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 655:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 656:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 657:.\Generated_Source\PSoC4/CyLib.c ****     *
 658:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 659:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 660:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 661:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 662:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 663:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 664:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 665:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 666:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 17


 667:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 668:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 669:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 670:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 671:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 672:.\Generated_Source\PSoC4/CyLib.c ****     *
 673:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 674:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 675:.\Generated_Source\PSoC4/CyLib.c ****     {
 676:.\Generated_Source\PSoC4/CyLib.c ****         cystatus status = CYRET_SUCCESS;
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the RF oscillator band gap */
 679:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c ****         /* Update trimming register */
 682:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 683:.\Generated_Source\PSoC4/CyLib.c **** 
 684:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the Crystal */
 685:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 686:.\Generated_Source\PSoC4/CyLib.c **** 
 687:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 688:.\Generated_Source\PSoC4/CyLib.c ****         {
 689:.\Generated_Source\PSoC4/CyLib.c ****             status = CYRET_TIMEOUT;
 690:.\Generated_Source\PSoC4/CyLib.c **** 
 691:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 694:.\Generated_Source\PSoC4/CyLib.c **** 
 695:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 696:.\Generated_Source\PSoC4/CyLib.c ****                 {
 697:.\Generated_Source\PSoC4/CyLib.c ****                     status = CYRET_SUCCESS;
 698:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 699:.\Generated_Source\PSoC4/CyLib.c ****                 }
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c **** 
 702:.\Generated_Source\PSoC4/CyLib.c ****         }
 703:.\Generated_Source\PSoC4/CyLib.c **** 
 704:.\Generated_Source\PSoC4/CyLib.c ****         return(status);
 705:.\Generated_Source\PSoC4/CyLib.c ****     }
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c **** 
 708:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 709:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
 710:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 711:.\Generated_Source\PSoC4/CyLib.c ****     *
 712:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 713:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
 714:.\Generated_Source\PSoC4/CyLib.c ****     *
 715:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 716:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 717:.\Generated_Source\PSoC4/CyLib.c ****     *
 718:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 719:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 720:.\Generated_Source\PSoC4/CyLib.c ****     *
 721:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 722:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
 723:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 18


 724:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the RF oscillator band gap */
 725:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the Crystal */
 728:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 729:.\Generated_Source\PSoC4/CyLib.c ****     }
 730:.\Generated_Source\PSoC4/CyLib.c **** 
 731:.\Generated_Source\PSoC4/CyLib.c **** 
 732:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 733:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
 734:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 735:.\Generated_Source\PSoC4/CyLib.c ****     *
 736:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 737:.\Generated_Source\PSoC4/CyLib.c ****     *  Read status bit (50 ppm reached) for the megahertz crystal.
 738:.\Generated_Source\PSoC4/CyLib.c ****     *
 739:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 740:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 741:.\Generated_Source\PSoC4/CyLib.c ****     *
 742:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 743:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that XTAL output reached 50 ppm.
 744:.\Generated_Source\PSoC4/CyLib.c ****     *
 745:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 746:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
 747:.\Generated_Source\PSoC4/CyLib.c ****     {
 748:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT);
 749:.\Generated_Source\PSoC4/CyLib.c ****     }
 750:.\Generated_Source\PSoC4/CyLib.c **** 
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 753:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteEcoDiv
 754:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 755:.\Generated_Source\PSoC4/CyLib.c ****     *
 756:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 757:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects value for the ECO divider.
 758:.\Generated_Source\PSoC4/CyLib.c ****     *
 759:.\Generated_Source\PSoC4/CyLib.c ****     *  The ECO must not be the HFCLK clock source when this function is called.
 760:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK source can be changed to the other clock source by call to the
 761:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
 762:.\Generated_Source\PSoC4/CyLib.c ****     *  function will not have any effect if compiler in release mode, and halt the
 763:.\Generated_Source\PSoC4/CyLib.c ****     *  CPU when compiler in debug mode.
 764:.\Generated_Source\PSoC4/CyLib.c ****     *
 765:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 766:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: Power of 2 divider selection.
 767:.\Generated_Source\PSoC4/CyLib.c ****     *
 768:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 769:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
 770:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
 771:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
 772:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
 773:.\Generated_Source\PSoC4/CyLib.c ****     *
 774:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 775:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 776:.\Generated_Source\PSoC4/CyLib.c ****     *
 777:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 778:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 779:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 780:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 19


 781:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 782:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 783:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 784:.\Generated_Source\PSoC4/CyLib.c ****     *
 785:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 786:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteEcoDiv(uint32 divider)
 787:.\Generated_Source\PSoC4/CyLib.c ****     {
 788:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:.\Generated_Source\PSoC4/CyLib.c **** 
 790:.\Generated_Source\PSoC4/CyLib.c ****         if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK))
 791:.\Generated_Source\PSoC4/CyLib.c ****         {
 792:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 795:.\Generated_Source\PSoC4/CyLib.c ****                                                   (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~
 796:.\Generated_Source\PSoC4/CyLib.c **** 
 797:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 798:.\Generated_Source\PSoC4/CyLib.c ****         }
 799:.\Generated_Source\PSoC4/CyLib.c ****         else
 800:.\Generated_Source\PSoC4/CyLib.c ****         {
 801:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if ECO sources HFCLK */
 802:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 803:.\Generated_Source\PSoC4/CyLib.c ****         }
 804:.\Generated_Source\PSoC4/CyLib.c ****     }
 805:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 806:.\Generated_Source\PSoC4/CyLib.c **** 
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c **** 
 809:.\Generated_Source\PSoC4/CyLib.c **** 
 810:.\Generated_Source\PSoC4/CyLib.c **** 
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 815:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
 816:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 817:.\Generated_Source\PSoC4/CyLib.c ****     *
 818:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 819:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
 820:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
 821:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
 822:.\Generated_Source\PSoC4/CyLib.c ****     *
 823:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 824:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
 825:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
 826:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
 827:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
 828:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
 829:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
 830:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
 831:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
 832:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
 833:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
 834:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
 835:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
 836:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
 837:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 20


 838:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
 839:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
 840:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
 841:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
 842:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
 843:.\Generated_Source\PSoC4/CyLib.c ****     *
 844:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 845:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 846:.\Generated_Source\PSoC4/CyLib.c ****     *
 847:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 848:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 850:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 852:.\Generated_Source\PSoC4/CyLib.c **** 
 853:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 859:.\Generated_Source\PSoC4/CyLib.c **** 
 860:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 863:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
 864:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 865:.\Generated_Source\PSoC4/CyLib.c **** 
 866:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 871:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 872:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
 873:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 874:.\Generated_Source\PSoC4/CyLib.c ****     *
 875:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 876:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
 877:.\Generated_Source\PSoC4/CyLib.c ****     *
 878:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 879:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 880:.\Generated_Source\PSoC4/CyLib.c ****     *
 881:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 882:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 883:.\Generated_Source\PSoC4/CyLib.c ****     *
 884:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 885:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
 886:.\Generated_Source\PSoC4/CyLib.c ****     {
 234              		.loc 1 886 0
 235              		.cfi_startproc
 887:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 236              		.loc 1 887 0
 237 0000 054B     		ldr	r3, .L22
 238 0002 1A68     		ldr	r2, [r3]
 239 0004 0221     		mov	r1, #2
 240 0006 8A43     		bic	r2, r1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 21


 241 0008 1A60     		str	r2, [r3]
 888:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 242              		.loc 1 888 0
 243 000a 044B     		ldr	r3, .L22+4
 244 000c 1A68     		ldr	r2, [r3]
 245 000e 0121     		mov	r1, #1
 246 0010 8A43     		bic	r2, r1
 247 0012 1A60     		str	r2, [r3]
 889:.\Generated_Source\PSoC4/CyLib.c ****     }
 248              		.loc 1 889 0
 249              		@ sp needed
 250 0014 7047     		bx	lr
 251              	.L23:
 252 0016 C046     		.align	2
 253              	.L22:
 254 0018 08000B40 		.word	1074462728
 255 001c 18000B40 		.word	1074462744
 256              		.cfi_endproc
 257              	.LFE10:
 258              		.size	CySysLvdDisable, .-CySysLvdDisable
 259              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 260              		.align	2
 261              		.global	CySysLvdGetInterruptSource
 262              		.code	16
 263              		.thumb_func
 264              		.type	CySysLvdGetInterruptSource, %function
 265              	CySysLvdGetInterruptSource:
 266              	.LFB11:
 890:.\Generated_Source\PSoC4/CyLib.c **** 
 891:.\Generated_Source\PSoC4/CyLib.c **** 
 892:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
 894:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 895:.\Generated_Source\PSoC4/CyLib.c ****     *
 896:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 897:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
 898:.\Generated_Source\PSoC4/CyLib.c ****     *
 899:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 900:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 901:.\Generated_Source\PSoC4/CyLib.c ****     *
 902:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 903:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
 904:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
 905:.\Generated_Source\PSoC4/CyLib.c ****     *
 906:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 907:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
 908:.\Generated_Source\PSoC4/CyLib.c ****     {
 267              		.loc 1 908 0
 268              		.cfi_startproc
 909:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 269              		.loc 1 909 0
 270 0000 024B     		ldr	r3, .L25
 271 0002 1B68     		ldr	r3, [r3]
 272 0004 0220     		mov	r0, #2
 273 0006 1840     		and	r0, r3
 910:.\Generated_Source\PSoC4/CyLib.c ****     }
 274              		.loc 1 910 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 22


 275              		@ sp needed
 276 0008 7047     		bx	lr
 277              	.L26:
 278 000a C046     		.align	2
 279              	.L25:
 280 000c 04000B40 		.word	1074462724
 281              		.cfi_endproc
 282              	.LFE11:
 283              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 284              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 285              		.align	2
 286              		.global	CySysLvdClearInterrupt
 287              		.code	16
 288              		.thumb_func
 289              		.type	CySysLvdClearInterrupt, %function
 290              	CySysLvdClearInterrupt:
 291              	.LFB12:
 911:.\Generated_Source\PSoC4/CyLib.c **** 
 912:.\Generated_Source\PSoC4/CyLib.c **** 
 913:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 914:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
 915:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 916:.\Generated_Source\PSoC4/CyLib.c ****     *
 917:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 918:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
 919:.\Generated_Source\PSoC4/CyLib.c ****     *
 920:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 921:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 922:.\Generated_Source\PSoC4/CyLib.c ****     *
 923:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 924:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 927:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
 928:.\Generated_Source\PSoC4/CyLib.c ****     {
 292              		.loc 1 928 0
 293              		.cfi_startproc
 929:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 294              		.loc 1 929 0
 295 0000 0222     		mov	r2, #2
 296 0002 014B     		ldr	r3, .L28
 297 0004 1A60     		str	r2, [r3]
 930:.\Generated_Source\PSoC4/CyLib.c ****     }
 298              		.loc 1 930 0
 299              		@ sp needed
 300 0006 7047     		bx	lr
 301              	.L29:
 302              		.align	2
 303              	.L28:
 304 0008 04000B40 		.word	1074462724
 305              		.cfi_endproc
 306              	.LFE12:
 307              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 308              		.section	.text.CySysGetResetReason,"ax",%progbits
 309              		.align	2
 310              		.global	CySysGetResetReason
 311              		.code	16
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 23


 312              		.thumb_func
 313              		.type	CySysGetResetReason, %function
 314              	CySysGetResetReason:
 315              	.LFB13:
 931:.\Generated_Source\PSoC4/CyLib.c **** 
 932:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 933:.\Generated_Source\PSoC4/CyLib.c **** 
 934:.\Generated_Source\PSoC4/CyLib.c **** 
 935:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 936:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
 937:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 938:.\Generated_Source\PSoC4/CyLib.c **** *
 939:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 940:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
 941:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
 942:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
 943:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
 944:.\Generated_Source\PSoC4/CyLib.c **** *
 945:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 946:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
 947:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
 948:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
 949:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
 950:.\Generated_Source\PSoC4/CyLib.c **** *
 951:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 952:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
 953:.\Generated_Source\PSoC4/CyLib.c **** *
 954:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 955:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
 956:.\Generated_Source\PSoC4/CyLib.c **** {
 316              		.loc 1 956 0
 317              		.cfi_startproc
 318              	.LVL9:
 957:.\Generated_Source\PSoC4/CyLib.c ****     uint32 status;
 958:.\Generated_Source\PSoC4/CyLib.c **** 
 959:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 319              		.loc 1 959 0
 320 0000 1922     		mov	r2, #25
 321 0002 111C     		mov	r1, r2
 322 0004 0140     		and	r1, r0
 323              	.LVL10:
 960:.\Generated_Source\PSoC4/CyLib.c ****     status = CY_SYS_RES_CAUSE_REG &
 324              		.loc 1 960 0
 325 0006 024B     		ldr	r3, .L31
 326 0008 1868     		ldr	r0, [r3]
 327 000a 1040     		and	r0, r2
 328              	.LVL11:
 961:.\Generated_Source\PSoC4/CyLib.c ****              (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 962:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 329              		.loc 1 962 0
 330 000c 1960     		str	r1, [r3]
 963:.\Generated_Source\PSoC4/CyLib.c **** 
 964:.\Generated_Source\PSoC4/CyLib.c ****     return (status);
 965:.\Generated_Source\PSoC4/CyLib.c **** }
 331              		.loc 1 965 0
 332              		@ sp needed
 333 000e 7047     		bx	lr
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 24


 334              	.L32:
 335              		.align	2
 336              	.L31:
 337 0010 00030B40 		.word	1074463488
 338              		.cfi_endproc
 339              	.LFE13:
 340              		.size	CySysGetResetReason, .-CySysGetResetReason
 341              		.section	.text.CyDisableInts,"ax",%progbits
 342              		.align	2
 343              		.global	CyDisableInts
 344              		.code	16
 345              		.thumb_func
 346              		.type	CyDisableInts, %function
 347              	CyDisableInts:
 348              	.LFB14:
 966:.\Generated_Source\PSoC4/CyLib.c **** 
 967:.\Generated_Source\PSoC4/CyLib.c **** 
 968:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 969:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
 970:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 971:.\Generated_Source\PSoC4/CyLib.c **** *
 972:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 973:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
 974:.\Generated_Source\PSoC4/CyLib.c **** *
 975:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 976:.\Generated_Source\PSoC4/CyLib.c **** *  None
 977:.\Generated_Source\PSoC4/CyLib.c **** *
 978:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 979:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
 980:.\Generated_Source\PSoC4/CyLib.c **** *
 981:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 982:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
 983:.\Generated_Source\PSoC4/CyLib.c **** {
 349              		.loc 1 983 0
 350              		.cfi_startproc
 984:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
 987:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 351              		.loc 1 987 0
 352 0000 024B     		ldr	r3, .L34
 353 0002 1868     		ldr	r0, [r3]
 354              	.LVL12:
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
 990:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 355              		.loc 1 990 0
 356 0004 0122     		mov	r2, #1
 357 0006 5242     		neg	r2, r2
 358 0008 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 993:.\Generated_Source\PSoC4/CyLib.c **** }
 359              		.loc 1 993 0
 360              		@ sp needed
 361 000a 7047     		bx	lr
 362              	.L35:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 25


 363              		.align	2
 364              	.L34:
 365 000c 80E100E0 		.word	-536813184
 366              		.cfi_endproc
 367              	.LFE14:
 368              		.size	CyDisableInts, .-CyDisableInts
 369              		.section	.text.CyEnableInts,"ax",%progbits
 370              		.align	2
 371              		.global	CyEnableInts
 372              		.code	16
 373              		.thumb_func
 374              		.type	CyEnableInts, %function
 375              	CyEnableInts:
 376              	.LFB15:
 994:.\Generated_Source\PSoC4/CyLib.c **** 
 995:.\Generated_Source\PSoC4/CyLib.c **** 
 996:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
 998:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c **** *
1000:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1001:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
1002:.\Generated_Source\PSoC4/CyLib.c **** *
1003:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1004:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
1005:.\Generated_Source\PSoC4/CyLib.c **** *
1006:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1007:.\Generated_Source\PSoC4/CyLib.c **** *  None
1008:.\Generated_Source\PSoC4/CyLib.c **** *
1009:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1010:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
1011:.\Generated_Source\PSoC4/CyLib.c **** {
 377              		.loc 1 1011 0
 378              		.cfi_startproc
 379              	.LVL13:
1012:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 380              		.loc 1 1012 0
 381 0000 014B     		ldr	r3, .L37
 382 0002 1860     		str	r0, [r3]
1013:.\Generated_Source\PSoC4/CyLib.c **** }
 383              		.loc 1 1013 0
 384              		@ sp needed
 385 0004 7047     		bx	lr
 386              	.L38:
 387 0006 C046     		.align	2
 388              	.L37:
 389 0008 00E100E0 		.word	-536813312
 390              		.cfi_endproc
 391              	.LFE15:
 392              		.size	CyEnableInts, .-CyEnableInts
 393              		.section	.text.CyIntEnable,"ax",%progbits
 394              		.align	2
 395              		.global	CyIntEnable
 396              		.code	16
 397              		.thumb_func
 398              		.type	CyIntEnable, %function
 399              	CyIntEnable:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 26


 400              	.LFB22:
1014:.\Generated_Source\PSoC4/CyLib.c **** 
1015:.\Generated_Source\PSoC4/CyLib.c **** 
1016:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1017:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
1018:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c **** *
1020:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1021:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
1022:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
1023:.\Generated_Source\PSoC4/CyLib.c **** *
1024:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1025:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1026:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1027:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1028:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1029:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1030:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1031:.\Generated_Source\PSoC4/CyLib.c **** *
1032:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
1033:.\Generated_Source\PSoC4/CyLib.c **** *
1034:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1035:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
1036:.\Generated_Source\PSoC4/CyLib.c **** *
1037:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1038:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
1039:.\Generated_Source\PSoC4/CyLib.c **** {
1040:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1041:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
1044:.\Generated_Source\PSoC4/CyLib.c **** 
1045:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
1047:.\Generated_Source\PSoC4/CyLib.c **** 
1048:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
1050:.\Generated_Source\PSoC4/CyLib.c **** 
1051:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
1052:.\Generated_Source\PSoC4/CyLib.c **** }
1053:.\Generated_Source\PSoC4/CyLib.c **** 
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1056:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
1057:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1058:.\Generated_Source\PSoC4/CyLib.c **** *
1059:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1060:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
1061:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
1062:.\Generated_Source\PSoC4/CyLib.c **** *
1063:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1064:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1065:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1066:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1067:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1068:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1069:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 27


1070:.\Generated_Source\PSoC4/CyLib.c **** *
1071:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1072:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
1073:.\Generated_Source\PSoC4/CyLib.c **** *
1074:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1075:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
1076:.\Generated_Source\PSoC4/CyLib.c **** {
1077:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1078:.\Generated_Source\PSoC4/CyLib.c **** 
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
1080:.\Generated_Source\PSoC4/CyLib.c **** 
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
1082:.\Generated_Source\PSoC4/CyLib.c **** }
1083:.\Generated_Source\PSoC4/CyLib.c **** 
1084:.\Generated_Source\PSoC4/CyLib.c **** 
1085:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1086:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
1087:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1088:.\Generated_Source\PSoC4/CyLib.c **** *
1089:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1090:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
1091:.\Generated_Source\PSoC4/CyLib.c **** *
1092:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1093:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1094:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
1095:.\Generated_Source\PSoC4/CyLib.c **** *
1096:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1097:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
1098:.\Generated_Source\PSoC4/CyLib.c **** *
1099:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
1101:.\Generated_Source\PSoC4/CyLib.c **** {
1102:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1103:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
1112:.\Generated_Source\PSoC4/CyLib.c **** 
1113:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
1114:.\Generated_Source\PSoC4/CyLib.c **** }
1115:.\Generated_Source\PSoC4/CyLib.c **** 
1116:.\Generated_Source\PSoC4/CyLib.c **** 
1117:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1118:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
1119:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1120:.\Generated_Source\PSoC4/CyLib.c **** *
1121:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1122:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
1123:.\Generated_Source\PSoC4/CyLib.c **** *
1124:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1125:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1126:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 28


1127:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1128:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
1129:.\Generated_Source\PSoC4/CyLib.c **** *
1130:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1131:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
1132:.\Generated_Source\PSoC4/CyLib.c **** {
1133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1134:.\Generated_Source\PSoC4/CyLib.c **** 
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1136:.\Generated_Source\PSoC4/CyLib.c **** 
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
1138:.\Generated_Source\PSoC4/CyLib.c **** }
1139:.\Generated_Source\PSoC4/CyLib.c **** 
1140:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
1142:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/CyLib.c **** *
1144:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1145:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
1146:.\Generated_Source\PSoC4/CyLib.c **** *
1147:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1148:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
1149:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1150:.\Generated_Source\PSoC4/CyLib.c **** *
1151:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1152:.\Generated_Source\PSoC4/CyLib.c **** *  None
1153:.\Generated_Source\PSoC4/CyLib.c **** *
1154:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
1156:.\Generated_Source\PSoC4/CyLib.c **** {
1157:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
1158:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
1159:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
1160:.\Generated_Source\PSoC4/CyLib.c **** 
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1163:.\Generated_Source\PSoC4/CyLib.c **** 
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
1165:.\Generated_Source\PSoC4/CyLib.c **** 
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
1167:.\Generated_Source\PSoC4/CyLib.c **** 
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
1172:.\Generated_Source\PSoC4/CyLib.c **** 
1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
1174:.\Generated_Source\PSoC4/CyLib.c **** }
1175:.\Generated_Source\PSoC4/CyLib.c **** 
1176:.\Generated_Source\PSoC4/CyLib.c **** 
1177:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1178:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
1179:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1180:.\Generated_Source\PSoC4/CyLib.c **** *
1181:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1182:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
1183:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 29


1184:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1185:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1186:.\Generated_Source\PSoC4/CyLib.c **** *
1187:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1188:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
1189:.\Generated_Source\PSoC4/CyLib.c **** *
1190:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
1192:.\Generated_Source\PSoC4/CyLib.c **** {
1193:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
1198:.\Generated_Source\PSoC4/CyLib.c **** 
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
1200:.\Generated_Source\PSoC4/CyLib.c **** }
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
1205:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/CyLib.c **** *
1207:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1208:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
1209:.\Generated_Source\PSoC4/CyLib.c **** *
1210:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1211:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1212:.\Generated_Source\PSoC4/CyLib.c **** *
1213:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1214:.\Generated_Source\PSoC4/CyLib.c **** *  None
1215:.\Generated_Source\PSoC4/CyLib.c **** *
1216:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1217:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
1218:.\Generated_Source\PSoC4/CyLib.c **** {
 401              		.loc 1 1218 0
 402              		.cfi_startproc
 403              	.LVL14:
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 404              		.loc 1 1219 0
 405 0000 1F23     		mov	r3, #31
 406 0002 1840     		and	r0, r3
 407              	.LVL15:
 408 0004 0123     		mov	r3, #1
 409 0006 8340     		lsl	r3, r3, r0
 410 0008 181C     		mov	r0, r3
 411 000a 014B     		ldr	r3, .L40
 412 000c 1860     		str	r0, [r3]
1220:.\Generated_Source\PSoC4/CyLib.c **** }
 413              		.loc 1 1220 0
 414              		@ sp needed
 415 000e 7047     		bx	lr
 416              	.L41:
 417              		.align	2
 418              	.L40:
 419 0010 00E100E0 		.word	-536813312
 420              		.cfi_endproc
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 30


 421              	.LFE22:
 422              		.size	CyIntEnable, .-CyIntEnable
 423              		.section	.text.CyIntGetState,"ax",%progbits
 424              		.align	2
 425              		.global	CyIntGetState
 426              		.code	16
 427              		.thumb_func
 428              		.type	CyIntGetState, %function
 429              	CyIntGetState:
 430              	.LFB23:
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
1225:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c **** *
1227:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
1229:.\Generated_Source\PSoC4/CyLib.c **** *
1230:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1231:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1232:.\Generated_Source\PSoC4/CyLib.c **** *
1233:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1234:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
1235:.\Generated_Source\PSoC4/CyLib.c **** *
1236:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
1238:.\Generated_Source\PSoC4/CyLib.c **** {
 431              		.loc 1 1238 0
 432              		.cfi_startproc
 433              	.LVL16:
1239:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
1240:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 434              		.loc 1 1240 0
 435 0000 044B     		ldr	r3, .L43
 436 0002 1B68     		ldr	r3, [r3]
 437 0004 1F22     		mov	r2, #31
 438 0006 1040     		and	r0, r2
 439              	.LVL17:
 440 0008 C340     		lsr	r3, r3, r0
 441 000a 181C     		mov	r0, r3
 442 000c 0123     		mov	r3, #1
 443 000e 1840     		and	r0, r3
1241:.\Generated_Source\PSoC4/CyLib.c **** }
 444              		.loc 1 1241 0
 445              		@ sp needed
 446 0010 7047     		bx	lr
 447              	.L44:
 448 0012 C046     		.align	2
 449              	.L43:
 450 0014 00E100E0 		.word	-536813312
 451              		.cfi_endproc
 452              	.LFE23:
 453              		.size	CyIntGetState, .-CyIntGetState
 454              		.section	.text.CyIntDisable,"ax",%progbits
 455              		.align	2
 456              		.global	CyIntDisable
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 31


 457              		.code	16
 458              		.thumb_func
 459              		.type	CyIntDisable, %function
 460              	CyIntDisable:
 461              	.LFB24:
1242:.\Generated_Source\PSoC4/CyLib.c **** 
1243:.\Generated_Source\PSoC4/CyLib.c **** 
1244:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1245:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
1246:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1247:.\Generated_Source\PSoC4/CyLib.c **** *
1248:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1249:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
1250:.\Generated_Source\PSoC4/CyLib.c **** *
1251:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1252:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
1253:.\Generated_Source\PSoC4/CyLib.c **** *
1254:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1255:.\Generated_Source\PSoC4/CyLib.c **** *  None
1256:.\Generated_Source\PSoC4/CyLib.c **** *
1257:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1258:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
1259:.\Generated_Source\PSoC4/CyLib.c **** {
 462              		.loc 1 1259 0
 463              		.cfi_startproc
 464              	.LVL18:
1260:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 465              		.loc 1 1260 0
 466 0000 1F23     		mov	r3, #31
 467 0002 1840     		and	r0, r3
 468              	.LVL19:
 469 0004 0123     		mov	r3, #1
 470 0006 8340     		lsl	r3, r3, r0
 471 0008 181C     		mov	r0, r3
 472 000a 014B     		ldr	r3, .L46
 473 000c 1860     		str	r0, [r3]
1261:.\Generated_Source\PSoC4/CyLib.c **** }
 474              		.loc 1 1261 0
 475              		@ sp needed
 476 000e 7047     		bx	lr
 477              	.L47:
 478              		.align	2
 479              	.L46:
 480 0010 80E100E0 		.word	-536813184
 481              		.cfi_endproc
 482              	.LFE24:
 483              		.size	CyIntDisable, .-CyIntDisable
 484              		.section	.text.CyIntSetPending,"ax",%progbits
 485              		.align	2
 486              		.global	CyIntSetPending
 487              		.code	16
 488              		.thumb_func
 489              		.type	CyIntSetPending, %function
 490              	CyIntSetPending:
 491              	.LFB25:
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 32


1264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
1265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1266:.\Generated_Source\PSoC4/CyLib.c **** *
1267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1268:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
1269:.\Generated_Source\PSoC4/CyLib.c **** *
1270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1272:.\Generated_Source\PSoC4/CyLib.c **** *
1273:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1274:.\Generated_Source\PSoC4/CyLib.c **** *  None
1275:.\Generated_Source\PSoC4/CyLib.c **** *
1276:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1277:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
1278:.\Generated_Source\PSoC4/CyLib.c **** {
 492              		.loc 1 1278 0
 493              		.cfi_startproc
 494              	.LVL20:
1279:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 495              		.loc 1 1279 0
 496 0000 1F23     		mov	r3, #31
 497 0002 1840     		and	r0, r3
 498              	.LVL21:
 499 0004 0123     		mov	r3, #1
 500 0006 8340     		lsl	r3, r3, r0
 501 0008 181C     		mov	r0, r3
 502 000a 014B     		ldr	r3, .L49
 503 000c 1860     		str	r0, [r3]
1280:.\Generated_Source\PSoC4/CyLib.c **** }
 504              		.loc 1 1280 0
 505              		@ sp needed
 506 000e 7047     		bx	lr
 507              	.L50:
 508              		.align	2
 509              	.L49:
 510 0010 00E200E0 		.word	-536813056
 511              		.cfi_endproc
 512              	.LFE25:
 513              		.size	CyIntSetPending, .-CyIntSetPending
 514              		.section	.text.CyIntClearPending,"ax",%progbits
 515              		.align	2
 516              		.global	CyIntClearPending
 517              		.code	16
 518              		.thumb_func
 519              		.type	CyIntClearPending, %function
 520              	CyIntClearPending:
 521              	.LFB26:
1281:.\Generated_Source\PSoC4/CyLib.c **** 
1282:.\Generated_Source\PSoC4/CyLib.c **** 
1283:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1284:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
1285:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1286:.\Generated_Source\PSoC4/CyLib.c **** *
1287:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1288:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
1289:.\Generated_Source\PSoC4/CyLib.c **** *
1290:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 33


1291:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1292:.\Generated_Source\PSoC4/CyLib.c **** *
1293:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1294:.\Generated_Source\PSoC4/CyLib.c **** *  None
1295:.\Generated_Source\PSoC4/CyLib.c **** *
1296:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1297:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
1298:.\Generated_Source\PSoC4/CyLib.c **** {
 522              		.loc 1 1298 0
 523              		.cfi_startproc
 524              	.LVL22:
1299:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 525              		.loc 1 1299 0
 526 0000 1F23     		mov	r3, #31
 527 0002 1840     		and	r0, r3
 528              	.LVL23:
 529 0004 0123     		mov	r3, #1
 530 0006 8340     		lsl	r3, r3, r0
 531 0008 181C     		mov	r0, r3
 532 000a 014B     		ldr	r3, .L52
 533 000c 1860     		str	r0, [r3]
1300:.\Generated_Source\PSoC4/CyLib.c **** }
 534              		.loc 1 1300 0
 535              		@ sp needed
 536 000e 7047     		bx	lr
 537              	.L53:
 538              		.align	2
 539              	.L52:
 540 0010 80E200E0 		.word	-536812928
 541              		.cfi_endproc
 542              	.LFE26:
 543              		.size	CyIntClearPending, .-CyIntClearPending
 544              		.section	.text.CyHalt,"ax",%progbits
 545              		.align	2
 546              		.global	CyHalt
 547              		.code	16
 548              		.thumb_func
 549              		.type	CyHalt, %function
 550              	CyHalt:
 551              	.LFB27:
1301:.\Generated_Source\PSoC4/CyLib.c **** 
1302:.\Generated_Source\PSoC4/CyLib.c **** 
1303:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1304:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
1305:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1306:.\Generated_Source\PSoC4/CyLib.c **** *
1307:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1308:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
1309:.\Generated_Source\PSoC4/CyLib.c **** *
1310:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1311:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
1312:.\Generated_Source\PSoC4/CyLib.c **** *
1313:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1314:.\Generated_Source\PSoC4/CyLib.c **** *  None
1315:.\Generated_Source\PSoC4/CyLib.c **** *
1316:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 34


1318:.\Generated_Source\PSoC4/CyLib.c **** {
 552              		.loc 1 1318 0
 553              		.cfi_startproc
 554              	.LVL24:
1319:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
1320:.\Generated_Source\PSoC4/CyLib.c ****     {
1321:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
1322:.\Generated_Source\PSoC4/CyLib.c ****     }
1323:.\Generated_Source\PSoC4/CyLib.c **** 
1324:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
1325:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
1326:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
1327:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 555              		.loc 1 1327 0
 556              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 557 0000 01BE     		    bkpt    1
 558              	@ 0 "" 2
1328:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
1329:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
1330:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
1331:.\Generated_Source\PSoC4/CyLib.c **** }
 559              		.loc 1 1331 0
 560              		.code	16
 561              		@ sp needed
 562 0002 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE27:
 565              		.size	CyHalt, .-CyHalt
 566              		.section	.text.CyIntSetSysVector,"ax",%progbits
 567              		.align	2
 568              		.global	CyIntSetSysVector
 569              		.code	16
 570              		.thumb_func
 571              		.type	CyIntSetSysVector, %function
 572              	CyIntSetSysVector:
 573              	.LFB16:
1039:.\Generated_Source\PSoC4/CyLib.c **** {
 574              		.loc 1 1039 0
 575              		.cfi_startproc
 576              	.LVL25:
 577 0000 38B5     		push	{r3, r4, r5, lr}
 578              		.cfi_def_cfa_offset 16
 579              		.cfi_offset 3, -16
 580              		.cfi_offset 4, -12
 581              		.cfi_offset 5, -8
 582              		.cfi_offset 14, -4
 583 0002 041C     		mov	r4, r0
 584 0004 0D1C     		mov	r5, r1
 585              	.LVL26:
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 586              		.loc 1 1043 0
 587 0006 0F28     		cmp	r0, #15
 588 0008 02D9     		bls	.L56
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 589              		.loc 1 1043 0 is_stmt 0 discriminator 1
 590 000a 0020     		mov	r0, #0
 591              	.LVL27:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 35


 592 000c FFF7FEFF 		bl	CyHalt
 593              	.LVL28:
 594              	.L56:
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 595              		.loc 1 1046 0 is_stmt 1
 596 0010 A400     		lsl	r4, r4, #2
 597 0012 8023     		mov	r3, #128
 598 0014 9B05     		lsl	r3, r3, #22
 599 0016 E418     		add	r4, r4, r3
 600 0018 2068     		ldr	r0, [r4]
 601              	.LVL29:
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 602              		.loc 1 1049 0
 603 001a 2560     		str	r5, [r4]
1052:.\Generated_Source\PSoC4/CyLib.c **** }
 604              		.loc 1 1052 0
 605              		@ sp needed
 606              	.LVL30:
 607 001c 38BD     		pop	{r3, r4, r5, pc}
 608              		.cfi_endproc
 609              	.LFE16:
 610              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 611 001e C046     		.section	.text.CyIntGetSysVector,"ax",%progbits
 612              		.align	2
 613              		.global	CyIntGetSysVector
 614              		.code	16
 615              		.thumb_func
 616              		.type	CyIntGetSysVector, %function
 617              	CyIntGetSysVector:
 618              	.LFB17:
1076:.\Generated_Source\PSoC4/CyLib.c **** {
 619              		.loc 1 1076 0
 620              		.cfi_startproc
 621              	.LVL31:
 622 0000 10B5     		push	{r4, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 4, -8
 625              		.cfi_offset 14, -4
 626 0002 041E     		sub	r4, r0, #0
 627              	.LVL32:
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 628              		.loc 1 1079 0
 629 0004 0F2C     		cmp	r4, #15
 630 0006 02D9     		bls	.L58
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 631              		.loc 1 1079 0 is_stmt 0 discriminator 1
 632 0008 0020     		mov	r0, #0
 633              	.LVL33:
 634 000a FFF7FEFF 		bl	CyHalt
 635              	.LVL34:
 636              	.L58:
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 637              		.loc 1 1081 0 is_stmt 1
 638 000e A400     		lsl	r4, r4, #2
 639 0010 8023     		mov	r3, #128
 640 0012 9B05     		lsl	r3, r3, #22
 641 0014 E418     		add	r4, r4, r3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 36


 642 0016 2068     		ldr	r0, [r4]
1082:.\Generated_Source\PSoC4/CyLib.c **** }
 643              		.loc 1 1082 0
 644              		@ sp needed
 645 0018 10BD     		pop	{r4, pc}
 646              		.cfi_endproc
 647              	.LFE17:
 648              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 649 001a C046     		.section	.text.CyIntSetVector,"ax",%progbits
 650              		.align	2
 651              		.global	CyIntSetVector
 652              		.code	16
 653              		.thumb_func
 654              		.type	CyIntSetVector, %function
 655              	CyIntSetVector:
 656              	.LFB18:
1101:.\Generated_Source\PSoC4/CyLib.c **** {
 657              		.loc 1 1101 0
 658              		.cfi_startproc
 659              	.LVL35:
 660 0000 38B5     		push	{r3, r4, r5, lr}
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 3, -16
 663              		.cfi_offset 4, -12
 664              		.cfi_offset 5, -8
 665              		.cfi_offset 14, -4
 666 0002 041C     		mov	r4, r0
 667 0004 0D1C     		mov	r5, r1
 668              	.LVL36:
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 669              		.loc 1 1105 0
 670 0006 1F28     		cmp	r0, #31
 671 0008 02D9     		bls	.L60
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 672              		.loc 1 1105 0 is_stmt 0 discriminator 1
 673 000a 0020     		mov	r0, #0
 674              	.LVL37:
 675 000c FFF7FEFF 		bl	CyHalt
 676              	.LVL38:
 677              	.L60:
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 678              		.loc 1 1108 0 is_stmt 1
 679 0010 A400     		lsl	r4, r4, #2
 680 0012 024B     		ldr	r3, .L61
 681 0014 E418     		add	r4, r4, r3
 682 0016 2068     		ldr	r0, [r4]
 683              	.LVL39:
1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 684              		.loc 1 1111 0
 685 0018 2560     		str	r5, [r4]
1114:.\Generated_Source\PSoC4/CyLib.c **** }
 686              		.loc 1 1114 0
 687              		@ sp needed
 688              	.LVL40:
 689 001a 38BD     		pop	{r3, r4, r5, pc}
 690              	.L62:
 691              		.align	2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 37


 692              	.L61:
 693 001c 40000020 		.word	536870976
 694              		.cfi_endproc
 695              	.LFE18:
 696              		.size	CyIntSetVector, .-CyIntSetVector
 697              		.section	.text.CyIntGetVector,"ax",%progbits
 698              		.align	2
 699              		.global	CyIntGetVector
 700              		.code	16
 701              		.thumb_func
 702              		.type	CyIntGetVector, %function
 703              	CyIntGetVector:
 704              	.LFB19:
1132:.\Generated_Source\PSoC4/CyLib.c **** {
 705              		.loc 1 1132 0
 706              		.cfi_startproc
 707              	.LVL41:
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
 712 0002 041E     		sub	r4, r0, #0
 713              	.LVL42:
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 714              		.loc 1 1135 0
 715 0004 1F2C     		cmp	r4, #31
 716 0006 02D9     		bls	.L64
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 717              		.loc 1 1135 0 is_stmt 0 discriminator 1
 718 0008 0020     		mov	r0, #0
 719              	.LVL43:
 720 000a FFF7FEFF 		bl	CyHalt
 721              	.LVL44:
 722              	.L64:
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 723              		.loc 1 1137 0 is_stmt 1
 724 000e A400     		lsl	r4, r4, #2
 725 0010 014B     		ldr	r3, .L65
 726 0012 E418     		add	r4, r4, r3
 727 0014 2068     		ldr	r0, [r4]
1138:.\Generated_Source\PSoC4/CyLib.c **** }
 728              		.loc 1 1138 0
 729              		@ sp needed
 730 0016 10BD     		pop	{r4, pc}
 731              	.L66:
 732              		.align	2
 733              	.L65:
 734 0018 40000020 		.word	536870976
 735              		.cfi_endproc
 736              	.LFE19:
 737              		.size	CyIntGetVector, .-CyIntGetVector
 738              		.section	.text.CyIntSetPriority,"ax",%progbits
 739              		.align	2
 740              		.global	CyIntSetPriority
 741              		.code	16
 742              		.thumb_func
 743              		.type	CyIntSetPriority, %function
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 38


 744              	CyIntSetPriority:
 745              	.LFB20:
1156:.\Generated_Source\PSoC4/CyLib.c **** {
 746              		.loc 1 1156 0
 747              		.cfi_startproc
 748              	.LVL45:
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 755 0002 041C     		mov	r4, r0
 756 0004 0E1E     		sub	r6, r1, #0
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 757              		.loc 1 1161 0
 758 0006 032E     		cmp	r6, #3
 759 0008 02D9     		bls	.L68
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 760              		.loc 1 1161 0 is_stmt 0 discriminator 1
 761 000a 0020     		mov	r0, #0
 762              	.LVL46:
 763 000c FFF7FEFF 		bl	CyHalt
 764              	.LVL47:
 765              	.L68:
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 766              		.loc 1 1162 0 is_stmt 1
 767 0010 1F2C     		cmp	r4, #31
 768 0012 02D9     		bls	.L69
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 769              		.loc 1 1162 0 is_stmt 0 discriminator 1
 770 0014 0020     		mov	r0, #0
 771 0016 FFF7FEFF 		bl	CyHalt
 772              	.LVL48:
 773              	.L69:
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 774              		.loc 1 1164 0 is_stmt 1
 775 001a 0325     		mov	r5, #3
 776 001c 2540     		and	r5, r4
 777 001e ED00     		lsl	r5, r5, #3
 778 0020 0635     		add	r5, r5, #6
 779              	.LVL49:
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 780              		.loc 1 1166 0
 781 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 782              	.LVL50:
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 783              		.loc 1 1168 0
 784 0026 A408     		lsr	r4, r4, #2
 785 0028 A400     		lsl	r4, r4, #2
 786 002a 064B     		ldr	r3, .L70
 787 002c E418     		add	r4, r4, r3
 788 002e 2368     		ldr	r3, [r4]
 789              	.LVL51:
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 790              		.loc 1 1169 0
 791 0030 0322     		mov	r2, #3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 39


 792 0032 AA40     		lsl	r2, r2, r5
 793 0034 9343     		bic	r3, r2
 794              	.LVL52:
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 795              		.loc 1 1170 0
 796 0036 AE40     		lsl	r6, r6, r5
 797 0038 351C     		mov	r5, r6
 798              	.LVL53:
 799 003a 1D43     		orr	r5, r3
 800              	.LVL54:
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 801              		.loc 1 1171 0
 802 003c 2560     		str	r5, [r4]
1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 803              		.loc 1 1173 0
 804 003e FFF7FEFF 		bl	CyExitCriticalSection
 805              	.LVL55:
1174:.\Generated_Source\PSoC4/CyLib.c **** }
 806              		.loc 1 1174 0
 807              		@ sp needed
 808              	.LVL56:
 809 0042 70BD     		pop	{r4, r5, r6, pc}
 810              	.L71:
 811              		.align	2
 812              	.L70:
 813 0044 00E400E0 		.word	-536812544
 814              		.cfi_endproc
 815              	.LFE20:
 816              		.size	CyIntSetPriority, .-CyIntSetPriority
 817              		.section	.text.CyIntGetPriority,"ax",%progbits
 818              		.align	2
 819              		.global	CyIntGetPriority
 820              		.code	16
 821              		.thumb_func
 822              		.type	CyIntGetPriority, %function
 823              	CyIntGetPriority:
 824              	.LFB21:
1192:.\Generated_Source\PSoC4/CyLib.c **** {
 825              		.loc 1 1192 0
 826              		.cfi_startproc
 827              	.LVL57:
 828 0000 10B5     		push	{r4, lr}
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 4, -8
 831              		.cfi_offset 14, -4
 832 0002 041E     		sub	r4, r0, #0
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 833              		.loc 1 1195 0
 834 0004 1F2C     		cmp	r4, #31
 835 0006 02D9     		bls	.L73
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 836              		.loc 1 1195 0 is_stmt 0 discriminator 1
 837 0008 0020     		mov	r0, #0
 838              	.LVL58:
 839 000a FFF7FEFF 		bl	CyHalt
 840              	.LVL59:
 841              	.L73:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 40


1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 842              		.loc 1 1197 0 is_stmt 1
 843 000e A308     		lsr	r3, r4, #2
 844 0010 9B00     		lsl	r3, r3, #2
 845 0012 054A     		ldr	r2, .L74
 846 0014 9B18     		add	r3, r3, r2
 847 0016 1868     		ldr	r0, [r3]
 848 0018 0323     		mov	r3, #3
 849 001a 1C40     		and	r4, r3
 850 001c E400     		lsl	r4, r4, #3
 851 001e 0634     		add	r4, r4, #6
 852 0020 E040     		lsr	r0, r0, r4
 853              	.LVL60:
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 854              		.loc 1 1199 0
 855 0022 1840     		and	r0, r3
 856              	.LVL61:
1200:.\Generated_Source\PSoC4/CyLib.c **** }
 857              		.loc 1 1200 0
 858              		@ sp needed
 859 0024 10BD     		pop	{r4, pc}
 860              	.L75:
 861 0026 C046     		.align	2
 862              	.L74:
 863 0028 00E400E0 		.word	-536812544
 864              		.cfi_endproc
 865              	.LFE21:
 866              		.size	CyIntGetPriority, .-CyIntGetPriority
 867              		.section	.text.CySoftwareReset,"ax",%progbits
 868              		.align	2
 869              		.global	CySoftwareReset
 870              		.code	16
 871              		.thumb_func
 872              		.type	CySoftwareReset, %function
 873              	CySoftwareReset:
 874              	.LFB28:
1332:.\Generated_Source\PSoC4/CyLib.c **** 
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1335:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
1336:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1337:.\Generated_Source\PSoC4/CyLib.c **** *
1338:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1339:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
1340:.\Generated_Source\PSoC4/CyLib.c **** *
1341:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1342:.\Generated_Source\PSoC4/CyLib.c **** *  None
1343:.\Generated_Source\PSoC4/CyLib.c **** *
1344:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1345:.\Generated_Source\PSoC4/CyLib.c **** *  None
1346:.\Generated_Source\PSoC4/CyLib.c **** *
1347:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
1349:.\Generated_Source\PSoC4/CyLib.c **** {
 875              		.loc 1 1349 0
 876              		.cfi_startproc
1350:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 41


1351:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
1352:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
1353:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 877              		.loc 1 1354 0
 878 0000 034B     		ldr	r3, .L77
 879 0002 1A68     		ldr	r2, [r3]
 880 0004 1204     		lsl	r2, r2, #16
 881 0006 120C     		lsr	r2, r2, #16
1355:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 882              		.loc 1 1355 0
 883 0008 0249     		ldr	r1, .L77+4
 884 000a 0A43     		orr	r2, r1
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 885              		.loc 1 1354 0
 886 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/CyLib.c **** }
 887              		.loc 1 1356 0
 888              		@ sp needed
 889 000e 7047     		bx	lr
 890              	.L78:
 891              		.align	2
 892              	.L77:
 893 0010 0CED00E0 		.word	-536810228
 894 0014 0400FA05 		.word	100270084
 895              		.cfi_endproc
 896              	.LFE28:
 897              		.size	CySoftwareReset, .-CySoftwareReset
 898              		.section	.text.CyDelay,"ax",%progbits
 899              		.align	2
 900              		.global	CyDelay
 901              		.code	16
 902              		.thumb_func
 903              		.type	CyDelay, %function
 904              	CyDelay:
 905              	.LFB29:
1357:.\Generated_Source\PSoC4/CyLib.c **** 
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
1361:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/CyLib.c **** *
1363:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1364:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
1365:.\Generated_Source\PSoC4/CyLib.c **** *
1366:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1367:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
1368:.\Generated_Source\PSoC4/CyLib.c **** *
1369:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1370:.\Generated_Source\PSoC4/CyLib.c **** *  None
1371:.\Generated_Source\PSoC4/CyLib.c **** *
1372:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1373:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
1374:.\Generated_Source\PSoC4/CyLib.c **** {
 906              		.loc 1 1374 0
 907              		.cfi_startproc
 908              	.LVL62:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 42


 909 0000 70B5     		push	{r4, r5, r6, lr}
 910              		.cfi_def_cfa_offset 16
 911              		.cfi_offset 4, -16
 912              		.cfi_offset 5, -12
 913              		.cfi_offset 6, -8
 914              		.cfi_offset 14, -4
 915 0002 041C     		mov	r4, r0
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 916              		.loc 1 1375 0
 917 0004 8025     		mov	r5, #128
 918 0006 2D02     		lsl	r5, r5, #8
1376:.\Generated_Source\PSoC4/CyLib.c ****     {
1377:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
1378:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
1379:.\Generated_Source\PSoC4/CyLib.c ****          */
1380:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 919              		.loc 1 1380 0
 920 0008 074E     		ldr	r6, .L82
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 921              		.loc 1 1375 0
 922 000a 04E0     		b	.L80
 923              	.LVL63:
 924              	.L81:
 925              		.loc 1 1380 0
 926 000c 3068     		ldr	r0, [r6]
 927 000e FFF7FEFF 		bl	CyDelayCycles
 928              	.LVL64:
1381:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 929              		.loc 1 1381 0
 930 0012 064B     		ldr	r3, .L82+4
 931 0014 E418     		add	r4, r4, r3
 932              	.LVL65:
 933              	.L80:
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 934              		.loc 1 1375 0 discriminator 1
 935 0016 AC42     		cmp	r4, r5
 936 0018 F8D8     		bhi	.L81
1382:.\Generated_Source\PSoC4/CyLib.c ****     }
1383:.\Generated_Source\PSoC4/CyLib.c **** 
1384:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 937              		.loc 1 1384 0
 938 001a 034B     		ldr	r3, .L82
 939 001c 5868     		ldr	r0, [r3, #4]
 940 001e 6043     		mul	r0, r4
 941 0020 FFF7FEFF 		bl	CyDelayCycles
 942              	.LVL66:
1385:.\Generated_Source\PSoC4/CyLib.c **** }
 943              		.loc 1 1385 0
 944              		@ sp needed
 945              	.LVL67:
 946 0024 70BD     		pop	{r4, r5, r6, pc}
 947              	.L83:
 948 0026 C046     		.align	2
 949              	.L82:
 950 0028 00000000 		.word	.LANCHOR0
 951 002c 0080FFFF 		.word	-32768
 952              		.cfi_endproc
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 43


 953              	.LFE29:
 954              		.size	CyDelay, .-CyDelay
 955              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 956              		.align	2
 957              		.global	CySysClkImoEnableWcoLock
 958              		.code	16
 959              		.thumb_func
 960              		.type	CySysClkImoEnableWcoLock, %function
 961              	CySysClkImoEnableWcoLock:
 962              	.LFB3:
 150:.\Generated_Source\PSoC4/CyLib.c ****     {
 963              		.loc 1 150 0
 964              		.cfi_startproc
 965 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 966              		.cfi_def_cfa_offset 20
 967              		.cfi_offset 4, -20
 968              		.cfi_offset 5, -16
 969              		.cfi_offset 6, -12
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 83B0     		sub	sp, sp, #12
 973              		.cfi_def_cfa_offset 32
 974              	.LVL68:
 157:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 975              		.loc 1 157 0
 976 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 977              	.LVL69:
 978 0008 0028     		cmp	r0, #0
 979 000a 44D0     		beq	.L84
 159:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 980              		.loc 1 159 0
 981 000c FFF7FEFF 		bl	CyEnterCriticalSection
 982              	.LVL70:
 983 0010 071C     		mov	r7, r0
 984              	.LVL71:
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 985              		.loc 1 162 0
 986 0012 0023     		mov	r3, #0
 164:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 987              		.loc 1 164 0
 988 0014 214E     		ldr	r6, .L91
 989 0016 3F25     		mov	r5, #63
 990 0018 214C     		ldr	r4, .L91+4
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 991              		.loc 1 162 0
 992 001a 07E0     		b	.L86
 993              	.LVL72:
 994              	.L89:
 164:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 995              		.loc 1 164 0
 996 001c 3168     		ldr	r1, [r6]
 997 001e 2940     		and	r1, r5
 998 0020 E25C     		ldrb	r2, [r4, r3]
 999 0022 9142     		cmp	r1, r2
 1000 0024 01D1     		bne	.L87
 166:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 1001              		.loc 1 166 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 44


 1002 0026 D91C     		add	r1, r3, #3
 1003              	.LVL73:
 167:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 1004              		.loc 1 167 0
 1005 0028 03E0     		b	.L88
 1006              	.LVL74:
 1007              	.L87:
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1008              		.loc 1 162 0
 1009 002a 0133     		add	r3, r3, #1
 1010              	.LVL75:
 1011              	.L86:
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1012              		.loc 1 162 0 is_stmt 0 discriminator 1
 1013 002c 2D2B     		cmp	r3, #45
 1014 002e F5D9     		bls	.L89
 152:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 1015              		.loc 1 152 0 is_stmt 1
 1016 0030 0321     		mov	r1, #3
 1017              	.LVL76:
 1018              	.L88:
 171:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 1019              		.loc 1 171 0
 1020 0032 1C4B     		ldr	r3, .L91+8
 1021              	.LVL77:
 1022 0034 1B68     		ldr	r3, [r3]
 1023 0036 D806     		lsl	r0, r3, #27
 1024 0038 06D1     		bne	.L90
 1025              	.LVL78:
 173:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 1026              		.loc 1 173 0
 1027 003a 1A4B     		ldr	r3, .L91+8
 1028 003c 1A68     		ldr	r2, [r3]
 1029 003e 1F20     		mov	r0, #31
 1030 0040 8243     		bic	r2, r0
 1031 0042 0C20     		mov	r0, #12
 1032 0044 0243     		orr	r2, r0
 1033 0046 1A60     		str	r2, [r3]
 1034              	.L90:
 177:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 1035              		.loc 1 177 0
 1036 0048 174A     		ldr	r2, .L91+12
 1037 004a 1068     		ldr	r0, [r2]
 1038 004c 174B     		ldr	r3, .L91+16
 1039 004e 0340     		and	r3, r0
 1040              	.LVL79:
 182:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 1041              		.loc 1 182 0
 1042 0050 1748     		ldr	r0, .L91+20
 1043 0052 4143     		mul	r1, r0
 1044              	.LVL80:
 1045 0054 8020     		mov	r0, #128
 1046 0056 C001     		lsl	r0, r0, #7
 1047 0058 0918     		add	r1, r1, r0
 1048 005a C90B     		lsr	r1, r1, #15
 1049 005c 0139     		sub	r1, r1, #1
 1050 005e 4905     		lsl	r1, r1, #21
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 45


 1051 0060 490D     		lsr	r1, r1, #21
 1052 0062 0B43     		orr	r3, r1
 1053              	.LVL81:
 185:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 1054              		.loc 1 185 0
 1055 0064 A021     		mov	r1, #160
 1056 0066 4903     		lsl	r1, r1, #13
 1057 0068 0B43     		orr	r3, r1
 1058              	.LVL82:
 187:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 1059              		.loc 1 187 0
 1060 006a 1360     		str	r3, [r2]
 189:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 1061              		.loc 1 189 0
 1062 006c 114C     		ldr	r4, .L91+24
 1063 006e 2368     		ldr	r3, [r4]
 1064              	.LVL83:
 1065 0070 0193     		str	r3, [sp, #4]
 1066              	.LVL84:
 190:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1067              		.loc 1 190 0
 1068 0072 3020     		mov	r0, #48
 1069 0074 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1070              	.LVL85:
 191:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1071              		.loc 1 191 0
 1072 0078 0F4B     		ldr	r3, .L91+28
 1073 007a 1968     		ldr	r1, [r3]
 1074 007c 8022     		mov	r2, #128
 1075 007e D205     		lsl	r2, r2, #23
 1076 0080 0A43     		orr	r2, r1
 1077 0082 1A60     		str	r2, [r3]
 192:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(320u);
 1078              		.loc 1 192 0
 1079 0084 A020     		mov	r0, #160
 1080 0086 4000     		lsl	r0, r0, #1
 1081 0088 FFF7FEFF 		bl	CyDelay
 1082              	.LVL86:
 193:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1083              		.loc 1 193 0
 1084 008c 019B     		ldr	r3, [sp, #4]
 1085 008e 2360     		str	r3, [r4]
 195:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 1086              		.loc 1 195 0
 1087 0090 381C     		mov	r0, r7
 1088 0092 FFF7FEFF 		bl	CyExitCriticalSection
 1089              	.LVL87:
 1090              	.L84:
 197:.\Generated_Source\PSoC4/CyLib.c ****     }
 1091              		.loc 1 197 0
 1092 0096 03B0     		add	sp, sp, #12
 1093              		@ sp needed
 1094 0098 F0BD     		pop	{r4, r5, r6, r7, pc}
 1095              	.L92:
 1096 009a C046     		.align	2
 1097              	.L91:
 1098 009c 2CFF0B40 		.word	1074528044
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 46


 1099 00a0 00000000 		.word	.LANCHOR1
 1100 00a4 34FF0B40 		.word	1074528052
 1101 00a8 08002240 		.word	1075970056
 1102 00ac 00F8C0FF 		.word	-4130816
 1103 00b0 40420F00 		.word	1000000
 1104 00b4 30001040 		.word	1074790448
 1105 00b8 00002240 		.word	1075970048
 1106              		.cfi_endproc
 1107              	.LFE3:
 1108              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1109              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1110              		.align	2
 1111              		.global	CySysClkWriteImoFreq
 1112              		.code	16
 1113              		.thumb_func
 1114              		.type	CySysClkWriteImoFreq, %function
 1115              	CySysClkWriteImoFreq:
 1116              	.LFB8:
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 1117              		.loc 1 391 0
 1118              		.cfi_startproc
 1119              	.LVL88:
 1120 0000 30B5     		push	{r4, r5, lr}
 1121              		.cfi_def_cfa_offset 12
 1122              		.cfi_offset 4, -12
 1123              		.cfi_offset 5, -8
 1124              		.cfi_offset 14, -4
 1125 0002 87B0     		sub	sp, sp, #28
 1126              		.cfi_def_cfa_offset 40
 1127 0004 051C     		mov	r5, r0
 1128              	.LVL89:
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1129              		.loc 1 409 0
 1130 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1131              	.LVL90:
 1132 000a 041C     		mov	r4, r0
 1133              	.LVL91:
 412:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 1134              		.loc 1 412 0
 1135 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1136              	.LVL92:
 1137 0010 0028     		cmp	r0, #0
 1138 0012 03D0     		beq	.L96
 1139              	.LVL93:
 415:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1140              		.loc 1 415 0
 1141 0014 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1142              	.LVL94:
 414:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 1143              		.loc 1 414 0
 1144 0018 0121     		mov	r1, #1
 1145 001a 00E0     		b	.L94
 1146              	.LVL95:
 1147              	.L96:
 403:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 1148              		.loc 1 403 0
 1149 001c 0021     		mov	r1, #0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 47


 1150              	.LVL96:
 1151              	.L94:
 422:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 1152              		.loc 1 422 0
 1153 001e 104B     		ldr	r3, .L97
 1154 0020 1B68     		ldr	r3, [r3]
 1155 0022 0093     		str	r3, [sp]
 423:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1156              		.loc 1 423 0
 1157 0024 0F4B     		ldr	r3, .L97+4
 1158 0026 1B68     		ldr	r3, [r3]
 1159 0028 0193     		str	r3, [sp, #4]
 424:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1160              		.loc 1 424 0
 1161 002a 033D     		sub	r5, r5, #3
 1162              	.LVL97:
 1163 002c 0E4B     		ldr	r3, .L97+8
 1164 002e 5B5D     		ldrb	r3, [r3, r5]
 1165 0030 0293     		str	r3, [sp, #8]
 425:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1166              		.loc 1 425 0
 1167 0032 0E4B     		ldr	r3, .L97+12
 1168 0034 1B68     		ldr	r3, [r3]
 1169 0036 0393     		str	r3, [sp, #12]
 427:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 1170              		.loc 1 427 0
 1171 0038 04AA     		add	r2, sp, #16
 1172 003a 0D4B     		ldr	r3, .L97+16
 1173 003c 0493     		str	r3, [sp, #16]
 430:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 1174              		.loc 1 430 0
 1175 003e 00AB     		add	r3, sp, #0
 1176 0040 0593     		str	r3, [sp, #20]
 432:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 1177              		.loc 1 432 0
 1178 0042 0C4B     		ldr	r3, .L97+20
 1179 0044 1A60     		str	r2, [r3]
 433:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1180              		.loc 1 433 0
 1181 0046 0C48     		ldr	r0, .L97+24
 1182 0048 0C4A     		ldr	r2, .L97+28
 1183 004a 1060     		str	r0, [r2]
 434:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1184              		.loc 1 434 0
 1185 004c 1B68     		ldr	r3, [r3]
 532:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 1186              		.loc 1 532 0
 1187 004e 0129     		cmp	r1, #1
 1188 0050 01D1     		bne	.L95
 534:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 1189              		.loc 1 534 0
 1190 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1191              	.LVL98:
 1192              	.L95:
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1193              		.loc 1 538 0
 1194 0056 201C     		mov	r0, r4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 48


 1195 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1196              	.LVL99:
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 1197              		.loc 1 539 0
 1198 005c 07B0     		add	sp, sp, #28
 1199              		@ sp needed
 1200              	.LVL100:
 1201              	.LVL101:
 1202 005e 30BD     		pop	{r4, r5, pc}
 1203              	.L98:
 1204              		.align	2
 1205              	.L97:
 1206 0060 08010B40 		.word	1074462984
 1207 0064 00010B40 		.word	1074462976
 1208 0068 00000000 		.word	.LANCHOR1
 1209 006c 30001040 		.word	1074790448
 1210 0070 B6EA0000 		.word	60086
 1211 0074 08001040 		.word	1074790408
 1212 0078 17000080 		.word	-2147483625
 1213 007c 04001040 		.word	1074790404
 1214              		.cfi_endproc
 1215              	.LFE8:
 1216              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1217              		.section	.text.CyDelayUs,"ax",%progbits
 1218              		.align	2
 1219              		.global	CyDelayUs
 1220              		.code	16
 1221              		.thumb_func
 1222              		.type	CyDelayUs, %function
 1223              	CyDelayUs:
 1224              	.LFB30:
1386:.\Generated_Source\PSoC4/CyLib.c **** 
1387:.\Generated_Source\PSoC4/CyLib.c **** 
1388:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1389:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
1390:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1391:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1392:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
1393:.\Generated_Source\PSoC4/CyLib.c **** *
1394:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1395:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
1396:.\Generated_Source\PSoC4/CyLib.c **** *
1397:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1398:.\Generated_Source\PSoC4/CyLib.c **** *  None
1399:.\Generated_Source\PSoC4/CyLib.c **** *
1400:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1401:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
1402:.\Generated_Source\PSoC4/CyLib.c **** {
 1225              		.loc 1 1402 0
 1226              		.cfi_startproc
 1227              	.LVL102:
 1228 0000 08B5     		push	{r3, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 3, -8
 1231              		.cfi_offset 14, -4
1403:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1232              		.loc 1 1403 0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 49


 1233 0002 034B     		ldr	r3, .L100
 1234 0004 1B7A     		ldrb	r3, [r3, #8]
 1235 0006 5843     		mul	r0, r3
 1236              	.LVL103:
 1237 0008 FFF7FEFF 		bl	CyDelayCycles
 1238              	.LVL104:
1404:.\Generated_Source\PSoC4/CyLib.c **** }
 1239              		.loc 1 1404 0
 1240              		@ sp needed
 1241 000c 08BD     		pop	{r3, pc}
 1242              	.L101:
 1243 000e C046     		.align	2
 1244              	.L100:
 1245 0010 00000000 		.word	.LANCHOR0
 1246              		.cfi_endproc
 1247              	.LFE30:
 1248              		.size	CyDelayUs, .-CyDelayUs
 1249              		.section	.text.CySysLvdEnable,"ax",%progbits
 1250              		.align	2
 1251              		.global	CySysLvdEnable
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	CySysLvdEnable, %function
 1255              	CySysLvdEnable:
 1256              	.LFB9:
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 1257              		.loc 1 849 0
 1258              		.cfi_startproc
 1259              	.LVL105:
 1260 0000 38B5     		push	{r3, r4, r5, lr}
 1261              		.cfi_def_cfa_offset 16
 1262              		.cfi_offset 3, -16
 1263              		.cfi_offset 4, -12
 1264              		.cfi_offset 5, -8
 1265              		.cfi_offset 14, -4
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1266              		.loc 1 851 0
 1267 0002 0D4C     		ldr	r4, .L103
 1268 0004 2368     		ldr	r3, [r4]
 1269 0006 0225     		mov	r5, #2
 1270 0008 AB43     		bic	r3, r5
 1271 000a 2360     		str	r3, [r4]
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1272              		.loc 1 854 0
 1273 000c 0B4B     		ldr	r3, .L103+4
 1274 000e 1968     		ldr	r1, [r3]
 1275 0010 1E22     		mov	r2, #30
 1276 0012 9143     		bic	r1, r2
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1277              		.loc 1 855 0
 1278 0014 4000     		lsl	r0, r0, #1
 1279              	.LVL106:
 1280 0016 0240     		and	r2, r0
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1281              		.loc 1 854 0
 1282 0018 0A43     		orr	r2, r1
 1283 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 50


 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1284              		.loc 1 858 0
 1285 001c 1968     		ldr	r1, [r3]
 1286 001e 0122     		mov	r2, #1
 1287 0020 0A43     		orr	r2, r1
 1288 0022 1A60     		str	r2, [r3]
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 1289              		.loc 1 861 0
 1290 0024 FA20     		mov	r0, #250
 1291 0026 8000     		lsl	r0, r0, #2
 1292 0028 FFF7FEFF 		bl	CyDelayUs
 1293              	.LVL107:
 864:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 1294              		.loc 1 864 0
 1295 002c FFF7FEFF 		bl	CySysLvdClearInterrupt
 1296              	.LVL108:
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 1297              		.loc 1 867 0
 1298 0030 2368     		ldr	r3, [r4]
 1299 0032 1D43     		orr	r5, r3
 1300 0034 2560     		str	r5, [r4]
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 1301              		.loc 1 868 0
 1302              		@ sp needed
 1303 0036 38BD     		pop	{r3, r4, r5, pc}
 1304              	.L104:
 1305              		.align	2
 1306              	.L103:
 1307 0038 08000B40 		.word	1074462728
 1308 003c 18000B40 		.word	1074462744
 1309              		.cfi_endproc
 1310              	.LFE9:
 1311              		.size	CySysLvdEnable, .-CySysLvdEnable
 1312              		.global	__aeabi_uidiv
 1313              		.section	.text.CyDelayFreq,"ax",%progbits
 1314              		.align	2
 1315              		.global	CyDelayFreq
 1316              		.code	16
 1317              		.thumb_func
 1318              		.type	CyDelayFreq, %function
 1319              	CyDelayFreq:
 1320              	.LFB31:
1405:.\Generated_Source\PSoC4/CyLib.c **** 
1406:.\Generated_Source\PSoC4/CyLib.c **** 
1407:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1408:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
1409:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1410:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1411:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
1412:.\Generated_Source\PSoC4/CyLib.c **** *
1413:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1414:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
1415:.\Generated_Source\PSoC4/CyLib.c **** *
1416:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1417:.\Generated_Source\PSoC4/CyLib.c **** *  None
1418:.\Generated_Source\PSoC4/CyLib.c **** *
1419:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 51


1420:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
1421:.\Generated_Source\PSoC4/CyLib.c **** {
 1321              		.loc 1 1421 0
 1322              		.cfi_startproc
 1323              	.LVL109:
 1324 0000 38B5     		push	{r3, r4, r5, lr}
 1325              		.cfi_def_cfa_offset 16
 1326              		.cfi_offset 3, -16
 1327              		.cfi_offset 4, -12
 1328              		.cfi_offset 5, -8
 1329              		.cfi_offset 14, -4
1422:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1330              		.loc 1 1422 0
 1331 0002 0028     		cmp	r0, #0
 1332 0004 02D0     		beq	.L106
1423:.\Generated_Source\PSoC4/CyLib.c ****     {
1424:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1333              		.loc 1 1424 0
 1334 0006 0C4B     		ldr	r3, .L108
 1335 0008 D860     		str	r0, [r3, #12]
 1336 000a 02E0     		b	.L107
 1337              	.L106:
1425:.\Generated_Source\PSoC4/CyLib.c ****     }
1426:.\Generated_Source\PSoC4/CyLib.c ****     else
1427:.\Generated_Source\PSoC4/CyLib.c ****     {
1428:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1338              		.loc 1 1428 0
 1339 000c 0B4A     		ldr	r2, .L108+4
 1340 000e 0A4B     		ldr	r3, .L108
 1341 0010 DA60     		str	r2, [r3, #12]
 1342              	.L107:
1429:.\Generated_Source\PSoC4/CyLib.c ****     }
1430:.\Generated_Source\PSoC4/CyLib.c **** 
1431:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1343              		.loc 1 1431 0
 1344 0012 094C     		ldr	r4, .L108
 1345 0014 E568     		ldr	r5, [r4, #12]
 1346 0016 0A4B     		ldr	r3, .L108+8
 1347 0018 E818     		add	r0, r5, r3
 1348              	.LVL110:
 1349 001a 0A49     		ldr	r1, .L108+12
 1350 001c FFF7FEFF 		bl	__aeabi_uidiv
 1351              	.LVL111:
 1352 0020 2072     		strb	r0, [r4, #8]
1432:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1353              		.loc 1 1432 0
 1354 0022 094B     		ldr	r3, .L108+16
 1355 0024 E818     		add	r0, r5, r3
 1356 0026 FA21     		mov	r1, #250
 1357 0028 8900     		lsl	r1, r1, #2
 1358 002a FFF7FEFF 		bl	__aeabi_uidiv
 1359              	.LVL112:
 1360 002e 6060     		str	r0, [r4, #4]
1433:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1361              		.loc 1 1433 0
 1362 0030 C003     		lsl	r0, r0, #15
 1363 0032 2060     		str	r0, [r4]
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 52


1434:.\Generated_Source\PSoC4/CyLib.c **** }
 1364              		.loc 1 1434 0
 1365              		@ sp needed
 1366 0034 38BD     		pop	{r3, r4, r5, pc}
 1367              	.L109:
 1368 0036 C046     		.align	2
 1369              	.L108:
 1370 0038 00000000 		.word	.LANCHOR0
 1371 003c 006CDC02 		.word	48000000
 1372 0040 3F420F00 		.word	999999
 1373 0044 40420F00 		.word	1000000
 1374 0048 E7030000 		.word	999
 1375              		.cfi_endproc
 1376              	.LFE31:
 1377              		.size	CyDelayFreq, .-CyDelayFreq
 1378              		.section	.text.CySysTickStop,"ax",%progbits
 1379              		.align	2
 1380              		.global	CySysTickStop
 1381              		.code	16
 1382              		.thumb_func
 1383              		.type	CySysTickStop, %function
 1384              	CySysTickStop:
 1385              	.LFB35:
1435:.\Generated_Source\PSoC4/CyLib.c **** 
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1438:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
1439:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1440:.\Generated_Source\PSoC4/CyLib.c **** *
1441:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1442:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
1443:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
1444:.\Generated_Source\PSoC4/CyLib.c **** *
1445:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1446:.\Generated_Source\PSoC4/CyLib.c **** *  None
1447:.\Generated_Source\PSoC4/CyLib.c **** *
1448:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1449:.\Generated_Source\PSoC4/CyLib.c **** *  None
1450:.\Generated_Source\PSoC4/CyLib.c **** *
1451:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1452:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1453:.\Generated_Source\PSoC4/CyLib.c **** *
1454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1455:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
1456:.\Generated_Source\PSoC4/CyLib.c **** {
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
1458:.\Generated_Source\PSoC4/CyLib.c ****     {
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
1461:.\Generated_Source\PSoC4/CyLib.c ****     }
1462:.\Generated_Source\PSoC4/CyLib.c **** 
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
1464:.\Generated_Source\PSoC4/CyLib.c **** }
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c **** 
1467:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1468:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 53


1469:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1470:.\Generated_Source\PSoC4/CyLib.c **** *
1471:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1472:.\Generated_Source\PSoC4/CyLib.c **** *  Sets CySysTickServiceCallbacks() as an ISR for the SysTick exception.
1473:.\Generated_Source\PSoC4/CyLib.c **** *  The clock source for the SysTick counter is set to the System Clock.
1474:.\Generated_Source\PSoC4/CyLib.c **** *  The SysTick reload value is configured for the timer to generate interrupt
1475:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms. The System clock value is on the global variables cydelayFreqHz.
1476:.\Generated_Source\PSoC4/CyLib.c **** *  User is responsible for calling CyDelayFreq() function.
1477:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes CySysTickCallbacks array.
1478:.\Generated_Source\PSoC4/CyLib.c **** *
1479:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1480:.\Generated_Source\PSoC4/CyLib.c **** *  None
1481:.\Generated_Source\PSoC4/CyLib.c **** *
1482:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1483:.\Generated_Source\PSoC4/CyLib.c **** *  None
1484:.\Generated_Source\PSoC4/CyLib.c **** *
1485:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1486:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1487:.\Generated_Source\PSoC4/CyLib.c **** *
1488:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1489:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
1490:.\Generated_Source\PSoC4/CyLib.c **** {
1491:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1492:.\Generated_Source\PSoC4/CyLib.c **** 
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
1494:.\Generated_Source\PSoC4/CyLib.c ****     {
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
1496:.\Generated_Source\PSoC4/CyLib.c ****     }
1497:.\Generated_Source\PSoC4/CyLib.c **** 
1498:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****     #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1501:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
1502:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1503:.\Generated_Source\PSoC4/CyLib.c **** 
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
1505:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
1506:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
1507:.\Generated_Source\PSoC4/CyLib.c **** }
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c **** 
1510:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1511:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
1512:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1513:.\Generated_Source\PSoC4/CyLib.c **** *
1514:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1515:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
1516:.\Generated_Source\PSoC4/CyLib.c **** *
1517:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1518:.\Generated_Source\PSoC4/CyLib.c **** *  None
1519:.\Generated_Source\PSoC4/CyLib.c **** *
1520:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1521:.\Generated_Source\PSoC4/CyLib.c **** *  None
1522:.\Generated_Source\PSoC4/CyLib.c **** *
1523:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1524:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1525:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 54


1526:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1527:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
1528:.\Generated_Source\PSoC4/CyLib.c **** {
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
1531:.\Generated_Source\PSoC4/CyLib.c **** }
1532:.\Generated_Source\PSoC4/CyLib.c **** 
1533:.\Generated_Source\PSoC4/CyLib.c **** 
1534:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
1536:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1537:.\Generated_Source\PSoC4/CyLib.c **** *
1538:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1539:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
1540:.\Generated_Source\PSoC4/CyLib.c **** *
1541:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1542:.\Generated_Source\PSoC4/CyLib.c **** *  None
1543:.\Generated_Source\PSoC4/CyLib.c **** *
1544:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1545:.\Generated_Source\PSoC4/CyLib.c **** *  None
1546:.\Generated_Source\PSoC4/CyLib.c **** *
1547:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1548:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1549:.\Generated_Source\PSoC4/CyLib.c **** *
1550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1551:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
1552:.\Generated_Source\PSoC4/CyLib.c **** {
 1386              		.loc 1 1552 0
 1387              		.cfi_startproc
1553:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1388              		.loc 1 1553 0
 1389 0000 024B     		ldr	r3, .L111
 1390 0002 1A68     		ldr	r2, [r3]
 1391 0004 0121     		mov	r1, #1
 1392 0006 8A43     		bic	r2, r1
 1393 0008 1A60     		str	r2, [r3]
1554:.\Generated_Source\PSoC4/CyLib.c **** }
 1394              		.loc 1 1554 0
 1395              		@ sp needed
 1396 000a 7047     		bx	lr
 1397              	.L112:
 1398              		.align	2
 1399              	.L111:
 1400 000c 10E000E0 		.word	-536813552
 1401              		.cfi_endproc
 1402              	.LFE35:
 1403              		.size	CySysTickStop, .-CySysTickStop
 1404              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1405              		.align	2
 1406              		.global	CySysTickEnableInterrupt
 1407              		.code	16
 1408              		.thumb_func
 1409              		.type	CySysTickEnableInterrupt, %function
 1410              	CySysTickEnableInterrupt:
 1411              	.LFB36:
1555:.\Generated_Source\PSoC4/CyLib.c **** 
1556:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 55


1557:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1558:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
1559:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1560:.\Generated_Source\PSoC4/CyLib.c **** *
1561:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1562:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
1563:.\Generated_Source\PSoC4/CyLib.c **** *
1564:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1565:.\Generated_Source\PSoC4/CyLib.c **** *  None
1566:.\Generated_Source\PSoC4/CyLib.c **** *
1567:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1568:.\Generated_Source\PSoC4/CyLib.c **** *  None
1569:.\Generated_Source\PSoC4/CyLib.c **** *
1570:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1571:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1572:.\Generated_Source\PSoC4/CyLib.c **** *
1573:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1574:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
1575:.\Generated_Source\PSoC4/CyLib.c **** {
 1412              		.loc 1 1575 0
 1413              		.cfi_startproc
1576:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1414              		.loc 1 1576 0
 1415 0000 024B     		ldr	r3, .L114
 1416 0002 1968     		ldr	r1, [r3]
 1417 0004 0222     		mov	r2, #2
 1418 0006 0A43     		orr	r2, r1
 1419 0008 1A60     		str	r2, [r3]
1577:.\Generated_Source\PSoC4/CyLib.c **** }
 1420              		.loc 1 1577 0
 1421              		@ sp needed
 1422 000a 7047     		bx	lr
 1423              	.L115:
 1424              		.align	2
 1425              	.L114:
 1426 000c 10E000E0 		.word	-536813552
 1427              		.cfi_endproc
 1428              	.LFE36:
 1429              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1430              		.section	.text.CySysTickEnable,"ax",%progbits
 1431              		.align	2
 1432              		.global	CySysTickEnable
 1433              		.code	16
 1434              		.thumb_func
 1435              		.type	CySysTickEnable, %function
 1436              	CySysTickEnable:
 1437              	.LFB34:
1528:.\Generated_Source\PSoC4/CyLib.c **** {
 1438              		.loc 1 1528 0
 1439              		.cfi_startproc
 1440 0000 08B5     		push	{r3, lr}
 1441              		.cfi_def_cfa_offset 8
 1442              		.cfi_offset 3, -8
 1443              		.cfi_offset 14, -4
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1444              		.loc 1 1529 0
 1445 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 56


 1446              	.LVL113:
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1447              		.loc 1 1530 0
 1448 0006 034B     		ldr	r3, .L117
 1449 0008 1968     		ldr	r1, [r3]
 1450 000a 0122     		mov	r2, #1
 1451 000c 0A43     		orr	r2, r1
 1452 000e 1A60     		str	r2, [r3]
1531:.\Generated_Source\PSoC4/CyLib.c **** }
 1453              		.loc 1 1531 0
 1454              		@ sp needed
 1455 0010 08BD     		pop	{r3, pc}
 1456              	.L118:
 1457 0012 C046     		.align	2
 1458              	.L117:
 1459 0014 10E000E0 		.word	-536813552
 1460              		.cfi_endproc
 1461              	.LFE34:
 1462              		.size	CySysTickEnable, .-CySysTickEnable
 1463              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1464              		.align	2
 1465              		.global	CySysTickDisableInterrupt
 1466              		.code	16
 1467              		.thumb_func
 1468              		.type	CySysTickDisableInterrupt, %function
 1469              	CySysTickDisableInterrupt:
 1470              	.LFB37:
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c **** 
1580:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1581:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
1582:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1583:.\Generated_Source\PSoC4/CyLib.c **** *
1584:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1585:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
1586:.\Generated_Source\PSoC4/CyLib.c **** *
1587:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1588:.\Generated_Source\PSoC4/CyLib.c **** *  None
1589:.\Generated_Source\PSoC4/CyLib.c **** *
1590:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1591:.\Generated_Source\PSoC4/CyLib.c **** *  None
1592:.\Generated_Source\PSoC4/CyLib.c **** *
1593:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1594:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1595:.\Generated_Source\PSoC4/CyLib.c **** *
1596:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1597:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
1598:.\Generated_Source\PSoC4/CyLib.c **** {
 1471              		.loc 1 1598 0
 1472              		.cfi_startproc
1599:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1473              		.loc 1 1599 0
 1474 0000 024B     		ldr	r3, .L120
 1475 0002 1A68     		ldr	r2, [r3]
 1476 0004 0221     		mov	r1, #2
 1477 0006 8A43     		bic	r2, r1
 1478 0008 1A60     		str	r2, [r3]
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 57


1600:.\Generated_Source\PSoC4/CyLib.c **** }
 1479              		.loc 1 1600 0
 1480              		@ sp needed
 1481 000a 7047     		bx	lr
 1482              	.L121:
 1483              		.align	2
 1484              	.L120:
 1485 000c 10E000E0 		.word	-536813552
 1486              		.cfi_endproc
 1487              	.LFE37:
 1488              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1489              		.section	.text.CySysTickSetReload,"ax",%progbits
 1490              		.align	2
 1491              		.global	CySysTickSetReload
 1492              		.code	16
 1493              		.thumb_func
 1494              		.type	CySysTickSetReload, %function
 1495              	CySysTickSetReload:
 1496              	.LFB38:
1601:.\Generated_Source\PSoC4/CyLib.c **** 
1602:.\Generated_Source\PSoC4/CyLib.c **** 
1603:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1604:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
1605:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c **** *
1607:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1608:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
1609:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
1610:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
1611:.\Generated_Source\PSoC4/CyLib.c **** *
1612:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1613:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
1614:.\Generated_Source\PSoC4/CyLib.c **** *
1615:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1616:.\Generated_Source\PSoC4/CyLib.c **** *  None
1617:.\Generated_Source\PSoC4/CyLib.c **** *
1618:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1619:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
1620:.\Generated_Source\PSoC4/CyLib.c **** {
 1497              		.loc 1 1620 0
 1498              		.cfi_startproc
 1499              	.LVL114:
1621:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1500              		.loc 1 1621 0
 1501 0000 0002     		lsl	r0, r0, #8
 1502              	.LVL115:
 1503 0002 000A     		lsr	r0, r0, #8
 1504 0004 014B     		ldr	r3, .L123
 1505 0006 1860     		str	r0, [r3]
1622:.\Generated_Source\PSoC4/CyLib.c **** }
 1506              		.loc 1 1622 0
 1507              		@ sp needed
 1508 0008 7047     		bx	lr
 1509              	.L124:
 1510 000a C046     		.align	2
 1511              	.L123:
 1512 000c 14E000E0 		.word	-536813548
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 58


 1513              		.cfi_endproc
 1514              	.LFE38:
 1515              		.size	CySysTickSetReload, .-CySysTickSetReload
 1516              		.section	.text.CySysTickGetReload,"ax",%progbits
 1517              		.align	2
 1518              		.global	CySysTickGetReload
 1519              		.code	16
 1520              		.thumb_func
 1521              		.type	CySysTickGetReload, %function
 1522              	CySysTickGetReload:
 1523              	.LFB39:
1623:.\Generated_Source\PSoC4/CyLib.c **** 
1624:.\Generated_Source\PSoC4/CyLib.c **** 
1625:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1626:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
1627:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c **** *
1629:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1630:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
1631:.\Generated_Source\PSoC4/CyLib.c **** *
1632:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1633:.\Generated_Source\PSoC4/CyLib.c **** *  None
1634:.\Generated_Source\PSoC4/CyLib.c **** *
1635:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1636:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
1637:.\Generated_Source\PSoC4/CyLib.c **** *
1638:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1639:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
1640:.\Generated_Source\PSoC4/CyLib.c **** {
 1524              		.loc 1 1640 0
 1525              		.cfi_startproc
1641:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1526              		.loc 1 1641 0
 1527 0000 024B     		ldr	r3, .L126
 1528 0002 1868     		ldr	r0, [r3]
 1529 0004 0002     		lsl	r0, r0, #8
 1530 0006 000A     		lsr	r0, r0, #8
1642:.\Generated_Source\PSoC4/CyLib.c **** }
 1531              		.loc 1 1642 0
 1532              		@ sp needed
 1533 0008 7047     		bx	lr
 1534              	.L127:
 1535 000a C046     		.align	2
 1536              	.L126:
 1537 000c 14E000E0 		.word	-536813548
 1538              		.cfi_endproc
 1539              	.LFE39:
 1540              		.size	CySysTickGetReload, .-CySysTickGetReload
 1541              		.section	.text.CySysTickGetValue,"ax",%progbits
 1542              		.align	2
 1543              		.global	CySysTickGetValue
 1544              		.code	16
 1545              		.thumb_func
 1546              		.type	CySysTickGetValue, %function
 1547              	CySysTickGetValue:
 1548              	.LFB40:
1643:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 59


1644:.\Generated_Source\PSoC4/CyLib.c **** 
1645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
1647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1648:.\Generated_Source\PSoC4/CyLib.c **** *
1649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1650:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
1651:.\Generated_Source\PSoC4/CyLib.c **** *
1652:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1653:.\Generated_Source\PSoC4/CyLib.c **** *  None
1654:.\Generated_Source\PSoC4/CyLib.c **** *
1655:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1656:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
1657:.\Generated_Source\PSoC4/CyLib.c **** *
1658:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1659:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
1660:.\Generated_Source\PSoC4/CyLib.c **** {
 1549              		.loc 1 1660 0
 1550              		.cfi_startproc
1661:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1551              		.loc 1 1661 0
 1552 0000 024B     		ldr	r3, .L129
 1553 0002 1868     		ldr	r0, [r3]
 1554 0004 0002     		lsl	r0, r0, #8
 1555 0006 000A     		lsr	r0, r0, #8
1662:.\Generated_Source\PSoC4/CyLib.c **** }
 1556              		.loc 1 1662 0
 1557              		@ sp needed
 1558 0008 7047     		bx	lr
 1559              	.L130:
 1560 000a C046     		.align	2
 1561              	.L129:
 1562 000c 18E000E0 		.word	-536813544
 1563              		.cfi_endproc
 1564              	.LFE40:
 1565              		.size	CySysTickGetValue, .-CySysTickGetValue
 1566              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1567              		.align	2
 1568              		.global	CySysTickSetClockSource
 1569              		.code	16
 1570              		.thumb_func
 1571              		.type	CySysTickSetClockSource, %function
 1572              	CySysTickSetClockSource:
 1573              	.LFB41:
1663:.\Generated_Source\PSoC4/CyLib.c **** 
1664:.\Generated_Source\PSoC4/CyLib.c **** 
1665:.\Generated_Source\PSoC4/CyLib.c **** #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1666:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1667:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
1668:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1669:.\Generated_Source\PSoC4/CyLib.c ****     *
1670:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1671:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1674:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
1675:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 60


1676:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
1677:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
1678:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
1679:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
1680:.\Generated_Source\PSoC4/CyLib.c ****     *
1681:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1682:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1683:.\Generated_Source\PSoC4/CyLib.c ****     *
1684:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1685:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
1686:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
1687:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
1688:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly bigger and vice versa.
1689:.\Generated_Source\PSoC4/CyLib.c ****     *
1690:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1691:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
1692:.\Generated_Source\PSoC4/CyLib.c ****     {
 1574              		.loc 1 1692 0
 1575              		.cfi_startproc
 1576              	.LVL116:
1693:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1577              		.loc 1 1693 0
 1578 0000 0128     		cmp	r0, #1
 1579 0002 05D1     		bne	.L132
1694:.\Generated_Source\PSoC4/CyLib.c ****         {
1695:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1580              		.loc 1 1695 0
 1581 0004 054B     		ldr	r3, .L134
 1582 0006 1968     		ldr	r1, [r3]
 1583 0008 0422     		mov	r2, #4
 1584 000a 0A43     		orr	r2, r1
 1585 000c 1A60     		str	r2, [r3]
 1586 000e 04E0     		b	.L131
 1587              	.L132:
1696:.\Generated_Source\PSoC4/CyLib.c ****         }
1697:.\Generated_Source\PSoC4/CyLib.c ****         else
1698:.\Generated_Source\PSoC4/CyLib.c ****         {
1699:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1588              		.loc 1 1699 0
 1589 0010 024B     		ldr	r3, .L134
 1590 0012 1A68     		ldr	r2, [r3]
 1591 0014 0421     		mov	r1, #4
 1592 0016 8A43     		bic	r2, r1
 1593 0018 1A60     		str	r2, [r3]
 1594              	.L131:
1700:.\Generated_Source\PSoC4/CyLib.c ****         }
1701:.\Generated_Source\PSoC4/CyLib.c ****     }
 1595              		.loc 1 1701 0
 1596              		@ sp needed
 1597 001a 7047     		bx	lr
 1598              	.L135:
 1599              		.align	2
 1600              	.L134:
 1601 001c 10E000E0 		.word	-536813552
 1602              		.cfi_endproc
 1603              	.LFE41:
 1604              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 61


 1605              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1606              		.align	2
 1607              		.global	CySysTickGetCountFlag
 1608              		.code	16
 1609              		.thumb_func
 1610              		.type	CySysTickGetCountFlag, %function
 1611              	CySysTickGetCountFlag:
 1612              	.LFB42:
1702:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1703:.\Generated_Source\PSoC4/CyLib.c **** 
1704:.\Generated_Source\PSoC4/CyLib.c **** 
1705:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1706:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
1707:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1708:.\Generated_Source\PSoC4/CyLib.c **** *
1709:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1710:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
1711:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
1712:.\Generated_Source\PSoC4/CyLib.c **** *
1713:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1714:.\Generated_Source\PSoC4/CyLib.c **** *  None
1715:.\Generated_Source\PSoC4/CyLib.c **** *
1716:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1717:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
1718:.\Generated_Source\PSoC4/CyLib.c **** *
1719:.\Generated_Source\PSoC4/CyLib.c **** *
1720:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1721:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1722:.\Generated_Source\PSoC4/CyLib.c **** *
1723:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1724:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
1725:.\Generated_Source\PSoC4/CyLib.c **** {
 1613              		.loc 1 1725 0
 1614              		.cfi_startproc
1726:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1615              		.loc 1 1726 0
 1616 0000 024B     		ldr	r3, .L137
 1617 0002 1868     		ldr	r0, [r3]
 1618 0004 C003     		lsl	r0, r0, #15
 1619 0006 C00F     		lsr	r0, r0, #31
1727:.\Generated_Source\PSoC4/CyLib.c **** }
 1620              		.loc 1 1727 0
 1621              		@ sp needed
 1622 0008 7047     		bx	lr
 1623              	.L138:
 1624 000a C046     		.align	2
 1625              	.L137:
 1626 000c 10E000E0 		.word	-536813552
 1627              		.cfi_endproc
 1628              	.LFE42:
 1629              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1630              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1631              		.align	2
 1632              		.code	16
 1633              		.thumb_func
 1634              		.type	CySysTickServiceCallbacks, %function
 1635              	CySysTickServiceCallbacks:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 62


 1636              	.LFB46:
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
1732:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c **** *
1734:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
1736:.\Generated_Source\PSoC4/CyLib.c **** *
1737:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1738:.\Generated_Source\PSoC4/CyLib.c **** *  None
1739:.\Generated_Source\PSoC4/CyLib.c **** *
1740:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1741:.\Generated_Source\PSoC4/CyLib.c **** *  None
1742:.\Generated_Source\PSoC4/CyLib.c **** *
1743:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1744:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
1745:.\Generated_Source\PSoC4/CyLib.c **** {
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
1747:.\Generated_Source\PSoC4/CyLib.c **** }
1748:.\Generated_Source\PSoC4/CyLib.c **** 
1749:.\Generated_Source\PSoC4/CyLib.c **** 
1750:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1751:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
1752:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1753:.\Generated_Source\PSoC4/CyLib.c **** *
1754:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1755:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
1756:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
1757:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
1758:.\Generated_Source\PSoC4/CyLib.c **** *
1759:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
1760:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
1761:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
1762:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
1763:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
1764:.\Generated_Source\PSoC4/CyLib.c **** *
1765:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1766:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
1767:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1768:.\Generated_Source\PSoC4/CyLib.c **** *
1769:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
1770:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
1771:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
1772:.\Generated_Source\PSoC4/CyLib.c **** *
1773:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1774:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
1775:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
1776:.\Generated_Source\PSoC4/CyLib.c **** *
1777:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1778:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
1779:.\Generated_Source\PSoC4/CyLib.c **** *
1780:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1781:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
1782:.\Generated_Source\PSoC4/CyLib.c **** {
1783:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 63


1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
1787:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
1788:.\Generated_Source\PSoC4/CyLib.c **** }
1789:.\Generated_Source\PSoC4/CyLib.c **** 
1790:.\Generated_Source\PSoC4/CyLib.c **** 
1791:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1792:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
1793:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1794:.\Generated_Source\PSoC4/CyLib.c **** *
1795:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1796:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
1797:.\Generated_Source\PSoC4/CyLib.c **** *
1798:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1799:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
1800:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1801:.\Generated_Source\PSoC4/CyLib.c **** *
1802:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1803:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
1804:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
1805:.\Generated_Source\PSoC4/CyLib.c **** *
1806:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1807:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
1808:.\Generated_Source\PSoC4/CyLib.c **** {
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
1810:.\Generated_Source\PSoC4/CyLib.c **** }
1811:.\Generated_Source\PSoC4/CyLib.c **** 
1812:.\Generated_Source\PSoC4/CyLib.c **** 
1813:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1814:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
1815:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1816:.\Generated_Source\PSoC4/CyLib.c **** *
1817:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1818:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
1819:.\Generated_Source\PSoC4/CyLib.c **** *
1820:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1821:.\Generated_Source\PSoC4/CyLib.c **** *  None
1822:.\Generated_Source\PSoC4/CyLib.c **** *
1823:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1824:.\Generated_Source\PSoC4/CyLib.c **** *  None
1825:.\Generated_Source\PSoC4/CyLib.c **** *
1826:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1827:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
1828:.\Generated_Source\PSoC4/CyLib.c **** {
 1637              		.loc 1 1828 0
 1638              		.cfi_startproc
 1639 0000 38B5     		push	{r3, r4, r5, lr}
 1640              		.cfi_def_cfa_offset 16
 1641              		.cfi_offset 3, -16
 1642              		.cfi_offset 4, -12
 1643              		.cfi_offset 5, -8
 1644              		.cfi_offset 14, -4
1829:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1830:.\Generated_Source\PSoC4/CyLib.c **** 
1831:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
1832:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 64


 1645              		.loc 1 1832 0
 1646 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1647              	.LVL117:
 1648 0006 0128     		cmp	r0, #1
 1649 0008 0BD1     		bne	.L139
 1650 000a 06E0     		b	.L144
 1651              	.LVL118:
 1652              	.L143:
1833:.\Generated_Source\PSoC4/CyLib.c ****     {
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1653              		.loc 1 1836 0
 1654 000c A300     		lsl	r3, r4, #2
 1655 000e 5B59     		ldr	r3, [r3, r5]
 1656 0010 002B     		cmp	r3, #0
 1657 0012 00D0     		beq	.L142
1837:.\Generated_Source\PSoC4/CyLib.c ****             {
1838:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1658              		.loc 1 1838 0
 1659 0014 9847     		blx	r3
 1660              	.LVL119:
 1661              	.L142:
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1662              		.loc 1 1834 0
 1663 0016 0134     		add	r4, r4, #1
 1664              	.LVL120:
 1665 0018 01E0     		b	.L140
 1666              	.LVL121:
 1667              	.L144:
 1668 001a 0024     		mov	r4, #0
1836:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1669              		.loc 1 1836 0
 1670 001c 014D     		ldr	r5, .L145
 1671              	.L140:
 1672              	.LVL122:
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1673              		.loc 1 1834 0 discriminator 1
 1674 001e 042C     		cmp	r4, #4
 1675 0020 F4D9     		bls	.L143
 1676              	.LVL123:
 1677              	.L139:
1839:.\Generated_Source\PSoC4/CyLib.c ****             }
1840:.\Generated_Source\PSoC4/CyLib.c ****         }
1841:.\Generated_Source\PSoC4/CyLib.c ****     }
1842:.\Generated_Source\PSoC4/CyLib.c **** }
 1678              		.loc 1 1842 0
 1679              		@ sp needed
 1680 0022 38BD     		pop	{r3, r4, r5, pc}
 1681              	.L146:
 1682              		.align	2
 1683              	.L145:
 1684 0024 00000000 		.word	.LANCHOR2
 1685              		.cfi_endproc
 1686              	.LFE46:
 1687              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1688              		.section	.text.CySysTickClear,"ax",%progbits
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 65


 1689              		.align	2
 1690              		.global	CySysTickClear
 1691              		.code	16
 1692              		.thumb_func
 1693              		.type	CySysTickClear, %function
 1694              	CySysTickClear:
 1695              	.LFB43:
1745:.\Generated_Source\PSoC4/CyLib.c **** {
 1696              		.loc 1 1745 0
 1697              		.cfi_startproc
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1698              		.loc 1 1746 0
 1699 0000 0022     		mov	r2, #0
 1700 0002 014B     		ldr	r3, .L148
 1701 0004 1A60     		str	r2, [r3]
1747:.\Generated_Source\PSoC4/CyLib.c **** }
 1702              		.loc 1 1747 0
 1703              		@ sp needed
 1704 0006 7047     		bx	lr
 1705              	.L149:
 1706              		.align	2
 1707              	.L148:
 1708 0008 18E000E0 		.word	-536813544
 1709              		.cfi_endproc
 1710              	.LFE43:
 1711              		.size	CySysTickClear, .-CySysTickClear
 1712              		.section	.text.CySysTickInit,"ax",%progbits
 1713              		.align	2
 1714              		.global	CySysTickInit
 1715              		.code	16
 1716              		.thumb_func
 1717              		.type	CySysTickInit, %function
 1718              	CySysTickInit:
 1719              	.LFB33:
1490:.\Generated_Source\PSoC4/CyLib.c **** {
 1720              		.loc 1 1490 0
 1721              		.cfi_startproc
 1722 0000 08B5     		push	{r3, lr}
 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 3, -8
 1725              		.cfi_offset 14, -4
 1726              	.LVL124:
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1727              		.loc 1 1493 0
 1728 0002 0023     		mov	r3, #0
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1729              		.loc 1 1495 0
 1730 0004 0E48     		ldr	r0, .L153
 1731 0006 0021     		mov	r1, #0
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1732              		.loc 1 1493 0
 1733 0008 02E0     		b	.L151
 1734              	.LVL125:
 1735              	.L152:
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1736              		.loc 1 1495 0 discriminator 2
 1737 000a 9A00     		lsl	r2, r3, #2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 66


 1738 000c 1150     		str	r1, [r2, r0]
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1739              		.loc 1 1493 0 discriminator 2
 1740 000e 0133     		add	r3, r3, #1
 1741              	.LVL126:
 1742              	.L151:
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1743              		.loc 1 1493 0 is_stmt 0 discriminator 1
 1744 0010 042B     		cmp	r3, #4
 1745 0012 FAD9     		bls	.L152
1498:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1746              		.loc 1 1498 0 is_stmt 1
 1747 0014 0F20     		mov	r0, #15
 1748 0016 0B49     		ldr	r1, .L153+4
 1749 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1750              	.LVL127:
1501:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 1751              		.loc 1 1501 0
 1752 001c 0120     		mov	r0, #1
 1753 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1754              	.LVL128:
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1755              		.loc 1 1504 0
 1756 0022 094B     		ldr	r3, .L153+8
 1757 0024 D868     		ldr	r0, [r3, #12]
 1758 0026 FA21     		mov	r1, #250
 1759 0028 8900     		lsl	r1, r1, #2
 1760 002a FFF7FEFF 		bl	__aeabi_uidiv
 1761              	.LVL129:
 1762 002e FFF7FEFF 		bl	CySysTickSetReload
 1763              	.LVL130:
1505:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1764              		.loc 1 1505 0
 1765 0032 FFF7FEFF 		bl	CySysTickClear
 1766              	.LVL131:
1506:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1767              		.loc 1 1506 0
 1768 0036 0F20     		mov	r0, #15
 1769 0038 FFF7FEFF 		bl	CyIntEnable
 1770              	.LVL132:
1507:.\Generated_Source\PSoC4/CyLib.c **** }
 1771              		.loc 1 1507 0
 1772              		@ sp needed
 1773 003c 08BD     		pop	{r3, pc}
 1774              	.L154:
 1775 003e C046     		.align	2
 1776              	.L153:
 1777 0040 00000000 		.word	.LANCHOR2
 1778 0044 00000000 		.word	CySysTickServiceCallbacks
 1779 0048 00000000 		.word	.LANCHOR0
 1780              		.cfi_endproc
 1781              	.LFE33:
 1782              		.size	CySysTickInit, .-CySysTickInit
 1783              		.section	.text.CySysTickStart,"ax",%progbits
 1784              		.align	2
 1785              		.global	CySysTickStart
 1786              		.code	16
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 67


 1787              		.thumb_func
 1788              		.type	CySysTickStart, %function
 1789              	CySysTickStart:
 1790              	.LFB32:
1456:.\Generated_Source\PSoC4/CyLib.c **** {
 1791              		.loc 1 1456 0
 1792              		.cfi_startproc
 1793 0000 08B5     		push	{r3, lr}
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 3, -8
 1796              		.cfi_offset 14, -4
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1797              		.loc 1 1457 0
 1798 0002 064B     		ldr	r3, .L157
 1799 0004 5B69     		ldr	r3, [r3, #20]
 1800 0006 002B     		cmp	r3, #0
 1801 0008 04D1     		bne	.L156
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1802              		.loc 1 1459 0
 1803 000a FFF7FEFF 		bl	CySysTickInit
 1804              	.LVL133:
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1805              		.loc 1 1460 0
 1806 000e 0122     		mov	r2, #1
 1807 0010 024B     		ldr	r3, .L157
 1808 0012 5A61     		str	r2, [r3, #20]
 1809              	.L156:
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1810              		.loc 1 1463 0
 1811 0014 FFF7FEFF 		bl	CySysTickEnable
 1812              	.LVL134:
1464:.\Generated_Source\PSoC4/CyLib.c **** }
 1813              		.loc 1 1464 0
 1814              		@ sp needed
 1815 0018 08BD     		pop	{r3, pc}
 1816              	.L158:
 1817 001a C046     		.align	2
 1818              	.L157:
 1819 001c 00000000 		.word	.LANCHOR2
 1820              		.cfi_endproc
 1821              	.LFE32:
 1822              		.size	CySysTickStart, .-CySysTickStart
 1823              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1824              		.align	2
 1825              		.global	CySysTickSetCallback
 1826              		.code	16
 1827              		.thumb_func
 1828              		.type	CySysTickSetCallback, %function
 1829              	CySysTickSetCallback:
 1830              	.LFB44:
1782:.\Generated_Source\PSoC4/CyLib.c **** {
 1831              		.loc 1 1782 0
 1832              		.cfi_startproc
 1833              	.LVL135:
1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 1834              		.loc 1 1785 0
 1835 0000 024B     		ldr	r3, .L160
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 68


 1836 0002 8200     		lsl	r2, r0, #2
 1837 0004 D058     		ldr	r0, [r2, r3]
 1838              	.LVL136:
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1839              		.loc 1 1786 0
 1840 0006 D150     		str	r1, [r2, r3]
1788:.\Generated_Source\PSoC4/CyLib.c **** }
 1841              		.loc 1 1788 0
 1842              		@ sp needed
 1843 0008 7047     		bx	lr
 1844              	.L161:
 1845 000a C046     		.align	2
 1846              	.L160:
 1847 000c 00000000 		.word	.LANCHOR2
 1848              		.cfi_endproc
 1849              	.LFE44:
 1850              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1851              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1852              		.align	2
 1853              		.global	CySysTickGetCallback
 1854              		.code	16
 1855              		.thumb_func
 1856              		.type	CySysTickGetCallback, %function
 1857              	CySysTickGetCallback:
 1858              	.LFB45:
1808:.\Generated_Source\PSoC4/CyLib.c **** {
 1859              		.loc 1 1808 0
 1860              		.cfi_startproc
 1861              	.LVL137:
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1862              		.loc 1 1809 0
 1863 0000 8000     		lsl	r0, r0, #2
 1864              	.LVL138:
 1865 0002 014B     		ldr	r3, .L163
 1866 0004 C058     		ldr	r0, [r0, r3]
1810:.\Generated_Source\PSoC4/CyLib.c **** }
 1867              		.loc 1 1810 0
 1868              		@ sp needed
 1869 0006 7047     		bx	lr
 1870              	.L164:
 1871              		.align	2
 1872              	.L163:
 1873 0008 00000000 		.word	.LANCHOR2
 1874              		.cfi_endproc
 1875              	.LFE45:
 1876              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1877              		.section	.text.CyGetUniqueId,"ax",%progbits
 1878              		.align	2
 1879              		.global	CyGetUniqueId
 1880              		.code	16
 1881              		.thumb_func
 1882              		.type	CyGetUniqueId, %function
 1883              	CyGetUniqueId:
 1884              	.LFB47:
1843:.\Generated_Source\PSoC4/CyLib.c **** 
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 69


1846:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
1847:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1848:.\Generated_Source\PSoC4/CyLib.c **** *
1849:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1850:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
1851:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
1852:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
1853:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
1854:.\Generated_Source\PSoC4/CyLib.c **** *
1855:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1856:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
1857:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
1858:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
1859:.\Generated_Source\PSoC4/CyLib.c **** *
1860:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1861:.\Generated_Source\PSoC4/CyLib.c **** *  None
1862:.\Generated_Source\PSoC4/CyLib.c **** *
1863:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1864:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
1865:.\Generated_Source\PSoC4/CyLib.c **** {
 1885              		.loc 1 1865 0
 1886              		.cfi_startproc
 1887              	.LVL139:
1866:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
1867:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1888              		.loc 1 1867 0
 1889 0000 134B     		ldr	r3, .L166
 1890 0002 1A78     		ldrb	r2, [r3]
 1891 0004 D2B2     		uxtb	r2, r2
 1892 0006 0260     		str	r2, [r0]
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1893              		.loc 1 1868 0
 1894 0008 124B     		ldr	r3, .L166+4
 1895 000a 1B78     		ldrb	r3, [r3]
 1896 000c 1B02     		lsl	r3, r3, #8
 1897 000e 1343     		orr	r3, r2
 1898 0010 0360     		str	r3, [r0]
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1899              		.loc 1 1869 0
 1900 0012 114A     		ldr	r2, .L166+8
 1901 0014 1278     		ldrb	r2, [r2]
 1902 0016 1204     		lsl	r2, r2, #16
 1903 0018 1343     		orr	r3, r2
 1904 001a 0360     		str	r3, [r0]
1870:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1905              		.loc 1 1870 0
 1906 001c 0F4A     		ldr	r2, .L166+12
 1907 001e 1278     		ldrb	r2, [r2]
 1908 0020 1206     		lsl	r2, r2, #24
 1909 0022 1343     		orr	r3, r2
 1910 0024 0360     		str	r3, [r0]
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1911              		.loc 1 1872 0
 1912 0026 0E4B     		ldr	r3, .L166+16
 1913 0028 1A78     		ldrb	r2, [r3]
 1914 002a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 70


 1915 002c 4260     		str	r2, [r0, #4]
1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1916              		.loc 1 1873 0
 1917 002e 0D4B     		ldr	r3, .L166+20
 1918 0030 1B78     		ldrb	r3, [r3]
 1919 0032 1B02     		lsl	r3, r3, #8
 1920 0034 1343     		orr	r3, r2
 1921 0036 4360     		str	r3, [r0, #4]
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1922              		.loc 1 1874 0
 1923 0038 0B4A     		ldr	r2, .L166+24
 1924 003a 1278     		ldrb	r2, [r2]
 1925 003c 1204     		lsl	r2, r2, #16
 1926 003e 1343     		orr	r3, r2
 1927 0040 4360     		str	r3, [r0, #4]
1875:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1928              		.loc 1 1875 0
 1929 0042 0A4A     		ldr	r2, .L166+28
 1930 0044 1278     		ldrb	r2, [r2]
 1931 0046 1206     		lsl	r2, r2, #24
 1932 0048 1343     		orr	r3, r2
 1933 004a 4360     		str	r3, [r0, #4]
1876:.\Generated_Source\PSoC4/CyLib.c **** #else
1877:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
1878:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
1879:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
1880:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
1883:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
1884:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
1885:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
1886:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
1887:.\Generated_Source\PSoC4/CyLib.c **** }
 1934              		.loc 1 1887 0
 1935              		@ sp needed
 1936 004c 7047     		bx	lr
 1937              	.L167:
 1938 004e C046     		.align	2
 1939              	.L166:
 1940 0050 78F1FF0F 		.word	268431736
 1941 0054 79F1FF0F 		.word	268431737
 1942 0058 7AF1FF0F 		.word	268431738
 1943 005c 7BF1FF0F 		.word	268431739
 1944 0060 7CF1FF0F 		.word	268431740
 1945 0064 7DF1FF0F 		.word	268431741
 1946 0068 7EF1FF0F 		.word	268431742
 1947 006c 7FF1FF0F 		.word	268431743
 1948              		.cfi_endproc
 1949              	.LFE47:
 1950              		.size	CyGetUniqueId, .-CyGetUniqueId
 1951              		.global	cyImoFreqMhz2Reg
 1952              		.global	CySysTickInitVar
 1953              		.global	cydelay32kMs
 1954              		.global	cydelayFreqMhz
 1955              		.global	cydelayFreqKhz
 1956              		.global	cydelayFreqHz
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 71


 1957              		.section	.rodata
 1958              		.align	2
 1959              		.set	.LANCHOR1,. + 0
 1960              		.type	cyImoFreqMhz2Reg, %object
 1961              		.size	cyImoFreqMhz2Reg, 46
 1962              	cyImoFreqMhz2Reg:
 1963 0000 03       		.byte	3
 1964 0001 04       		.byte	4
 1965 0002 05       		.byte	5
 1966 0003 06       		.byte	6
 1967 0004 07       		.byte	7
 1968 0005 08       		.byte	8
 1969 0006 09       		.byte	9
 1970 0007 0A       		.byte	10
 1971 0008 0B       		.byte	11
 1972 0009 0C       		.byte	12
 1973 000a 0E       		.byte	14
 1974 000b 0F       		.byte	15
 1975 000c 10       		.byte	16
 1976 000d 11       		.byte	17
 1977 000e 12       		.byte	18
 1978 000f 13       		.byte	19
 1979 0010 14       		.byte	20
 1980 0011 15       		.byte	21
 1981 0012 16       		.byte	22
 1982 0013 17       		.byte	23
 1983 0014 18       		.byte	24
 1984 0015 19       		.byte	25
 1985 0016 1B       		.byte	27
 1986 0017 1C       		.byte	28
 1987 0018 1D       		.byte	29
 1988 0019 1E       		.byte	30
 1989 001a 1F       		.byte	31
 1990 001b 20       		.byte	32
 1991 001c 21       		.byte	33
 1992 001d 22       		.byte	34
 1993 001e 23       		.byte	35
 1994 001f 25       		.byte	37
 1995 0020 26       		.byte	38
 1996 0021 27       		.byte	39
 1997 0022 28       		.byte	40
 1998 0023 29       		.byte	41
 1999 0024 2A       		.byte	42
 2000 0025 2B       		.byte	43
 2001 0026 2E       		.byte	46
 2002 0027 2F       		.byte	47
 2003 0028 30       		.byte	48
 2004 0029 31       		.byte	49
 2005 002a 32       		.byte	50
 2006 002b 33       		.byte	51
 2007 002c 34       		.byte	52
 2008 002d 35       		.byte	53
 2009 002e 0000     		.data
 2010              		.align	2
 2011              		.set	.LANCHOR0,. + 0
 2012              		.type	cydelay32kMs, %object
 2013              		.size	cydelay32kMs, 4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 72


 2014              	cydelay32kMs:
 2015 0000 0000C05D 		.word	1572864000
 2016              		.type	cydelayFreqKhz, %object
 2017              		.size	cydelayFreqKhz, 4
 2018              	cydelayFreqKhz:
 2019 0004 80BB0000 		.word	48000
 2020              		.type	cydelayFreqMhz, %object
 2021              		.size	cydelayFreqMhz, 1
 2022              	cydelayFreqMhz:
 2023 0008 30       		.byte	48
 2024 0009 000000   		.space	3
 2025              		.type	cydelayFreqHz, %object
 2026              		.size	cydelayFreqHz, 4
 2027              	cydelayFreqHz:
 2028 000c 006CDC02 		.word	48000000
 2029              		.bss
 2030              		.align	2
 2031              		.set	.LANCHOR2,. + 0
 2032              		.type	CySysTickCallbacks, %object
 2033              		.size	CySysTickCallbacks, 20
 2034              	CySysTickCallbacks:
 2035 0000 00000000 		.space	20
 2035      00000000 
 2035      00000000 
 2035      00000000 
 2035      00000000 
 2036              		.type	CySysTickInitVar, %object
 2037              		.size	CySysTickInitVar, 4
 2038              	CySysTickInitVar:
 2039 0014 00000000 		.space	4
 2040              		.text
 2041              	.Letext0:
 2042              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2043              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2044              		.file 4 ".\\Generated_Source\\PSoC4\\CyLFClk.h"
 2045              		.file 5 ".\\Generated_Source\\PSoC4\\CyFlash.h"
 2046              		.section	.debug_info,"",%progbits
 2047              	.Ldebug_info0:
 2048 0000 600B0000 		.4byte	0xb60
 2049 0004 0400     		.2byte	0x4
 2050 0006 00000000 		.4byte	.Ldebug_abbrev0
 2051 000a 04       		.byte	0x4
 2052 000b 01       		.uleb128 0x1
 2053 000c 4D000000 		.4byte	.LASF103
 2054 0010 01       		.byte	0x1
 2055 0011 97030000 		.4byte	.LASF104
 2056 0015 64050000 		.4byte	.LASF105
 2057 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2058 001d 00000000 		.4byte	0
 2059 0021 00000000 		.4byte	.Ldebug_line0
 2060 0025 02       		.uleb128 0x2
 2061 0026 01       		.byte	0x1
 2062 0027 06       		.byte	0x6
 2063 0028 50010000 		.4byte	.LASF0
 2064 002c 02       		.uleb128 0x2
 2065 002d 01       		.byte	0x1
 2066 002e 08       		.byte	0x8
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 73


 2067 002f 0B050000 		.4byte	.LASF1
 2068 0033 02       		.uleb128 0x2
 2069 0034 02       		.byte	0x2
 2070 0035 05       		.byte	0x5
 2071 0036 19050000 		.4byte	.LASF2
 2072 003a 02       		.uleb128 0x2
 2073 003b 02       		.byte	0x2
 2074 003c 07       		.byte	0x7
 2075 003d 56030000 		.4byte	.LASF3
 2076 0041 02       		.uleb128 0x2
 2077 0042 04       		.byte	0x4
 2078 0043 05       		.byte	0x5
 2079 0044 AD010000 		.4byte	.LASF4
 2080 0048 02       		.uleb128 0x2
 2081 0049 04       		.byte	0x4
 2082 004a 07       		.byte	0x7
 2083 004b C9020000 		.4byte	.LASF5
 2084 004f 02       		.uleb128 0x2
 2085 0050 08       		.byte	0x8
 2086 0051 05       		.byte	0x5
 2087 0052 42010000 		.4byte	.LASF6
 2088 0056 02       		.uleb128 0x2
 2089 0057 08       		.byte	0x8
 2090 0058 07       		.byte	0x7
 2091 0059 C9000000 		.4byte	.LASF7
 2092 005d 03       		.uleb128 0x3
 2093 005e 04       		.byte	0x4
 2094 005f 05       		.byte	0x5
 2095 0060 696E7400 		.ascii	"int\000"
 2096 0064 02       		.uleb128 0x2
 2097 0065 04       		.byte	0x4
 2098 0066 07       		.byte	0x7
 2099 0067 AD020000 		.4byte	.LASF8
 2100 006b 04       		.uleb128 0x4
 2101 006c CD010000 		.4byte	.LASF9
 2102 0070 02       		.byte	0x2
 2103 0071 B3       		.byte	0xb3
 2104 0072 2C000000 		.4byte	0x2c
 2105 0076 04       		.uleb128 0x4
 2106 0077 0F000000 		.4byte	.LASF10
 2107 007b 02       		.byte	0x2
 2108 007c B4       		.byte	0xb4
 2109 007d 3A000000 		.4byte	0x3a
 2110 0081 04       		.uleb128 0x4
 2111 0082 10020000 		.4byte	.LASF11
 2112 0086 02       		.byte	0x2
 2113 0087 B5       		.byte	0xb5
 2114 0088 48000000 		.4byte	0x48
 2115 008c 02       		.uleb128 0x2
 2116 008d 04       		.byte	0x4
 2117 008e 04       		.byte	0x4
 2118 008f 9D040000 		.4byte	.LASF12
 2119 0093 02       		.uleb128 0x2
 2120 0094 08       		.byte	0x8
 2121 0095 04       		.byte	0x4
 2122 0096 EC010000 		.4byte	.LASF13
 2123 009a 02       		.uleb128 0x2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 74


 2124 009b 01       		.byte	0x1
 2125 009c 08       		.byte	0x8
 2126 009d 52050000 		.4byte	.LASF14
 2127 00a1 05       		.uleb128 0x5
 2128 00a2 F5040000 		.4byte	.LASF15
 2129 00a6 02       		.byte	0x2
 2130 00a7 5D01     		.2byte	0x15d
 2131 00a9 AD000000 		.4byte	0xad
 2132 00ad 06       		.uleb128 0x6
 2133 00ae 6B000000 		.4byte	0x6b
 2134 00b2 05       		.uleb128 0x5
 2135 00b3 02040000 		.4byte	.LASF16
 2136 00b7 02       		.byte	0x2
 2137 00b8 5F01     		.2byte	0x15f
 2138 00ba BE000000 		.4byte	0xbe
 2139 00be 06       		.uleb128 0x6
 2140 00bf 81000000 		.4byte	0x81
 2141 00c3 05       		.uleb128 0x5
 2142 00c4 57050000 		.4byte	.LASF17
 2143 00c8 02       		.byte	0x2
 2144 00c9 6F01     		.2byte	0x16f
 2145 00cb CF000000 		.4byte	0xcf
 2146 00cf 07       		.uleb128 0x7
 2147 00d0 04       		.byte	0x4
 2148 00d1 D5000000 		.4byte	0xd5
 2149 00d5 08       		.uleb128 0x8
 2150 00d6 02       		.uleb128 0x2
 2151 00d7 04       		.byte	0x4
 2152 00d8 07       		.byte	0x7
 2153 00d9 17040000 		.4byte	.LASF18
 2154 00dd 04       		.uleb128 0x4
 2155 00de B9040000 		.4byte	.LASF19
 2156 00e2 03       		.byte	0x3
 2157 00e3 67       		.byte	0x67
 2158 00e4 CF000000 		.4byte	0xcf
 2159 00e8 09       		.uleb128 0x9
 2160 00e9 81000000 		.4byte	0x81
 2161 00ed F8000000 		.4byte	0xf8
 2162 00f1 0A       		.uleb128 0xa
 2163 00f2 D6000000 		.4byte	0xd6
 2164 00f6 03       		.byte	0x3
 2165 00f7 00       		.byte	0
 2166 00f8 0B       		.uleb128 0xb
 2167 00f9 8F010000 		.4byte	.LASF106
 2168 00fd 01       		.byte	0x1
 2169 00fe EE       		.byte	0xee
 2170 00ff 81000000 		.4byte	0x81
 2171 0103 00000000 		.4byte	.LFB5
 2172 0107 14000000 		.4byte	.LFE5-.LFB5
 2173 010b 01       		.uleb128 0x1
 2174 010c 9C       		.byte	0x9c
 2175 010d 0C       		.uleb128 0xc
 2176 010e 78060000 		.4byte	.LASF20
 2177 0112 01       		.byte	0x1
 2178 0113 5A       		.byte	0x5a
 2179 0114 00000000 		.4byte	.LFB1
 2180 0118 14000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 75


 2181 011c 01       		.uleb128 0x1
 2182 011d 9C       		.byte	0x9c
 2183 011e 0C       		.uleb128 0xc
 2184 011f E8030000 		.4byte	.LASF21
 2185 0123 01       		.byte	0x1
 2186 0124 D8       		.byte	0xd8
 2187 0125 00000000 		.4byte	.LFB4
 2188 0129 14000000 		.4byte	.LFE4-.LFB4
 2189 012d 01       		.uleb128 0x1
 2190 012e 9C       		.byte	0x9c
 2191 012f 0D       		.uleb128 0xd
 2192 0130 F6020000 		.4byte	.LASF22
 2193 0134 01       		.byte	0x1
 2194 0135 78       		.byte	0x78
 2195 0136 00000000 		.4byte	.LFB2
 2196 013a 18000000 		.4byte	.LFE2-.LFB2
 2197 013e 01       		.uleb128 0x1
 2198 013f 9C       		.byte	0x9c
 2199 0140 4E010000 		.4byte	0x14e
 2200 0144 0E       		.uleb128 0xe
 2201 0145 06000000 		.4byte	.LVL0
 2202 0149 1E010000 		.4byte	0x11e
 2203 014d 00       		.byte	0
 2204 014e 0F       		.uleb128 0xf
 2205 014f 1F000000 		.4byte	.LASF23
 2206 0153 01       		.byte	0x1
 2207 0154 1901     		.2byte	0x119
 2208 0156 00000000 		.4byte	.LFB6
 2209 015a 24000000 		.4byte	.LFE6-.LFB6
 2210 015e 01       		.uleb128 0x1
 2211 015f 9C       		.byte	0x9c
 2212 0160 97010000 		.4byte	0x197
 2213 0164 10       		.uleb128 0x10
 2214 0165 41050000 		.4byte	.LASF25
 2215 0169 01       		.byte	0x1
 2216 016a 1901     		.2byte	0x119
 2217 016c 81000000 		.4byte	0x81
 2218 0170 00000000 		.4byte	.LLST0
 2219 0174 11       		.uleb128 0x11
 2220 0175 6D010000 		.4byte	.LASF27
 2221 0179 01       		.byte	0x1
 2222 017a 1B01     		.2byte	0x11b
 2223 017c 6B000000 		.4byte	0x6b
 2224 0180 2C000000 		.4byte	.LLST1
 2225 0184 0E       		.uleb128 0xe
 2226 0185 08000000 		.4byte	.LVL2
 2227 0189 1E0B0000 		.4byte	0xb1e
 2228 018d 0E       		.uleb128 0xe
 2229 018e 1C000000 		.4byte	.LVL4
 2230 0192 290B0000 		.4byte	0xb29
 2231 0196 00       		.byte	0
 2232 0197 0F       		.uleb128 0xf
 2233 0198 B6050000 		.4byte	.LASF24
 2234 019c 01       		.byte	0x1
 2235 019d 4A01     		.2byte	0x14a
 2236 019f 00000000 		.4byte	.LFB7
 2237 01a3 28000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 76


 2238 01a7 01       		.uleb128 0x1
 2239 01a8 9C       		.byte	0x9c
 2240 01a9 E0010000 		.4byte	0x1e0
 2241 01ad 10       		.uleb128 0x10
 2242 01ae 70060000 		.4byte	.LASF26
 2243 01b2 01       		.byte	0x1
 2244 01b3 4A01     		.2byte	0x14a
 2245 01b5 81000000 		.4byte	0x81
 2246 01b9 3F000000 		.4byte	.LLST2
 2247 01bd 11       		.uleb128 0x11
 2248 01be 6D010000 		.4byte	.LASF27
 2249 01c2 01       		.byte	0x1
 2250 01c3 4C01     		.2byte	0x14c
 2251 01c5 6B000000 		.4byte	0x6b
 2252 01c9 6B000000 		.4byte	.LLST3
 2253 01cd 0E       		.uleb128 0xe
 2254 01ce 08000000 		.4byte	.LVL6
 2255 01d2 1E0B0000 		.4byte	0xb1e
 2256 01d6 0E       		.uleb128 0xe
 2257 01d7 1E000000 		.4byte	.LVL8
 2258 01db 290B0000 		.4byte	0xb29
 2259 01df 00       		.byte	0
 2260 01e0 12       		.uleb128 0x12
 2261 01e1 3C060000 		.4byte	.LASF28
 2262 01e5 01       		.byte	0x1
 2263 01e6 7503     		.2byte	0x375
 2264 01e8 00000000 		.4byte	.LFB10
 2265 01ec 20000000 		.4byte	.LFE10-.LFB10
 2266 01f0 01       		.uleb128 0x1
 2267 01f1 9C       		.byte	0x9c
 2268 01f2 13       		.uleb128 0x13
 2269 01f3 DB020000 		.4byte	.LASF77
 2270 01f7 01       		.byte	0x1
 2271 01f8 8B03     		.2byte	0x38b
 2272 01fa 81000000 		.4byte	0x81
 2273 01fe 00000000 		.4byte	.LFB11
 2274 0202 10000000 		.4byte	.LFE11-.LFB11
 2275 0206 01       		.uleb128 0x1
 2276 0207 9C       		.byte	0x9c
 2277 0208 12       		.uleb128 0x12
 2278 0209 F9010000 		.4byte	.LASF29
 2279 020d 01       		.byte	0x1
 2280 020e 9F03     		.2byte	0x39f
 2281 0210 00000000 		.4byte	.LFB12
 2282 0214 0C000000 		.4byte	.LFE12-.LFB12
 2283 0218 01       		.uleb128 0x1
 2284 0219 9C       		.byte	0x9c
 2285 021a 14       		.uleb128 0x14
 2286 021b 42030000 		.4byte	.LASF32
 2287 021f 01       		.byte	0x1
 2288 0220 BB03     		.2byte	0x3bb
 2289 0222 81000000 		.4byte	0x81
 2290 0226 00000000 		.4byte	.LFB13
 2291 022a 14000000 		.4byte	.LFE13-.LFB13
 2292 022e 01       		.uleb128 0x1
 2293 022f 9C       		.byte	0x9c
 2294 0230 53020000 		.4byte	0x253
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 77


 2295 0234 10       		.uleb128 0x10
 2296 0235 4B050000 		.4byte	.LASF30
 2297 0239 01       		.byte	0x1
 2298 023a BB03     		.2byte	0x3bb
 2299 023c 81000000 		.4byte	0x81
 2300 0240 7E000000 		.4byte	.LLST4
 2301 0244 15       		.uleb128 0x15
 2302 0245 5B060000 		.4byte	.LASF31
 2303 0249 01       		.byte	0x1
 2304 024a BD03     		.2byte	0x3bd
 2305 024c 81000000 		.4byte	0x81
 2306 0250 01       		.uleb128 0x1
 2307 0251 50       		.byte	0x50
 2308 0252 00       		.byte	0
 2309 0253 14       		.uleb128 0x14
 2310 0254 3F000000 		.4byte	.LASF33
 2311 0258 01       		.byte	0x1
 2312 0259 D603     		.2byte	0x3d6
 2313 025b 81000000 		.4byte	0x81
 2314 025f 00000000 		.4byte	.LFB14
 2315 0263 10000000 		.4byte	.LFE14-.LFB14
 2316 0267 01       		.uleb128 0x1
 2317 0268 9C       		.byte	0x9c
 2318 0269 7C020000 		.4byte	0x27c
 2319 026d 15       		.uleb128 0x15
 2320 026e 16000000 		.4byte	.LASF34
 2321 0272 01       		.byte	0x1
 2322 0273 D803     		.2byte	0x3d8
 2323 0275 81000000 		.4byte	0x81
 2324 0279 01       		.uleb128 0x1
 2325 027a 50       		.byte	0x50
 2326 027b 00       		.byte	0
 2327 027c 0F       		.uleb128 0xf
 2328 027d EB000000 		.4byte	.LASF35
 2329 0281 01       		.byte	0x1
 2330 0282 F203     		.2byte	0x3f2
 2331 0284 00000000 		.4byte	.LFB15
 2332 0288 0C000000 		.4byte	.LFE15-.LFB15
 2333 028c 01       		.uleb128 0x1
 2334 028d 9C       		.byte	0x9c
 2335 028e A1020000 		.4byte	0x2a1
 2336 0292 16       		.uleb128 0x16
 2337 0293 1E020000 		.4byte	.LASF36
 2338 0297 01       		.byte	0x1
 2339 0298 F203     		.2byte	0x3f2
 2340 029a 81000000 		.4byte	0x81
 2341 029e 01       		.uleb128 0x1
 2342 029f 50       		.byte	0x50
 2343 02a0 00       		.byte	0
 2344 02a1 0F       		.uleb128 0xf
 2345 02a2 23050000 		.4byte	.LASF37
 2346 02a6 01       		.byte	0x1
 2347 02a7 C104     		.2byte	0x4c1
 2348 02a9 00000000 		.4byte	.LFB22
 2349 02ad 14000000 		.4byte	.LFE22-.LFB22
 2350 02b1 01       		.uleb128 0x1
 2351 02b2 9C       		.byte	0x9c
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 78


 2352 02b3 C8020000 		.4byte	0x2c8
 2353 02b7 10       		.uleb128 0x10
 2354 02b8 17020000 		.4byte	.LASF38
 2355 02bc 01       		.byte	0x1
 2356 02bd C104     		.2byte	0x4c1
 2357 02bf 6B000000 		.4byte	0x6b
 2358 02c3 9C000000 		.4byte	.LLST5
 2359 02c7 00       		.byte	0
 2360 02c8 14       		.uleb128 0x14
 2361 02c9 34010000 		.4byte	.LASF39
 2362 02cd 01       		.byte	0x1
 2363 02ce D504     		.2byte	0x4d5
 2364 02d0 6B000000 		.4byte	0x6b
 2365 02d4 00000000 		.4byte	.LFB23
 2366 02d8 18000000 		.4byte	.LFE23-.LFB23
 2367 02dc 01       		.uleb128 0x1
 2368 02dd 9C       		.byte	0x9c
 2369 02de F3020000 		.4byte	0x2f3
 2370 02e2 10       		.uleb128 0x10
 2371 02e3 17020000 		.4byte	.LASF38
 2372 02e7 01       		.byte	0x1
 2373 02e8 D504     		.2byte	0x4d5
 2374 02ea 6B000000 		.4byte	0x6b
 2375 02ee BD000000 		.4byte	.LLST6
 2376 02f2 00       		.byte	0
 2377 02f3 0F       		.uleb128 0xf
 2378 02f4 B6010000 		.4byte	.LASF40
 2379 02f8 01       		.byte	0x1
 2380 02f9 EA04     		.2byte	0x4ea
 2381 02fb 00000000 		.4byte	.LFB24
 2382 02ff 14000000 		.4byte	.LFE24-.LFB24
 2383 0303 01       		.uleb128 0x1
 2384 0304 9C       		.byte	0x9c
 2385 0305 1A030000 		.4byte	0x31a
 2386 0309 10       		.uleb128 0x10
 2387 030a 17020000 		.4byte	.LASF38
 2388 030e 01       		.byte	0x1
 2389 030f EA04     		.2byte	0x4ea
 2390 0311 6B000000 		.4byte	0x6b
 2391 0315 DE000000 		.4byte	.LLST7
 2392 0319 00       		.byte	0
 2393 031a 0F       		.uleb128 0xf
 2394 031b 1D030000 		.4byte	.LASF41
 2395 031f 01       		.byte	0x1
 2396 0320 FD04     		.2byte	0x4fd
 2397 0322 00000000 		.4byte	.LFB25
 2398 0326 14000000 		.4byte	.LFE25-.LFB25
 2399 032a 01       		.uleb128 0x1
 2400 032b 9C       		.byte	0x9c
 2401 032c 41030000 		.4byte	0x341
 2402 0330 10       		.uleb128 0x10
 2403 0331 17020000 		.4byte	.LASF38
 2404 0335 01       		.byte	0x1
 2405 0336 FD04     		.2byte	0x4fd
 2406 0338 6B000000 		.4byte	0x6b
 2407 033c FF000000 		.4byte	.LLST8
 2408 0340 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 79


 2409 0341 0F       		.uleb128 0xf
 2410 0342 31040000 		.4byte	.LASF42
 2411 0346 01       		.byte	0x1
 2412 0347 1105     		.2byte	0x511
 2413 0349 00000000 		.4byte	.LFB26
 2414 034d 14000000 		.4byte	.LFE26-.LFB26
 2415 0351 01       		.uleb128 0x1
 2416 0352 9C       		.byte	0x9c
 2417 0353 68030000 		.4byte	0x368
 2418 0357 10       		.uleb128 0x10
 2419 0358 17020000 		.4byte	.LASF38
 2420 035c 01       		.byte	0x1
 2421 035d 1105     		.2byte	0x511
 2422 035f 6B000000 		.4byte	0x6b
 2423 0363 20010000 		.4byte	.LLST9
 2424 0367 00       		.byte	0
 2425 0368 0F       		.uleb128 0xf
 2426 0369 04050000 		.4byte	.LASF43
 2427 036d 01       		.byte	0x1
 2428 036e 2505     		.2byte	0x525
 2429 0370 00000000 		.4byte	.LFB27
 2430 0374 04000000 		.4byte	.LFE27-.LFB27
 2431 0378 01       		.uleb128 0x1
 2432 0379 9C       		.byte	0x9c
 2433 037a 8D030000 		.4byte	0x38d
 2434 037e 16       		.uleb128 0x16
 2435 037f 4B050000 		.4byte	.LASF30
 2436 0383 01       		.byte	0x1
 2437 0384 2505     		.2byte	0x525
 2438 0386 6B000000 		.4byte	0x6b
 2439 038a 01       		.uleb128 0x1
 2440 038b 50       		.byte	0x50
 2441 038c 00       		.byte	0
 2442 038d 14       		.uleb128 0x14
 2443 038e D6030000 		.4byte	.LASF44
 2444 0392 01       		.byte	0x1
 2445 0393 0E04     		.2byte	0x40e
 2446 0395 C3000000 		.4byte	0xc3
 2447 0399 00000000 		.4byte	.LFB16
 2448 039d 1E000000 		.4byte	.LFE16-.LFB16
 2449 03a1 01       		.uleb128 0x1
 2450 03a2 9C       		.byte	0x9c
 2451 03a3 F5030000 		.4byte	0x3f5
 2452 03a7 10       		.uleb128 0x10
 2453 03a8 17020000 		.4byte	.LASF38
 2454 03ac 01       		.byte	0x1
 2455 03ad 0E04     		.2byte	0x40e
 2456 03af 6B000000 		.4byte	0x6b
 2457 03b3 41010000 		.4byte	.LLST10
 2458 03b7 10       		.uleb128 0x10
 2459 03b8 43040000 		.4byte	.LASF45
 2460 03bc 01       		.byte	0x1
 2461 03bd 0E04     		.2byte	0x40e
 2462 03bf C3000000 		.4byte	0xc3
 2463 03c3 62010000 		.4byte	.LLST11
 2464 03c7 15       		.uleb128 0x15
 2465 03c8 38000000 		.4byte	.LASF46
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 80


 2466 03cc 01       		.byte	0x1
 2467 03cd 1004     		.2byte	0x410
 2468 03cf C3000000 		.4byte	0xc3
 2469 03d3 01       		.uleb128 0x1
 2470 03d4 50       		.byte	0x50
 2471 03d5 17       		.uleb128 0x17
 2472 03d6 00000000 		.4byte	.LASF47
 2473 03da 01       		.byte	0x1
 2474 03db 1104     		.2byte	0x411
 2475 03dd F5030000 		.4byte	0x3f5
 2476 03e1 00000020 		.4byte	0x20000000
 2477 03e5 18       		.uleb128 0x18
 2478 03e6 10000000 		.4byte	.LVL28
 2479 03ea 68030000 		.4byte	0x368
 2480 03ee 19       		.uleb128 0x19
 2481 03ef 01       		.uleb128 0x1
 2482 03f0 50       		.byte	0x50
 2483 03f1 01       		.uleb128 0x1
 2484 03f2 30       		.byte	0x30
 2485 03f3 00       		.byte	0
 2486 03f4 00       		.byte	0
 2487 03f5 07       		.uleb128 0x7
 2488 03f6 04       		.byte	0x4
 2489 03f7 C3000000 		.4byte	0xc3
 2490 03fb 14       		.uleb128 0x14
 2491 03fc 2F050000 		.4byte	.LASF48
 2492 0400 01       		.byte	0x1
 2493 0401 3304     		.2byte	0x433
 2494 0403 C3000000 		.4byte	0xc3
 2495 0407 00000000 		.4byte	.LFB17
 2496 040b 1A000000 		.4byte	.LFE17-.LFB17
 2497 040f 01       		.uleb128 0x1
 2498 0410 9C       		.byte	0x9c
 2499 0411 45040000 		.4byte	0x445
 2500 0415 10       		.uleb128 0x10
 2501 0416 17020000 		.4byte	.LASF38
 2502 041a 01       		.byte	0x1
 2503 041b 3304     		.2byte	0x433
 2504 041d 6B000000 		.4byte	0x6b
 2505 0421 8E010000 		.4byte	.LLST12
 2506 0425 17       		.uleb128 0x17
 2507 0426 00000000 		.4byte	.LASF47
 2508 042a 01       		.byte	0x1
 2509 042b 3504     		.2byte	0x435
 2510 042d F5030000 		.4byte	0x3f5
 2511 0431 00000020 		.4byte	0x20000000
 2512 0435 18       		.uleb128 0x18
 2513 0436 0E000000 		.4byte	.LVL34
 2514 043a 68030000 		.4byte	0x368
 2515 043e 19       		.uleb128 0x19
 2516 043f 01       		.uleb128 0x1
 2517 0440 50       		.byte	0x50
 2518 0441 01       		.uleb128 0x1
 2519 0442 30       		.byte	0x30
 2520 0443 00       		.byte	0
 2521 0444 00       		.byte	0
 2522 0445 14       		.uleb128 0x14
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 81


 2523 0446 88030000 		.4byte	.LASF49
 2524 044a 01       		.byte	0x1
 2525 044b 4C04     		.2byte	0x44c
 2526 044d C3000000 		.4byte	0xc3
 2527 0451 00000000 		.4byte	.LFB18
 2528 0455 20000000 		.4byte	.LFE18-.LFB18
 2529 0459 01       		.uleb128 0x1
 2530 045a 9C       		.byte	0x9c
 2531 045b AD040000 		.4byte	0x4ad
 2532 045f 10       		.uleb128 0x10
 2533 0460 17020000 		.4byte	.LASF38
 2534 0464 01       		.byte	0x1
 2535 0465 4C04     		.2byte	0x44c
 2536 0467 6B000000 		.4byte	0x6b
 2537 046b AF010000 		.4byte	.LLST13
 2538 046f 10       		.uleb128 0x10
 2539 0470 43040000 		.4byte	.LASF45
 2540 0474 01       		.byte	0x1
 2541 0475 4C04     		.2byte	0x44c
 2542 0477 C3000000 		.4byte	0xc3
 2543 047b D0010000 		.4byte	.LLST14
 2544 047f 15       		.uleb128 0x15
 2545 0480 38000000 		.4byte	.LASF46
 2546 0484 01       		.byte	0x1
 2547 0485 4E04     		.2byte	0x44e
 2548 0487 C3000000 		.4byte	0xc3
 2549 048b 01       		.uleb128 0x1
 2550 048c 50       		.byte	0x50
 2551 048d 17       		.uleb128 0x17
 2552 048e 00000000 		.4byte	.LASF47
 2553 0492 01       		.byte	0x1
 2554 0493 4F04     		.2byte	0x44f
 2555 0495 F5030000 		.4byte	0x3f5
 2556 0499 00000020 		.4byte	0x20000000
 2557 049d 18       		.uleb128 0x18
 2558 049e 10000000 		.4byte	.LVL38
 2559 04a2 68030000 		.4byte	0x368
 2560 04a6 19       		.uleb128 0x19
 2561 04a7 01       		.uleb128 0x1
 2562 04a8 50       		.byte	0x50
 2563 04a9 01       		.uleb128 0x1
 2564 04aa 30       		.byte	0x30
 2565 04ab 00       		.byte	0
 2566 04ac 00       		.byte	0
 2567 04ad 14       		.uleb128 0x14
 2568 04ae CB040000 		.4byte	.LASF50
 2569 04b2 01       		.byte	0x1
 2570 04b3 6B04     		.2byte	0x46b
 2571 04b5 C3000000 		.4byte	0xc3
 2572 04b9 00000000 		.4byte	.LFB19
 2573 04bd 1C000000 		.4byte	.LFE19-.LFB19
 2574 04c1 01       		.uleb128 0x1
 2575 04c2 9C       		.byte	0x9c
 2576 04c3 F7040000 		.4byte	0x4f7
 2577 04c7 10       		.uleb128 0x10
 2578 04c8 17020000 		.4byte	.LASF38
 2579 04cc 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 82


 2580 04cd 6B04     		.2byte	0x46b
 2581 04cf 6B000000 		.4byte	0x6b
 2582 04d3 FC010000 		.4byte	.LLST15
 2583 04d7 17       		.uleb128 0x17
 2584 04d8 00000000 		.4byte	.LASF47
 2585 04dc 01       		.byte	0x1
 2586 04dd 6D04     		.2byte	0x46d
 2587 04df F5030000 		.4byte	0x3f5
 2588 04e3 00000020 		.4byte	0x20000000
 2589 04e7 18       		.uleb128 0x18
 2590 04e8 0E000000 		.4byte	.LVL44
 2591 04ec 68030000 		.4byte	0x368
 2592 04f0 19       		.uleb128 0x19
 2593 04f1 01       		.uleb128 0x1
 2594 04f2 50       		.byte	0x50
 2595 04f3 01       		.uleb128 0x1
 2596 04f4 30       		.byte	0x30
 2597 04f5 00       		.byte	0
 2598 04f6 00       		.byte	0
 2599 04f7 0F       		.uleb128 0xf
 2600 04f8 8C040000 		.4byte	.LASF51
 2601 04fc 01       		.byte	0x1
 2602 04fd 8304     		.2byte	0x483
 2603 04ff 00000000 		.4byte	.LFB20
 2604 0503 48000000 		.4byte	.LFE20-.LFB20
 2605 0507 01       		.uleb128 0x1
 2606 0508 9C       		.byte	0x9c
 2607 0509 96050000 		.4byte	0x596
 2608 050d 10       		.uleb128 0x10
 2609 050e 17020000 		.4byte	.LASF38
 2610 0512 01       		.byte	0x1
 2611 0513 8304     		.2byte	0x483
 2612 0515 6B000000 		.4byte	0x6b
 2613 0519 1D020000 		.4byte	.LLST16
 2614 051d 10       		.uleb128 0x10
 2615 051e B8030000 		.4byte	.LASF52
 2616 0522 01       		.byte	0x1
 2617 0523 8304     		.2byte	0x483
 2618 0525 6B000000 		.4byte	0x6b
 2619 0529 3E020000 		.4byte	.LLST17
 2620 052d 11       		.uleb128 0x11
 2621 052e 6D010000 		.4byte	.LASF27
 2622 0532 01       		.byte	0x1
 2623 0533 8504     		.2byte	0x485
 2624 0535 6B000000 		.4byte	0x6b
 2625 0539 5F020000 		.4byte	.LLST18
 2626 053d 11       		.uleb128 0x11
 2627 053e F3010000 		.4byte	.LASF53
 2628 0542 01       		.byte	0x1
 2629 0543 8604     		.2byte	0x486
 2630 0545 81000000 		.4byte	0x81
 2631 0549 72020000 		.4byte	.LLST19
 2632 054d 11       		.uleb128 0x11
 2633 054e 77020000 		.4byte	.LASF54
 2634 0552 01       		.byte	0x1
 2635 0553 8704     		.2byte	0x487
 2636 0555 81000000 		.4byte	0x81
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 83


 2637 0559 85020000 		.4byte	.LLST20
 2638 055d 1A       		.uleb128 0x1a
 2639 055e 10000000 		.4byte	.LVL47
 2640 0562 68030000 		.4byte	0x368
 2641 0566 70050000 		.4byte	0x570
 2642 056a 19       		.uleb128 0x19
 2643 056b 01       		.uleb128 0x1
 2644 056c 50       		.byte	0x50
 2645 056d 01       		.uleb128 0x1
 2646 056e 30       		.byte	0x30
 2647 056f 00       		.byte	0
 2648 0570 1A       		.uleb128 0x1a
 2649 0571 1A000000 		.4byte	.LVL48
 2650 0575 68030000 		.4byte	0x368
 2651 0579 83050000 		.4byte	0x583
 2652 057d 19       		.uleb128 0x19
 2653 057e 01       		.uleb128 0x1
 2654 057f 50       		.byte	0x50
 2655 0580 01       		.uleb128 0x1
 2656 0581 30       		.byte	0x30
 2657 0582 00       		.byte	0
 2658 0583 0E       		.uleb128 0xe
 2659 0584 26000000 		.4byte	.LVL50
 2660 0588 1E0B0000 		.4byte	0xb1e
 2661 058c 0E       		.uleb128 0xe
 2662 058d 42000000 		.4byte	.LVL55
 2663 0591 290B0000 		.4byte	0xb29
 2664 0595 00       		.byte	0
 2665 0596 14       		.uleb128 0x14
 2666 0597 4B020000 		.4byte	.LASF55
 2667 059b 01       		.byte	0x1
 2668 059c A704     		.2byte	0x4a7
 2669 059e 6B000000 		.4byte	0x6b
 2670 05a2 00000000 		.4byte	.LFB21
 2671 05a6 2C000000 		.4byte	.LFE21-.LFB21
 2672 05aa 01       		.uleb128 0x1
 2673 05ab 9C       		.byte	0x9c
 2674 05ac E0050000 		.4byte	0x5e0
 2675 05b0 10       		.uleb128 0x10
 2676 05b1 17020000 		.4byte	.LASF38
 2677 05b5 01       		.byte	0x1
 2678 05b6 A704     		.2byte	0x4a7
 2679 05b8 6B000000 		.4byte	0x6b
 2680 05bc A3020000 		.4byte	.LLST21
 2681 05c0 11       		.uleb128 0x11
 2682 05c1 B8030000 		.4byte	.LASF52
 2683 05c5 01       		.byte	0x1
 2684 05c6 A904     		.2byte	0x4a9
 2685 05c8 6B000000 		.4byte	0x6b
 2686 05cc C4020000 		.4byte	.LLST22
 2687 05d0 18       		.uleb128 0x18
 2688 05d1 0E000000 		.4byte	.LVL59
 2689 05d5 68030000 		.4byte	0x368
 2690 05d9 19       		.uleb128 0x19
 2691 05da 01       		.uleb128 0x1
 2692 05db 50       		.byte	0x50
 2693 05dc 01       		.uleb128 0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 84


 2694 05dd 30       		.byte	0x30
 2695 05de 00       		.byte	0
 2696 05df 00       		.byte	0
 2697 05e0 12       		.uleb128 0x12
 2698 05e1 0B010000 		.4byte	.LASF56
 2699 05e5 01       		.byte	0x1
 2700 05e6 4405     		.2byte	0x544
 2701 05e8 00000000 		.4byte	.LFB28
 2702 05ec 18000000 		.4byte	.LFE28-.LFB28
 2703 05f0 01       		.uleb128 0x1
 2704 05f1 9C       		.byte	0x9c
 2705 05f2 0F       		.uleb128 0xf
 2706 05f3 1A060000 		.4byte	.LASF57
 2707 05f7 01       		.byte	0x1
 2708 05f8 5D05     		.2byte	0x55d
 2709 05fa 00000000 		.4byte	.LFB29
 2710 05fe 30000000 		.4byte	.LFE29-.LFB29
 2711 0602 01       		.uleb128 0x1
 2712 0603 9C       		.byte	0x9c
 2713 0604 2B060000 		.4byte	0x62b
 2714 0608 10       		.uleb128 0x10
 2715 0609 DA040000 		.4byte	.LASF58
 2716 060d 01       		.byte	0x1
 2717 060e 5D05     		.2byte	0x55d
 2718 0610 81000000 		.4byte	0x81
 2719 0614 D7020000 		.4byte	.LLST23
 2720 0618 0E       		.uleb128 0xe
 2721 0619 12000000 		.4byte	.LVL64
 2722 061d 3A0B0000 		.4byte	0xb3a
 2723 0621 0E       		.uleb128 0xe
 2724 0622 24000000 		.4byte	.LVL66
 2725 0626 3A0B0000 		.4byte	0xb3a
 2726 062a 00       		.byte	0
 2727 062b 0D       		.uleb128 0xd
 2728 062c 32020000 		.4byte	.LASF59
 2729 0630 01       		.byte	0x1
 2730 0631 95       		.byte	0x95
 2731 0632 00000000 		.4byte	.LFB3
 2732 0636 BC000000 		.4byte	.LFE3-.LFB3
 2733 063a 01       		.uleb128 0x1
 2734 063b 9C       		.byte	0x9c
 2735 063c D4060000 		.4byte	0x6d4
 2736 0640 1B       		.uleb128 0x1b
 2737 0641 6900     		.ascii	"i\000"
 2738 0643 01       		.byte	0x1
 2739 0644 97       		.byte	0x97
 2740 0645 81000000 		.4byte	0x81
 2741 0649 F5020000 		.4byte	.LLST24
 2742 064d 1C       		.uleb128 0x1c
 2743 064e 5C010000 		.4byte	.LASF60
 2744 0652 01       		.byte	0x1
 2745 0653 98       		.byte	0x98
 2746 0654 81000000 		.4byte	0x81
 2747 0658 14030000 		.4byte	.LLST25
 2748 065c 1C       		.uleb128 0x1c
 2749 065d 6D010000 		.4byte	.LASF27
 2750 0661 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 85


 2751 0662 99       		.byte	0x99
 2752 0663 6B000000 		.4byte	0x6b
 2753 0667 4A030000 		.4byte	.LLST26
 2754 066b 1C       		.uleb128 0x1c
 2755 066c 69030000 		.4byte	.LASF61
 2756 0670 01       		.byte	0x1
 2757 0671 9A       		.byte	0x9a
 2758 0672 81000000 		.4byte	0x81
 2759 0676 68030000 		.4byte	.LLST27
 2760 067a 1D       		.uleb128 0x1d
 2761 067b 0E060000 		.4byte	.LASF62
 2762 067f 01       		.byte	0x1
 2763 0680 9B       		.byte	0x9b
 2764 0681 BE000000 		.4byte	0xbe
 2765 0685 02       		.uleb128 0x2
 2766 0686 91       		.byte	0x91
 2767 0687 64       		.sleb128 -28
 2768 0688 0E       		.uleb128 0xe
 2769 0689 08000000 		.4byte	.LVL69
 2770 068d 4B0B0000 		.4byte	0xb4b
 2771 0691 0E       		.uleb128 0xe
 2772 0692 10000000 		.4byte	.LVL70
 2773 0696 1E0B0000 		.4byte	0xb1e
 2774 069a 1A       		.uleb128 0x1a
 2775 069b 78000000 		.4byte	.LVL85
 2776 069f 560B0000 		.4byte	0xb56
 2777 06a3 AE060000 		.4byte	0x6ae
 2778 06a7 19       		.uleb128 0x19
 2779 06a8 01       		.uleb128 0x1
 2780 06a9 50       		.byte	0x50
 2781 06aa 02       		.uleb128 0x2
 2782 06ab 08       		.byte	0x8
 2783 06ac 30       		.byte	0x30
 2784 06ad 00       		.byte	0
 2785 06ae 1A       		.uleb128 0x1a
 2786 06af 8C000000 		.4byte	.LVL86
 2787 06b3 F2050000 		.4byte	0x5f2
 2788 06b7 C3060000 		.4byte	0x6c3
 2789 06bb 19       		.uleb128 0x19
 2790 06bc 01       		.uleb128 0x1
 2791 06bd 50       		.byte	0x50
 2792 06be 03       		.uleb128 0x3
 2793 06bf 0A       		.byte	0xa
 2794 06c0 4001     		.2byte	0x140
 2795 06c2 00       		.byte	0
 2796 06c3 18       		.uleb128 0x18
 2797 06c4 96000000 		.4byte	.LVL87
 2798 06c8 290B0000 		.4byte	0xb29
 2799 06cc 19       		.uleb128 0x19
 2800 06cd 01       		.uleb128 0x1
 2801 06ce 50       		.byte	0x50
 2802 06cf 02       		.uleb128 0x2
 2803 06d0 77       		.byte	0x77
 2804 06d1 00       		.sleb128 0
 2805 06d2 00       		.byte	0
 2806 06d3 00       		.byte	0
 2807 06d4 0F       		.uleb128 0xf
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 86


 2808 06d5 C1030000 		.4byte	.LASF63
 2809 06d9 01       		.byte	0x1
 2810 06da 8601     		.2byte	0x186
 2811 06dc 00000000 		.4byte	.LFB8
 2812 06e0 80000000 		.4byte	.LFE8-.LFB8
 2813 06e4 01       		.uleb128 0x1
 2814 06e5 9C       		.byte	0x9c
 2815 06e6 6D070000 		.4byte	0x76d
 2816 06ea 10       		.uleb128 0x10
 2817 06eb 5C010000 		.4byte	.LASF60
 2818 06ef 01       		.byte	0x1
 2819 06f0 8601     		.2byte	0x186
 2820 06f2 81000000 		.4byte	0x81
 2821 06f6 87030000 		.4byte	.LLST28
 2822 06fa 15       		.uleb128 0x15
 2823 06fb E0000000 		.4byte	.LASF64
 2824 06ff 01       		.byte	0x1
 2825 0700 8901     		.2byte	0x189
 2826 0702 7D070000 		.4byte	0x77d
 2827 0706 02       		.uleb128 0x2
 2828 0707 91       		.byte	0x91
 2829 0708 68       		.sleb128 -24
 2830 0709 15       		.uleb128 0x15
 2831 070a C3010000 		.4byte	.LASF65
 2832 070e 01       		.byte	0x1
 2833 070f 8A01     		.2byte	0x18a
 2834 0711 82070000 		.4byte	0x782
 2835 0715 02       		.uleb128 0x2
 2836 0716 91       		.byte	0x91
 2837 0717 58       		.sleb128 -40
 2838 0718 11       		.uleb128 0x11
 2839 0719 A5010000 		.4byte	.LASF66
 2840 071d 01       		.byte	0x1
 2841 071e 9301     		.2byte	0x193
 2842 0720 81000000 		.4byte	0x81
 2843 0724 C0030000 		.4byte	.LLST29
 2844 0728 11       		.uleb128 0x11
 2845 0729 6D010000 		.4byte	.LASF27
 2846 072d 01       		.byte	0x1
 2847 072e 9601     		.2byte	0x196
 2848 0730 6B000000 		.4byte	0x6b
 2849 0734 F7030000 		.4byte	.LLST30
 2850 0738 0E       		.uleb128 0xe
 2851 0739 0A000000 		.4byte	.LVL90
 2852 073d 1E0B0000 		.4byte	0xb1e
 2853 0741 0E       		.uleb128 0xe
 2854 0742 10000000 		.4byte	.LVL92
 2855 0746 F8000000 		.4byte	0xf8
 2856 074a 0E       		.uleb128 0xe
 2857 074b 18000000 		.4byte	.LVL94
 2858 074f 1E010000 		.4byte	0x11e
 2859 0753 0E       		.uleb128 0xe
 2860 0754 56000000 		.4byte	.LVL98
 2861 0758 2B060000 		.4byte	0x62b
 2862 075c 18       		.uleb128 0x18
 2863 075d 5C000000 		.4byte	.LVL99
 2864 0761 290B0000 		.4byte	0xb29
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 87


 2865 0765 19       		.uleb128 0x19
 2866 0766 01       		.uleb128 0x1
 2867 0767 50       		.byte	0x50
 2868 0768 02       		.uleb128 0x2
 2869 0769 74       		.byte	0x74
 2870 076a 00       		.sleb128 0
 2871 076b 00       		.byte	0
 2872 076c 00       		.byte	0
 2873 076d 09       		.uleb128 0x9
 2874 076e 81000000 		.4byte	0x81
 2875 0772 7D070000 		.4byte	0x77d
 2876 0776 0A       		.uleb128 0xa
 2877 0777 D6000000 		.4byte	0xd6
 2878 077b 01       		.byte	0x1
 2879 077c 00       		.byte	0
 2880 077d 06       		.uleb128 0x6
 2881 077e 6D070000 		.4byte	0x76d
 2882 0782 06       		.uleb128 0x6
 2883 0783 E8000000 		.4byte	0xe8
 2884 0787 0F       		.uleb128 0xf
 2885 0788 E2010000 		.4byte	.LASF67
 2886 078c 01       		.byte	0x1
 2887 078d 7905     		.2byte	0x579
 2888 078f 00000000 		.4byte	.LFB30
 2889 0793 14000000 		.4byte	.LFE30-.LFB30
 2890 0797 01       		.uleb128 0x1
 2891 0798 9C       		.byte	0x9c
 2892 0799 B7070000 		.4byte	0x7b7
 2893 079d 10       		.uleb128 0x10
 2894 079e A1060000 		.4byte	.LASF68
 2895 07a2 01       		.byte	0x1
 2896 07a3 7905     		.2byte	0x579
 2897 07a5 76000000 		.4byte	0x76
 2898 07a9 15040000 		.4byte	.LLST31
 2899 07ad 0E       		.uleb128 0xe
 2900 07ae 0C000000 		.4byte	.LVL104
 2901 07b2 3A0B0000 		.4byte	0xb3a
 2902 07b6 00       		.byte	0
 2903 07b7 0F       		.uleb128 0xf
 2904 07b8 23020000 		.4byte	.LASF69
 2905 07bc 01       		.byte	0x1
 2906 07bd 5003     		.2byte	0x350
 2907 07bf 00000000 		.4byte	.LFB9
 2908 07c3 40000000 		.4byte	.LFE9-.LFB9
 2909 07c7 01       		.uleb128 0x1
 2910 07c8 9C       		.byte	0x9c
 2911 07c9 FC070000 		.4byte	0x7fc
 2912 07cd 10       		.uleb128 0x10
 2913 07ce FA040000 		.4byte	.LASF70
 2914 07d2 01       		.byte	0x1
 2915 07d3 5003     		.2byte	0x350
 2916 07d5 81000000 		.4byte	0x81
 2917 07d9 36040000 		.4byte	.LLST32
 2918 07dd 1A       		.uleb128 0x1a
 2919 07de 2C000000 		.4byte	.LVL107
 2920 07e2 87070000 		.4byte	0x787
 2921 07e6 F2070000 		.4byte	0x7f2
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 88


 2922 07ea 19       		.uleb128 0x19
 2923 07eb 01       		.uleb128 0x1
 2924 07ec 50       		.byte	0x50
 2925 07ed 03       		.uleb128 0x3
 2926 07ee 0A       		.byte	0xa
 2927 07ef E803     		.2byte	0x3e8
 2928 07f1 00       		.byte	0
 2929 07f2 0E       		.uleb128 0xe
 2930 07f3 30000000 		.4byte	.LVL108
 2931 07f7 08020000 		.4byte	0x208
 2932 07fb 00       		.byte	0
 2933 07fc 1E       		.uleb128 0x1e
 2934 07fd 61010000 		.4byte	.LASF71
 2935 0801 01       		.byte	0x1
 2936 0802 8C05     		.2byte	0x58c
 2937 0804 00000000 		.4byte	.LFB31
 2938 0808 4C000000 		.4byte	.LFE31-.LFB31
 2939 080c 01       		.uleb128 0x1
 2940 080d 9C       		.byte	0x9c
 2941 080e 23080000 		.4byte	0x823
 2942 0812 10       		.uleb128 0x10
 2943 0813 5C010000 		.4byte	.LASF60
 2944 0817 01       		.byte	0x1
 2945 0818 8C05     		.2byte	0x58c
 2946 081a 81000000 		.4byte	0x81
 2947 081e 57040000 		.4byte	.LLST33
 2948 0822 00       		.byte	0
 2949 0823 12       		.uleb128 0x12
 2950 0824 62060000 		.4byte	.LASF72
 2951 0828 01       		.byte	0x1
 2952 0829 0F06     		.2byte	0x60f
 2953 082b 00000000 		.4byte	.LFB35
 2954 082f 10000000 		.4byte	.LFE35-.LFB35
 2955 0833 01       		.uleb128 0x1
 2956 0834 9C       		.byte	0x9c
 2957 0835 12       		.uleb128 0x12
 2958 0836 1B010000 		.4byte	.LASF73
 2959 083a 01       		.byte	0x1
 2960 083b 2606     		.2byte	0x626
 2961 083d 00000000 		.4byte	.LFB36
 2962 0841 10000000 		.4byte	.LFE36-.LFB36
 2963 0845 01       		.uleb128 0x1
 2964 0846 9C       		.byte	0x9c
 2965 0847 0F       		.uleb128 0xf
 2966 0848 FE050000 		.4byte	.LASF74
 2967 084c 01       		.byte	0x1
 2968 084d F705     		.2byte	0x5f7
 2969 084f 00000000 		.4byte	.LFB34
 2970 0853 18000000 		.4byte	.LFE34-.LFB34
 2971 0857 01       		.uleb128 0x1
 2972 0858 9C       		.byte	0x9c
 2973 0859 67080000 		.4byte	0x867
 2974 085d 0E       		.uleb128 0xe
 2975 085e 06000000 		.4byte	.LVL113
 2976 0862 35080000 		.4byte	0x835
 2977 0866 00       		.byte	0
 2978 0867 12       		.uleb128 0x12
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 89


 2979 0868 22060000 		.4byte	.LASF75
 2980 086c 01       		.byte	0x1
 2981 086d 3D06     		.2byte	0x63d
 2982 086f 00000000 		.4byte	.LFB37
 2983 0873 10000000 		.4byte	.LFE37-.LFB37
 2984 0877 01       		.uleb128 0x1
 2985 0878 9C       		.byte	0x9c
 2986 0879 0F       		.uleb128 0xf
 2987 087a AE060000 		.4byte	.LASF76
 2988 087e 01       		.byte	0x1
 2989 087f 5306     		.2byte	0x653
 2990 0881 00000000 		.4byte	.LFB38
 2991 0885 10000000 		.4byte	.LFE38-.LFB38
 2992 0889 01       		.uleb128 0x1
 2993 088a 9C       		.byte	0x9c
 2994 088b A0080000 		.4byte	0x8a0
 2995 088f 10       		.uleb128 0x10
 2996 0890 77020000 		.4byte	.LASF54
 2997 0894 01       		.byte	0x1
 2998 0895 5306     		.2byte	0x653
 2999 0897 81000000 		.4byte	0x81
 3000 089b 78040000 		.4byte	.LLST34
 3001 089f 00       		.byte	0
 3002 08a0 13       		.uleb128 0x13
 3003 08a1 7C010000 		.4byte	.LASF78
 3004 08a5 01       		.byte	0x1
 3005 08a6 6706     		.2byte	0x667
 3006 08a8 81000000 		.4byte	0x81
 3007 08ac 00000000 		.4byte	.LFB39
 3008 08b0 10000000 		.4byte	.LFE39-.LFB39
 3009 08b4 01       		.uleb128 0x1
 3010 08b5 9C       		.byte	0x9c
 3011 08b6 13       		.uleb128 0x13
 3012 08b7 6C040000 		.4byte	.LASF79
 3013 08bb 01       		.byte	0x1
 3014 08bc 7B06     		.2byte	0x67b
 3015 08be 81000000 		.4byte	0x81
 3016 08c2 00000000 		.4byte	.LFB40
 3017 08c6 10000000 		.4byte	.LFE40-.LFB40
 3018 08ca 01       		.uleb128 0x1
 3019 08cb 9C       		.byte	0x9c
 3020 08cc 0F       		.uleb128 0xf
 3021 08cd 70030000 		.4byte	.LASF80
 3022 08d1 01       		.byte	0x1
 3023 08d2 9B06     		.2byte	0x69b
 3024 08d4 00000000 		.4byte	.LFB41
 3025 08d8 20000000 		.4byte	.LFE41-.LFB41
 3026 08dc 01       		.uleb128 0x1
 3027 08dd 9C       		.byte	0x9c
 3028 08de F1080000 		.4byte	0x8f1
 3029 08e2 16       		.uleb128 0x16
 3030 08e3 7D020000 		.4byte	.LASF81
 3031 08e7 01       		.byte	0x1
 3032 08e8 9B06     		.2byte	0x69b
 3033 08ea 81000000 		.4byte	0x81
 3034 08ee 01       		.uleb128 0x1
 3035 08ef 50       		.byte	0x50
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 90


 3036 08f0 00       		.byte	0
 3037 08f1 13       		.uleb128 0x13
 3038 08f2 97020000 		.4byte	.LASF82
 3039 08f6 01       		.byte	0x1
 3040 08f7 BC06     		.2byte	0x6bc
 3041 08f9 81000000 		.4byte	0x81
 3042 08fd 00000000 		.4byte	.LFB42
 3043 0901 10000000 		.4byte	.LFE42-.LFB42
 3044 0905 01       		.uleb128 0x1
 3045 0906 9C       		.byte	0x9c
 3046 0907 1F       		.uleb128 0x1f
 3047 0908 C1060000 		.4byte	.LASF107
 3048 090c 01       		.byte	0x1
 3049 090d 2307     		.2byte	0x723
 3050 090f 00000000 		.4byte	.LFB46
 3051 0913 28000000 		.4byte	.LFE46-.LFB46
 3052 0917 01       		.uleb128 0x1
 3053 0918 9C       		.byte	0x9c
 3054 0919 35090000 		.4byte	0x935
 3055 091d 20       		.uleb128 0x20
 3056 091e 6900     		.ascii	"i\000"
 3057 0920 01       		.byte	0x1
 3058 0921 2507     		.2byte	0x725
 3059 0923 81000000 		.4byte	0x81
 3060 0927 99040000 		.4byte	.LLST35
 3061 092b 0E       		.uleb128 0xe
 3062 092c 06000000 		.4byte	.LVL117
 3063 0930 F1080000 		.4byte	0x8f1
 3064 0934 00       		.byte	0
 3065 0935 12       		.uleb128 0x12
 3066 0936 BA020000 		.4byte	.LASF83
 3067 093a 01       		.byte	0x1
 3068 093b D006     		.2byte	0x6d0
 3069 093d 00000000 		.4byte	.LFB43
 3070 0941 0C000000 		.4byte	.LFE43-.LFB43
 3071 0945 01       		.uleb128 0x1
 3072 0946 9C       		.byte	0x9c
 3073 0947 1E       		.uleb128 0x1e
 3074 0948 69020000 		.4byte	.LASF84
 3075 094c 01       		.byte	0x1
 3076 094d D105     		.2byte	0x5d1
 3077 094f 00000000 		.4byte	.LFB33
 3078 0953 4C000000 		.4byte	.LFE33-.LFB33
 3079 0957 01       		.uleb128 0x1
 3080 0958 9C       		.byte	0x9c
 3081 0959 BC090000 		.4byte	0x9bc
 3082 095d 20       		.uleb128 0x20
 3083 095e 6900     		.ascii	"i\000"
 3084 0960 01       		.byte	0x1
 3085 0961 D305     		.2byte	0x5d3
 3086 0963 81000000 		.4byte	0x81
 3087 0967 B7040000 		.4byte	.LLST36
 3088 096b 1A       		.uleb128 0x1a
 3089 096c 1C000000 		.4byte	.LVL127
 3090 0970 8D030000 		.4byte	0x38d
 3091 0974 87090000 		.4byte	0x987
 3092 0978 19       		.uleb128 0x19
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 91


 3093 0979 01       		.uleb128 0x1
 3094 097a 51       		.byte	0x51
 3095 097b 05       		.uleb128 0x5
 3096 097c 03       		.byte	0x3
 3097 097d 00000000 		.4byte	CySysTickServiceCallbacks
 3098 0981 19       		.uleb128 0x19
 3099 0982 01       		.uleb128 0x1
 3100 0983 50       		.byte	0x50
 3101 0984 01       		.uleb128 0x1
 3102 0985 3F       		.byte	0x3f
 3103 0986 00       		.byte	0
 3104 0987 1A       		.uleb128 0x1a
 3105 0988 22000000 		.4byte	.LVL128
 3106 098c CC080000 		.4byte	0x8cc
 3107 0990 9A090000 		.4byte	0x99a
 3108 0994 19       		.uleb128 0x19
 3109 0995 01       		.uleb128 0x1
 3110 0996 50       		.byte	0x50
 3111 0997 01       		.uleb128 0x1
 3112 0998 31       		.byte	0x31
 3113 0999 00       		.byte	0
 3114 099a 0E       		.uleb128 0xe
 3115 099b 32000000 		.4byte	.LVL130
 3116 099f 79080000 		.4byte	0x879
 3117 09a3 0E       		.uleb128 0xe
 3118 09a4 36000000 		.4byte	.LVL131
 3119 09a8 35090000 		.4byte	0x935
 3120 09ac 18       		.uleb128 0x18
 3121 09ad 3C000000 		.4byte	.LVL132
 3122 09b1 A1020000 		.4byte	0x2a1
 3123 09b5 19       		.uleb128 0x19
 3124 09b6 01       		.uleb128 0x1
 3125 09b7 50       		.byte	0x50
 3126 09b8 01       		.uleb128 0x1
 3127 09b9 3F       		.byte	0x3f
 3128 09ba 00       		.byte	0
 3129 09bb 00       		.byte	0
 3130 09bc 0F       		.uleb128 0xf
 3131 09bd 08040000 		.4byte	.LASF85
 3132 09c1 01       		.byte	0x1
 3133 09c2 AF05     		.2byte	0x5af
 3134 09c4 00000000 		.4byte	.LFB32
 3135 09c8 20000000 		.4byte	.LFE32-.LFB32
 3136 09cc 01       		.uleb128 0x1
 3137 09cd 9C       		.byte	0x9c
 3138 09ce E5090000 		.4byte	0x9e5
 3139 09d2 0E       		.uleb128 0xe
 3140 09d3 0E000000 		.4byte	.LVL133
 3141 09d7 47090000 		.4byte	0x947
 3142 09db 0E       		.uleb128 0xe
 3143 09dc 18000000 		.4byte	.LVL134
 3144 09e0 47080000 		.4byte	0x847
 3145 09e4 00       		.byte	0
 3146 09e5 14       		.uleb128 0x14
 3147 09e6 CD050000 		.4byte	.LASF86
 3148 09ea 01       		.byte	0x1
 3149 09eb F506     		.2byte	0x6f5
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 92


 3150 09ed DD000000 		.4byte	0xdd
 3151 09f1 00000000 		.4byte	.LFB44
 3152 09f5 10000000 		.4byte	.LFE44-.LFB44
 3153 09f9 01       		.uleb128 0x1
 3154 09fa 9C       		.byte	0x9c
 3155 09fb 2C0A0000 		.4byte	0xa2c
 3156 09ff 10       		.uleb128 0x10
 3157 0a00 17020000 		.4byte	.LASF38
 3158 0a04 01       		.byte	0x1
 3159 0a05 F506     		.2byte	0x6f5
 3160 0a07 81000000 		.4byte	0x81
 3161 0a0b D6040000 		.4byte	.LLST37
 3162 0a0f 16       		.uleb128 0x16
 3163 0a10 52040000 		.4byte	.LASF87
 3164 0a14 01       		.byte	0x1
 3165 0a15 F506     		.2byte	0x6f5
 3166 0a17 DD000000 		.4byte	0xdd
 3167 0a1b 01       		.uleb128 0x1
 3168 0a1c 51       		.byte	0x51
 3169 0a1d 15       		.uleb128 0x15
 3170 0a1e 4B040000 		.4byte	.LASF88
 3171 0a22 01       		.byte	0x1
 3172 0a23 F706     		.2byte	0x6f7
 3173 0a25 DD000000 		.4byte	0xdd
 3174 0a29 01       		.uleb128 0x1
 3175 0a2a 50       		.byte	0x50
 3176 0a2b 00       		.byte	0
 3177 0a2c 14       		.uleb128 0x14
 3178 0a2d 2D030000 		.4byte	.LASF89
 3179 0a31 01       		.byte	0x1
 3180 0a32 0F07     		.2byte	0x70f
 3181 0a34 DD000000 		.4byte	0xdd
 3182 0a38 00000000 		.4byte	.LFB45
 3183 0a3c 0C000000 		.4byte	.LFE45-.LFB45
 3184 0a40 01       		.uleb128 0x1
 3185 0a41 9C       		.byte	0x9c
 3186 0a42 570A0000 		.4byte	0xa57
 3187 0a46 10       		.uleb128 0x10
 3188 0a47 17020000 		.4byte	.LASF38
 3189 0a4b 01       		.byte	0x1
 3190 0a4c 0F07     		.2byte	0x70f
 3191 0a4e 81000000 		.4byte	0x81
 3192 0a52 F7040000 		.4byte	.LLST38
 3193 0a56 00       		.byte	0
 3194 0a57 0F       		.uleb128 0xf
 3195 0a58 89020000 		.4byte	.LASF90
 3196 0a5c 01       		.byte	0x1
 3197 0a5d 4807     		.2byte	0x748
 3198 0a5f 00000000 		.4byte	.LFB47
 3199 0a63 70000000 		.4byte	.LFE47-.LFB47
 3200 0a67 01       		.uleb128 0x1
 3201 0a68 9C       		.byte	0x9c
 3202 0a69 7C0A0000 		.4byte	0xa7c
 3203 0a6d 16       		.uleb128 0x16
 3204 0a6e F5050000 		.4byte	.LASF91
 3205 0a72 01       		.byte	0x1
 3206 0a73 4807     		.2byte	0x748
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 93


 3207 0a75 7C0A0000 		.4byte	0xa7c
 3208 0a79 01       		.uleb128 0x1
 3209 0a7a 50       		.byte	0x50
 3210 0a7b 00       		.byte	0
 3211 0a7c 07       		.uleb128 0x7
 3212 0a7d 04       		.byte	0x4
 3213 0a7e 81000000 		.4byte	0x81
 3214 0a82 09       		.uleb128 0x9
 3215 0a83 DD000000 		.4byte	0xdd
 3216 0a87 920A0000 		.4byte	0xa92
 3217 0a8b 0A       		.uleb128 0xa
 3218 0a8c D6000000 		.4byte	0xd6
 3219 0a90 04       		.byte	0x4
 3220 0a91 00       		.byte	0
 3221 0a92 1D       		.uleb128 0x1d
 3222 0a93 E2050000 		.4byte	.LASF92
 3223 0a97 01       		.byte	0x1
 3224 0a98 22       		.byte	0x22
 3225 0a99 820A0000 		.4byte	0xa82
 3226 0a9d 05       		.uleb128 0x5
 3227 0a9e 03       		.byte	0x3
 3228 0a9f 00000000 		.4byte	CySysTickCallbacks
 3229 0aa3 21       		.uleb128 0x21
 3230 0aa4 20040000 		.4byte	.LASF93
 3231 0aa8 01       		.byte	0x1
 3232 0aa9 34       		.byte	0x34
 3233 0aaa 81000000 		.4byte	0x81
 3234 0aae 05       		.uleb128 0x5
 3235 0aaf 03       		.byte	0x3
 3236 0ab0 00000000 		.4byte	CySysTickInitVar
 3237 0ab4 21       		.uleb128 0x21
 3238 0ab5 7E040000 		.4byte	.LASF94
 3239 0ab9 01       		.byte	0x1
 3240 0aba 1B       		.byte	0x1b
 3241 0abb 81000000 		.4byte	0x81
 3242 0abf 05       		.uleb128 0x5
 3243 0ac0 03       		.byte	0x3
 3244 0ac1 00000000 		.4byte	cydelayFreqHz
 3245 0ac5 21       		.uleb128 0x21
 3246 0ac6 D3010000 		.4byte	.LASF95
 3247 0aca 01       		.byte	0x1
 3248 0acb 1C       		.byte	0x1c
 3249 0acc 81000000 		.4byte	0x81
 3250 0ad0 05       		.uleb128 0x5
 3251 0ad1 03       		.byte	0x3
 3252 0ad2 00000000 		.4byte	cydelayFreqKhz
 3253 0ad6 21       		.uleb128 0x21
 3254 0ad7 4C060000 		.4byte	.LASF96
 3255 0adb 01       		.byte	0x1
 3256 0adc 1D       		.byte	0x1d
 3257 0add 6B000000 		.4byte	0x6b
 3258 0ae1 05       		.uleb128 0x5
 3259 0ae2 03       		.byte	0x3
 3260 0ae3 00000000 		.4byte	cydelayFreqMhz
 3261 0ae7 21       		.uleb128 0x21
 3262 0ae8 5C020000 		.4byte	.LASF97
 3263 0aec 01       		.byte	0x1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 94


 3264 0aed 1E       		.byte	0x1e
 3265 0aee 81000000 		.4byte	0x81
 3266 0af2 05       		.uleb128 0x5
 3267 0af3 03       		.byte	0x3
 3268 0af4 00000000 		.4byte	cydelay32kMs
 3269 0af8 09       		.uleb128 0x9
 3270 0af9 6B000000 		.4byte	0x6b
 3271 0afd 080B0000 		.4byte	0xb08
 3272 0b01 0A       		.uleb128 0xa
 3273 0b02 D6000000 		.4byte	0xd6
 3274 0b06 2D       		.byte	0x2d
 3275 0b07 00       		.byte	0
 3276 0b08 21       		.uleb128 0x21
 3277 0b09 5B040000 		.4byte	.LASF98
 3278 0b0d 01       		.byte	0x1
 3279 0b0e 39       		.byte	0x39
 3280 0b0f 190B0000 		.4byte	0xb19
 3281 0b13 05       		.uleb128 0x5
 3282 0b14 03       		.byte	0x3
 3283 0b15 00000000 		.4byte	cyImoFreqMhz2Reg
 3284 0b19 22       		.uleb128 0x22
 3285 0b1a F80A0000 		.4byte	0xaf8
 3286 0b1e 23       		.uleb128 0x23
 3287 0b1f 06030000 		.4byte	.LASF101
 3288 0b23 03       		.byte	0x3
 3289 0b24 5E       		.byte	0x5e
 3290 0b25 6B000000 		.4byte	0x6b
 3291 0b29 24       		.uleb128 0x24
 3292 0b2a A3040000 		.4byte	.LASF99
 3293 0b2e 03       		.byte	0x3
 3294 0b2f 5F       		.byte	0x5f
 3295 0b30 3A0B0000 		.4byte	0xb3a
 3296 0b34 25       		.uleb128 0x25
 3297 0b35 6B000000 		.4byte	0x6b
 3298 0b39 00       		.byte	0
 3299 0b3a 24       		.uleb128 0x24
 3300 0b3b E7040000 		.4byte	.LASF100
 3301 0b3f 03       		.byte	0x3
 3302 0b40 5A       		.byte	0x5a
 3303 0b41 4B0B0000 		.4byte	0xb4b
 3304 0b45 25       		.uleb128 0x25
 3305 0b46 81000000 		.4byte	0x81
 3306 0b4a 00       		.byte	0
 3307 0b4b 23       		.uleb128 0x23
 3308 0b4c F8000000 		.4byte	.LASF102
 3309 0b50 04       		.byte	0x4
 3310 0b51 2A       		.byte	0x2a
 3311 0b52 81000000 		.4byte	0x81
 3312 0b56 26       		.uleb128 0x26
 3313 0b57 89060000 		.4byte	.LASF108
 3314 0b5b 05       		.byte	0x5
 3315 0b5c 1D       		.byte	0x1d
 3316 0b5d 25       		.uleb128 0x25
 3317 0b5e 81000000 		.4byte	0x81
 3318 0b62 00       		.byte	0
 3319 0b63 00       		.byte	0
 3320              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 95


 3321              	.Ldebug_abbrev0:
 3322 0000 01       		.uleb128 0x1
 3323 0001 11       		.uleb128 0x11
 3324 0002 01       		.byte	0x1
 3325 0003 25       		.uleb128 0x25
 3326 0004 0E       		.uleb128 0xe
 3327 0005 13       		.uleb128 0x13
 3328 0006 0B       		.uleb128 0xb
 3329 0007 03       		.uleb128 0x3
 3330 0008 0E       		.uleb128 0xe
 3331 0009 1B       		.uleb128 0x1b
 3332 000a 0E       		.uleb128 0xe
 3333 000b 55       		.uleb128 0x55
 3334 000c 17       		.uleb128 0x17
 3335 000d 11       		.uleb128 0x11
 3336 000e 01       		.uleb128 0x1
 3337 000f 10       		.uleb128 0x10
 3338 0010 17       		.uleb128 0x17
 3339 0011 00       		.byte	0
 3340 0012 00       		.byte	0
 3341 0013 02       		.uleb128 0x2
 3342 0014 24       		.uleb128 0x24
 3343 0015 00       		.byte	0
 3344 0016 0B       		.uleb128 0xb
 3345 0017 0B       		.uleb128 0xb
 3346 0018 3E       		.uleb128 0x3e
 3347 0019 0B       		.uleb128 0xb
 3348 001a 03       		.uleb128 0x3
 3349 001b 0E       		.uleb128 0xe
 3350 001c 00       		.byte	0
 3351 001d 00       		.byte	0
 3352 001e 03       		.uleb128 0x3
 3353 001f 24       		.uleb128 0x24
 3354 0020 00       		.byte	0
 3355 0021 0B       		.uleb128 0xb
 3356 0022 0B       		.uleb128 0xb
 3357 0023 3E       		.uleb128 0x3e
 3358 0024 0B       		.uleb128 0xb
 3359 0025 03       		.uleb128 0x3
 3360 0026 08       		.uleb128 0x8
 3361 0027 00       		.byte	0
 3362 0028 00       		.byte	0
 3363 0029 04       		.uleb128 0x4
 3364 002a 16       		.uleb128 0x16
 3365 002b 00       		.byte	0
 3366 002c 03       		.uleb128 0x3
 3367 002d 0E       		.uleb128 0xe
 3368 002e 3A       		.uleb128 0x3a
 3369 002f 0B       		.uleb128 0xb
 3370 0030 3B       		.uleb128 0x3b
 3371 0031 0B       		.uleb128 0xb
 3372 0032 49       		.uleb128 0x49
 3373 0033 13       		.uleb128 0x13
 3374 0034 00       		.byte	0
 3375 0035 00       		.byte	0
 3376 0036 05       		.uleb128 0x5
 3377 0037 16       		.uleb128 0x16
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 96


 3378 0038 00       		.byte	0
 3379 0039 03       		.uleb128 0x3
 3380 003a 0E       		.uleb128 0xe
 3381 003b 3A       		.uleb128 0x3a
 3382 003c 0B       		.uleb128 0xb
 3383 003d 3B       		.uleb128 0x3b
 3384 003e 05       		.uleb128 0x5
 3385 003f 49       		.uleb128 0x49
 3386 0040 13       		.uleb128 0x13
 3387 0041 00       		.byte	0
 3388 0042 00       		.byte	0
 3389 0043 06       		.uleb128 0x6
 3390 0044 35       		.uleb128 0x35
 3391 0045 00       		.byte	0
 3392 0046 49       		.uleb128 0x49
 3393 0047 13       		.uleb128 0x13
 3394 0048 00       		.byte	0
 3395 0049 00       		.byte	0
 3396 004a 07       		.uleb128 0x7
 3397 004b 0F       		.uleb128 0xf
 3398 004c 00       		.byte	0
 3399 004d 0B       		.uleb128 0xb
 3400 004e 0B       		.uleb128 0xb
 3401 004f 49       		.uleb128 0x49
 3402 0050 13       		.uleb128 0x13
 3403 0051 00       		.byte	0
 3404 0052 00       		.byte	0
 3405 0053 08       		.uleb128 0x8
 3406 0054 15       		.uleb128 0x15
 3407 0055 00       		.byte	0
 3408 0056 27       		.uleb128 0x27
 3409 0057 19       		.uleb128 0x19
 3410 0058 00       		.byte	0
 3411 0059 00       		.byte	0
 3412 005a 09       		.uleb128 0x9
 3413 005b 01       		.uleb128 0x1
 3414 005c 01       		.byte	0x1
 3415 005d 49       		.uleb128 0x49
 3416 005e 13       		.uleb128 0x13
 3417 005f 01       		.uleb128 0x1
 3418 0060 13       		.uleb128 0x13
 3419 0061 00       		.byte	0
 3420 0062 00       		.byte	0
 3421 0063 0A       		.uleb128 0xa
 3422 0064 21       		.uleb128 0x21
 3423 0065 00       		.byte	0
 3424 0066 49       		.uleb128 0x49
 3425 0067 13       		.uleb128 0x13
 3426 0068 2F       		.uleb128 0x2f
 3427 0069 0B       		.uleb128 0xb
 3428 006a 00       		.byte	0
 3429 006b 00       		.byte	0
 3430 006c 0B       		.uleb128 0xb
 3431 006d 2E       		.uleb128 0x2e
 3432 006e 00       		.byte	0
 3433 006f 03       		.uleb128 0x3
 3434 0070 0E       		.uleb128 0xe
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 97


 3435 0071 3A       		.uleb128 0x3a
 3436 0072 0B       		.uleb128 0xb
 3437 0073 3B       		.uleb128 0x3b
 3438 0074 0B       		.uleb128 0xb
 3439 0075 27       		.uleb128 0x27
 3440 0076 19       		.uleb128 0x19
 3441 0077 49       		.uleb128 0x49
 3442 0078 13       		.uleb128 0x13
 3443 0079 11       		.uleb128 0x11
 3444 007a 01       		.uleb128 0x1
 3445 007b 12       		.uleb128 0x12
 3446 007c 06       		.uleb128 0x6
 3447 007d 40       		.uleb128 0x40
 3448 007e 18       		.uleb128 0x18
 3449 007f 9742     		.uleb128 0x2117
 3450 0081 19       		.uleb128 0x19
 3451 0082 00       		.byte	0
 3452 0083 00       		.byte	0
 3453 0084 0C       		.uleb128 0xc
 3454 0085 2E       		.uleb128 0x2e
 3455 0086 00       		.byte	0
 3456 0087 3F       		.uleb128 0x3f
 3457 0088 19       		.uleb128 0x19
 3458 0089 03       		.uleb128 0x3
 3459 008a 0E       		.uleb128 0xe
 3460 008b 3A       		.uleb128 0x3a
 3461 008c 0B       		.uleb128 0xb
 3462 008d 3B       		.uleb128 0x3b
 3463 008e 0B       		.uleb128 0xb
 3464 008f 27       		.uleb128 0x27
 3465 0090 19       		.uleb128 0x19
 3466 0091 11       		.uleb128 0x11
 3467 0092 01       		.uleb128 0x1
 3468 0093 12       		.uleb128 0x12
 3469 0094 06       		.uleb128 0x6
 3470 0095 40       		.uleb128 0x40
 3471 0096 18       		.uleb128 0x18
 3472 0097 9742     		.uleb128 0x2117
 3473 0099 19       		.uleb128 0x19
 3474 009a 00       		.byte	0
 3475 009b 00       		.byte	0
 3476 009c 0D       		.uleb128 0xd
 3477 009d 2E       		.uleb128 0x2e
 3478 009e 01       		.byte	0x1
 3479 009f 3F       		.uleb128 0x3f
 3480 00a0 19       		.uleb128 0x19
 3481 00a1 03       		.uleb128 0x3
 3482 00a2 0E       		.uleb128 0xe
 3483 00a3 3A       		.uleb128 0x3a
 3484 00a4 0B       		.uleb128 0xb
 3485 00a5 3B       		.uleb128 0x3b
 3486 00a6 0B       		.uleb128 0xb
 3487 00a7 27       		.uleb128 0x27
 3488 00a8 19       		.uleb128 0x19
 3489 00a9 11       		.uleb128 0x11
 3490 00aa 01       		.uleb128 0x1
 3491 00ab 12       		.uleb128 0x12
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 98


 3492 00ac 06       		.uleb128 0x6
 3493 00ad 40       		.uleb128 0x40
 3494 00ae 18       		.uleb128 0x18
 3495 00af 9742     		.uleb128 0x2117
 3496 00b1 19       		.uleb128 0x19
 3497 00b2 01       		.uleb128 0x1
 3498 00b3 13       		.uleb128 0x13
 3499 00b4 00       		.byte	0
 3500 00b5 00       		.byte	0
 3501 00b6 0E       		.uleb128 0xe
 3502 00b7 898201   		.uleb128 0x4109
 3503 00ba 00       		.byte	0
 3504 00bb 11       		.uleb128 0x11
 3505 00bc 01       		.uleb128 0x1
 3506 00bd 31       		.uleb128 0x31
 3507 00be 13       		.uleb128 0x13
 3508 00bf 00       		.byte	0
 3509 00c0 00       		.byte	0
 3510 00c1 0F       		.uleb128 0xf
 3511 00c2 2E       		.uleb128 0x2e
 3512 00c3 01       		.byte	0x1
 3513 00c4 3F       		.uleb128 0x3f
 3514 00c5 19       		.uleb128 0x19
 3515 00c6 03       		.uleb128 0x3
 3516 00c7 0E       		.uleb128 0xe
 3517 00c8 3A       		.uleb128 0x3a
 3518 00c9 0B       		.uleb128 0xb
 3519 00ca 3B       		.uleb128 0x3b
 3520 00cb 05       		.uleb128 0x5
 3521 00cc 27       		.uleb128 0x27
 3522 00cd 19       		.uleb128 0x19
 3523 00ce 11       		.uleb128 0x11
 3524 00cf 01       		.uleb128 0x1
 3525 00d0 12       		.uleb128 0x12
 3526 00d1 06       		.uleb128 0x6
 3527 00d2 40       		.uleb128 0x40
 3528 00d3 18       		.uleb128 0x18
 3529 00d4 9742     		.uleb128 0x2117
 3530 00d6 19       		.uleb128 0x19
 3531 00d7 01       		.uleb128 0x1
 3532 00d8 13       		.uleb128 0x13
 3533 00d9 00       		.byte	0
 3534 00da 00       		.byte	0
 3535 00db 10       		.uleb128 0x10
 3536 00dc 05       		.uleb128 0x5
 3537 00dd 00       		.byte	0
 3538 00de 03       		.uleb128 0x3
 3539 00df 0E       		.uleb128 0xe
 3540 00e0 3A       		.uleb128 0x3a
 3541 00e1 0B       		.uleb128 0xb
 3542 00e2 3B       		.uleb128 0x3b
 3543 00e3 05       		.uleb128 0x5
 3544 00e4 49       		.uleb128 0x49
 3545 00e5 13       		.uleb128 0x13
 3546 00e6 02       		.uleb128 0x2
 3547 00e7 17       		.uleb128 0x17
 3548 00e8 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 99


 3549 00e9 00       		.byte	0
 3550 00ea 11       		.uleb128 0x11
 3551 00eb 34       		.uleb128 0x34
 3552 00ec 00       		.byte	0
 3553 00ed 03       		.uleb128 0x3
 3554 00ee 0E       		.uleb128 0xe
 3555 00ef 3A       		.uleb128 0x3a
 3556 00f0 0B       		.uleb128 0xb
 3557 00f1 3B       		.uleb128 0x3b
 3558 00f2 05       		.uleb128 0x5
 3559 00f3 49       		.uleb128 0x49
 3560 00f4 13       		.uleb128 0x13
 3561 00f5 02       		.uleb128 0x2
 3562 00f6 17       		.uleb128 0x17
 3563 00f7 00       		.byte	0
 3564 00f8 00       		.byte	0
 3565 00f9 12       		.uleb128 0x12
 3566 00fa 2E       		.uleb128 0x2e
 3567 00fb 00       		.byte	0
 3568 00fc 3F       		.uleb128 0x3f
 3569 00fd 19       		.uleb128 0x19
 3570 00fe 03       		.uleb128 0x3
 3571 00ff 0E       		.uleb128 0xe
 3572 0100 3A       		.uleb128 0x3a
 3573 0101 0B       		.uleb128 0xb
 3574 0102 3B       		.uleb128 0x3b
 3575 0103 05       		.uleb128 0x5
 3576 0104 27       		.uleb128 0x27
 3577 0105 19       		.uleb128 0x19
 3578 0106 11       		.uleb128 0x11
 3579 0107 01       		.uleb128 0x1
 3580 0108 12       		.uleb128 0x12
 3581 0109 06       		.uleb128 0x6
 3582 010a 40       		.uleb128 0x40
 3583 010b 18       		.uleb128 0x18
 3584 010c 9742     		.uleb128 0x2117
 3585 010e 19       		.uleb128 0x19
 3586 010f 00       		.byte	0
 3587 0110 00       		.byte	0
 3588 0111 13       		.uleb128 0x13
 3589 0112 2E       		.uleb128 0x2e
 3590 0113 00       		.byte	0
 3591 0114 3F       		.uleb128 0x3f
 3592 0115 19       		.uleb128 0x19
 3593 0116 03       		.uleb128 0x3
 3594 0117 0E       		.uleb128 0xe
 3595 0118 3A       		.uleb128 0x3a
 3596 0119 0B       		.uleb128 0xb
 3597 011a 3B       		.uleb128 0x3b
 3598 011b 05       		.uleb128 0x5
 3599 011c 27       		.uleb128 0x27
 3600 011d 19       		.uleb128 0x19
 3601 011e 49       		.uleb128 0x49
 3602 011f 13       		.uleb128 0x13
 3603 0120 11       		.uleb128 0x11
 3604 0121 01       		.uleb128 0x1
 3605 0122 12       		.uleb128 0x12
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 100


 3606 0123 06       		.uleb128 0x6
 3607 0124 40       		.uleb128 0x40
 3608 0125 18       		.uleb128 0x18
 3609 0126 9742     		.uleb128 0x2117
 3610 0128 19       		.uleb128 0x19
 3611 0129 00       		.byte	0
 3612 012a 00       		.byte	0
 3613 012b 14       		.uleb128 0x14
 3614 012c 2E       		.uleb128 0x2e
 3615 012d 01       		.byte	0x1
 3616 012e 3F       		.uleb128 0x3f
 3617 012f 19       		.uleb128 0x19
 3618 0130 03       		.uleb128 0x3
 3619 0131 0E       		.uleb128 0xe
 3620 0132 3A       		.uleb128 0x3a
 3621 0133 0B       		.uleb128 0xb
 3622 0134 3B       		.uleb128 0x3b
 3623 0135 05       		.uleb128 0x5
 3624 0136 27       		.uleb128 0x27
 3625 0137 19       		.uleb128 0x19
 3626 0138 49       		.uleb128 0x49
 3627 0139 13       		.uleb128 0x13
 3628 013a 11       		.uleb128 0x11
 3629 013b 01       		.uleb128 0x1
 3630 013c 12       		.uleb128 0x12
 3631 013d 06       		.uleb128 0x6
 3632 013e 40       		.uleb128 0x40
 3633 013f 18       		.uleb128 0x18
 3634 0140 9742     		.uleb128 0x2117
 3635 0142 19       		.uleb128 0x19
 3636 0143 01       		.uleb128 0x1
 3637 0144 13       		.uleb128 0x13
 3638 0145 00       		.byte	0
 3639 0146 00       		.byte	0
 3640 0147 15       		.uleb128 0x15
 3641 0148 34       		.uleb128 0x34
 3642 0149 00       		.byte	0
 3643 014a 03       		.uleb128 0x3
 3644 014b 0E       		.uleb128 0xe
 3645 014c 3A       		.uleb128 0x3a
 3646 014d 0B       		.uleb128 0xb
 3647 014e 3B       		.uleb128 0x3b
 3648 014f 05       		.uleb128 0x5
 3649 0150 49       		.uleb128 0x49
 3650 0151 13       		.uleb128 0x13
 3651 0152 02       		.uleb128 0x2
 3652 0153 18       		.uleb128 0x18
 3653 0154 00       		.byte	0
 3654 0155 00       		.byte	0
 3655 0156 16       		.uleb128 0x16
 3656 0157 05       		.uleb128 0x5
 3657 0158 00       		.byte	0
 3658 0159 03       		.uleb128 0x3
 3659 015a 0E       		.uleb128 0xe
 3660 015b 3A       		.uleb128 0x3a
 3661 015c 0B       		.uleb128 0xb
 3662 015d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 101


 3663 015e 05       		.uleb128 0x5
 3664 015f 49       		.uleb128 0x49
 3665 0160 13       		.uleb128 0x13
 3666 0161 02       		.uleb128 0x2
 3667 0162 18       		.uleb128 0x18
 3668 0163 00       		.byte	0
 3669 0164 00       		.byte	0
 3670 0165 17       		.uleb128 0x17
 3671 0166 34       		.uleb128 0x34
 3672 0167 00       		.byte	0
 3673 0168 03       		.uleb128 0x3
 3674 0169 0E       		.uleb128 0xe
 3675 016a 3A       		.uleb128 0x3a
 3676 016b 0B       		.uleb128 0xb
 3677 016c 3B       		.uleb128 0x3b
 3678 016d 05       		.uleb128 0x5
 3679 016e 49       		.uleb128 0x49
 3680 016f 13       		.uleb128 0x13
 3681 0170 1C       		.uleb128 0x1c
 3682 0171 06       		.uleb128 0x6
 3683 0172 00       		.byte	0
 3684 0173 00       		.byte	0
 3685 0174 18       		.uleb128 0x18
 3686 0175 898201   		.uleb128 0x4109
 3687 0178 01       		.byte	0x1
 3688 0179 11       		.uleb128 0x11
 3689 017a 01       		.uleb128 0x1
 3690 017b 31       		.uleb128 0x31
 3691 017c 13       		.uleb128 0x13
 3692 017d 00       		.byte	0
 3693 017e 00       		.byte	0
 3694 017f 19       		.uleb128 0x19
 3695 0180 8A8201   		.uleb128 0x410a
 3696 0183 00       		.byte	0
 3697 0184 02       		.uleb128 0x2
 3698 0185 18       		.uleb128 0x18
 3699 0186 9142     		.uleb128 0x2111
 3700 0188 18       		.uleb128 0x18
 3701 0189 00       		.byte	0
 3702 018a 00       		.byte	0
 3703 018b 1A       		.uleb128 0x1a
 3704 018c 898201   		.uleb128 0x4109
 3705 018f 01       		.byte	0x1
 3706 0190 11       		.uleb128 0x11
 3707 0191 01       		.uleb128 0x1
 3708 0192 31       		.uleb128 0x31
 3709 0193 13       		.uleb128 0x13
 3710 0194 01       		.uleb128 0x1
 3711 0195 13       		.uleb128 0x13
 3712 0196 00       		.byte	0
 3713 0197 00       		.byte	0
 3714 0198 1B       		.uleb128 0x1b
 3715 0199 34       		.uleb128 0x34
 3716 019a 00       		.byte	0
 3717 019b 03       		.uleb128 0x3
 3718 019c 08       		.uleb128 0x8
 3719 019d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 102


 3720 019e 0B       		.uleb128 0xb
 3721 019f 3B       		.uleb128 0x3b
 3722 01a0 0B       		.uleb128 0xb
 3723 01a1 49       		.uleb128 0x49
 3724 01a2 13       		.uleb128 0x13
 3725 01a3 02       		.uleb128 0x2
 3726 01a4 17       		.uleb128 0x17
 3727 01a5 00       		.byte	0
 3728 01a6 00       		.byte	0
 3729 01a7 1C       		.uleb128 0x1c
 3730 01a8 34       		.uleb128 0x34
 3731 01a9 00       		.byte	0
 3732 01aa 03       		.uleb128 0x3
 3733 01ab 0E       		.uleb128 0xe
 3734 01ac 3A       		.uleb128 0x3a
 3735 01ad 0B       		.uleb128 0xb
 3736 01ae 3B       		.uleb128 0x3b
 3737 01af 0B       		.uleb128 0xb
 3738 01b0 49       		.uleb128 0x49
 3739 01b1 13       		.uleb128 0x13
 3740 01b2 02       		.uleb128 0x2
 3741 01b3 17       		.uleb128 0x17
 3742 01b4 00       		.byte	0
 3743 01b5 00       		.byte	0
 3744 01b6 1D       		.uleb128 0x1d
 3745 01b7 34       		.uleb128 0x34
 3746 01b8 00       		.byte	0
 3747 01b9 03       		.uleb128 0x3
 3748 01ba 0E       		.uleb128 0xe
 3749 01bb 3A       		.uleb128 0x3a
 3750 01bc 0B       		.uleb128 0xb
 3751 01bd 3B       		.uleb128 0x3b
 3752 01be 0B       		.uleb128 0xb
 3753 01bf 49       		.uleb128 0x49
 3754 01c0 13       		.uleb128 0x13
 3755 01c1 02       		.uleb128 0x2
 3756 01c2 18       		.uleb128 0x18
 3757 01c3 00       		.byte	0
 3758 01c4 00       		.byte	0
 3759 01c5 1E       		.uleb128 0x1e
 3760 01c6 2E       		.uleb128 0x2e
 3761 01c7 01       		.byte	0x1
 3762 01c8 3F       		.uleb128 0x3f
 3763 01c9 19       		.uleb128 0x19
 3764 01ca 03       		.uleb128 0x3
 3765 01cb 0E       		.uleb128 0xe
 3766 01cc 3A       		.uleb128 0x3a
 3767 01cd 0B       		.uleb128 0xb
 3768 01ce 3B       		.uleb128 0x3b
 3769 01cf 05       		.uleb128 0x5
 3770 01d0 27       		.uleb128 0x27
 3771 01d1 19       		.uleb128 0x19
 3772 01d2 11       		.uleb128 0x11
 3773 01d3 01       		.uleb128 0x1
 3774 01d4 12       		.uleb128 0x12
 3775 01d5 06       		.uleb128 0x6
 3776 01d6 40       		.uleb128 0x40
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 103


 3777 01d7 18       		.uleb128 0x18
 3778 01d8 9642     		.uleb128 0x2116
 3779 01da 19       		.uleb128 0x19
 3780 01db 01       		.uleb128 0x1
 3781 01dc 13       		.uleb128 0x13
 3782 01dd 00       		.byte	0
 3783 01de 00       		.byte	0
 3784 01df 1F       		.uleb128 0x1f
 3785 01e0 2E       		.uleb128 0x2e
 3786 01e1 01       		.byte	0x1
 3787 01e2 03       		.uleb128 0x3
 3788 01e3 0E       		.uleb128 0xe
 3789 01e4 3A       		.uleb128 0x3a
 3790 01e5 0B       		.uleb128 0xb
 3791 01e6 3B       		.uleb128 0x3b
 3792 01e7 05       		.uleb128 0x5
 3793 01e8 27       		.uleb128 0x27
 3794 01e9 19       		.uleb128 0x19
 3795 01ea 11       		.uleb128 0x11
 3796 01eb 01       		.uleb128 0x1
 3797 01ec 12       		.uleb128 0x12
 3798 01ed 06       		.uleb128 0x6
 3799 01ee 40       		.uleb128 0x40
 3800 01ef 18       		.uleb128 0x18
 3801 01f0 9642     		.uleb128 0x2116
 3802 01f2 19       		.uleb128 0x19
 3803 01f3 01       		.uleb128 0x1
 3804 01f4 13       		.uleb128 0x13
 3805 01f5 00       		.byte	0
 3806 01f6 00       		.byte	0
 3807 01f7 20       		.uleb128 0x20
 3808 01f8 34       		.uleb128 0x34
 3809 01f9 00       		.byte	0
 3810 01fa 03       		.uleb128 0x3
 3811 01fb 08       		.uleb128 0x8
 3812 01fc 3A       		.uleb128 0x3a
 3813 01fd 0B       		.uleb128 0xb
 3814 01fe 3B       		.uleb128 0x3b
 3815 01ff 05       		.uleb128 0x5
 3816 0200 49       		.uleb128 0x49
 3817 0201 13       		.uleb128 0x13
 3818 0202 02       		.uleb128 0x2
 3819 0203 17       		.uleb128 0x17
 3820 0204 00       		.byte	0
 3821 0205 00       		.byte	0
 3822 0206 21       		.uleb128 0x21
 3823 0207 34       		.uleb128 0x34
 3824 0208 00       		.byte	0
 3825 0209 03       		.uleb128 0x3
 3826 020a 0E       		.uleb128 0xe
 3827 020b 3A       		.uleb128 0x3a
 3828 020c 0B       		.uleb128 0xb
 3829 020d 3B       		.uleb128 0x3b
 3830 020e 0B       		.uleb128 0xb
 3831 020f 49       		.uleb128 0x49
 3832 0210 13       		.uleb128 0x13
 3833 0211 3F       		.uleb128 0x3f
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 104


 3834 0212 19       		.uleb128 0x19
 3835 0213 02       		.uleb128 0x2
 3836 0214 18       		.uleb128 0x18
 3837 0215 00       		.byte	0
 3838 0216 00       		.byte	0
 3839 0217 22       		.uleb128 0x22
 3840 0218 26       		.uleb128 0x26
 3841 0219 00       		.byte	0
 3842 021a 49       		.uleb128 0x49
 3843 021b 13       		.uleb128 0x13
 3844 021c 00       		.byte	0
 3845 021d 00       		.byte	0
 3846 021e 23       		.uleb128 0x23
 3847 021f 2E       		.uleb128 0x2e
 3848 0220 00       		.byte	0
 3849 0221 3F       		.uleb128 0x3f
 3850 0222 19       		.uleb128 0x19
 3851 0223 03       		.uleb128 0x3
 3852 0224 0E       		.uleb128 0xe
 3853 0225 3A       		.uleb128 0x3a
 3854 0226 0B       		.uleb128 0xb
 3855 0227 3B       		.uleb128 0x3b
 3856 0228 0B       		.uleb128 0xb
 3857 0229 27       		.uleb128 0x27
 3858 022a 19       		.uleb128 0x19
 3859 022b 49       		.uleb128 0x49
 3860 022c 13       		.uleb128 0x13
 3861 022d 3C       		.uleb128 0x3c
 3862 022e 19       		.uleb128 0x19
 3863 022f 00       		.byte	0
 3864 0230 00       		.byte	0
 3865 0231 24       		.uleb128 0x24
 3866 0232 2E       		.uleb128 0x2e
 3867 0233 01       		.byte	0x1
 3868 0234 3F       		.uleb128 0x3f
 3869 0235 19       		.uleb128 0x19
 3870 0236 03       		.uleb128 0x3
 3871 0237 0E       		.uleb128 0xe
 3872 0238 3A       		.uleb128 0x3a
 3873 0239 0B       		.uleb128 0xb
 3874 023a 3B       		.uleb128 0x3b
 3875 023b 0B       		.uleb128 0xb
 3876 023c 27       		.uleb128 0x27
 3877 023d 19       		.uleb128 0x19
 3878 023e 3C       		.uleb128 0x3c
 3879 023f 19       		.uleb128 0x19
 3880 0240 01       		.uleb128 0x1
 3881 0241 13       		.uleb128 0x13
 3882 0242 00       		.byte	0
 3883 0243 00       		.byte	0
 3884 0244 25       		.uleb128 0x25
 3885 0245 05       		.uleb128 0x5
 3886 0246 00       		.byte	0
 3887 0247 49       		.uleb128 0x49
 3888 0248 13       		.uleb128 0x13
 3889 0249 00       		.byte	0
 3890 024a 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 105


 3891 024b 26       		.uleb128 0x26
 3892 024c 2E       		.uleb128 0x2e
 3893 024d 01       		.byte	0x1
 3894 024e 3F       		.uleb128 0x3f
 3895 024f 19       		.uleb128 0x19
 3896 0250 03       		.uleb128 0x3
 3897 0251 0E       		.uleb128 0xe
 3898 0252 3A       		.uleb128 0x3a
 3899 0253 0B       		.uleb128 0xb
 3900 0254 3B       		.uleb128 0x3b
 3901 0255 0B       		.uleb128 0xb
 3902 0256 27       		.uleb128 0x27
 3903 0257 19       		.uleb128 0x19
 3904 0258 3C       		.uleb128 0x3c
 3905 0259 19       		.uleb128 0x19
 3906 025a 00       		.byte	0
 3907 025b 00       		.byte	0
 3908 025c 00       		.byte	0
 3909              		.section	.debug_loc,"",%progbits
 3910              	.Ldebug_loc0:
 3911              	.LLST0:
 3912 0000 00000000 		.4byte	.LVL1
 3913 0004 07000000 		.4byte	.LVL2-1
 3914 0008 0100     		.2byte	0x1
 3915 000a 50       		.byte	0x50
 3916 000b 07000000 		.4byte	.LVL2-1
 3917 000f 14000000 		.4byte	.LVL3
 3918 0013 0100     		.2byte	0x1
 3919 0015 54       		.byte	0x54
 3920 0016 14000000 		.4byte	.LVL3
 3921 001a 24000000 		.4byte	.LFE6
 3922 001e 0400     		.2byte	0x4
 3923 0020 F3       		.byte	0xf3
 3924 0021 01       		.uleb128 0x1
 3925 0022 50       		.byte	0x50
 3926 0023 9F       		.byte	0x9f
 3927 0024 00000000 		.4byte	0
 3928 0028 00000000 		.4byte	0
 3929              	.LLST1:
 3930 002c 08000000 		.4byte	.LVL2
 3931 0030 1B000000 		.4byte	.LVL4-1
 3932 0034 0100     		.2byte	0x1
 3933 0036 50       		.byte	0x50
 3934 0037 00000000 		.4byte	0
 3935 003b 00000000 		.4byte	0
 3936              	.LLST2:
 3937 003f 00000000 		.4byte	.LVL5
 3938 0043 07000000 		.4byte	.LVL6-1
 3939 0047 0100     		.2byte	0x1
 3940 0049 50       		.byte	0x50
 3941 004a 07000000 		.4byte	.LVL6-1
 3942 004e 0C000000 		.4byte	.LVL7
 3943 0052 0100     		.2byte	0x1
 3944 0054 54       		.byte	0x54
 3945 0055 0C000000 		.4byte	.LVL7
 3946 0059 28000000 		.4byte	.LFE7
 3947 005d 0400     		.2byte	0x4
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 106


 3948 005f F3       		.byte	0xf3
 3949 0060 01       		.uleb128 0x1
 3950 0061 50       		.byte	0x50
 3951 0062 9F       		.byte	0x9f
 3952 0063 00000000 		.4byte	0
 3953 0067 00000000 		.4byte	0
 3954              	.LLST3:
 3955 006b 08000000 		.4byte	.LVL6
 3956 006f 1D000000 		.4byte	.LVL8-1
 3957 0073 0100     		.2byte	0x1
 3958 0075 50       		.byte	0x50
 3959 0076 00000000 		.4byte	0
 3960 007a 00000000 		.4byte	0
 3961              	.LLST4:
 3962 007e 00000000 		.4byte	.LVL9
 3963 0082 06000000 		.4byte	.LVL10
 3964 0086 0100     		.2byte	0x1
 3965 0088 50       		.byte	0x50
 3966 0089 06000000 		.4byte	.LVL10
 3967 008d 14000000 		.4byte	.LFE13
 3968 0091 0100     		.2byte	0x1
 3969 0093 51       		.byte	0x51
 3970 0094 00000000 		.4byte	0
 3971 0098 00000000 		.4byte	0
 3972              	.LLST5:
 3973 009c 00000000 		.4byte	.LVL14
 3974 00a0 04000000 		.4byte	.LVL15
 3975 00a4 0100     		.2byte	0x1
 3976 00a6 50       		.byte	0x50
 3977 00a7 04000000 		.4byte	.LVL15
 3978 00ab 14000000 		.4byte	.LFE22
 3979 00af 0400     		.2byte	0x4
 3980 00b1 F3       		.byte	0xf3
 3981 00b2 01       		.uleb128 0x1
 3982 00b3 50       		.byte	0x50
 3983 00b4 9F       		.byte	0x9f
 3984 00b5 00000000 		.4byte	0
 3985 00b9 00000000 		.4byte	0
 3986              	.LLST6:
 3987 00bd 00000000 		.4byte	.LVL16
 3988 00c1 08000000 		.4byte	.LVL17
 3989 00c5 0100     		.2byte	0x1
 3990 00c7 50       		.byte	0x50
 3991 00c8 08000000 		.4byte	.LVL17
 3992 00cc 18000000 		.4byte	.LFE23
 3993 00d0 0400     		.2byte	0x4
 3994 00d2 F3       		.byte	0xf3
 3995 00d3 01       		.uleb128 0x1
 3996 00d4 50       		.byte	0x50
 3997 00d5 9F       		.byte	0x9f
 3998 00d6 00000000 		.4byte	0
 3999 00da 00000000 		.4byte	0
 4000              	.LLST7:
 4001 00de 00000000 		.4byte	.LVL18
 4002 00e2 04000000 		.4byte	.LVL19
 4003 00e6 0100     		.2byte	0x1
 4004 00e8 50       		.byte	0x50
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 107


 4005 00e9 04000000 		.4byte	.LVL19
 4006 00ed 14000000 		.4byte	.LFE24
 4007 00f1 0400     		.2byte	0x4
 4008 00f3 F3       		.byte	0xf3
 4009 00f4 01       		.uleb128 0x1
 4010 00f5 50       		.byte	0x50
 4011 00f6 9F       		.byte	0x9f
 4012 00f7 00000000 		.4byte	0
 4013 00fb 00000000 		.4byte	0
 4014              	.LLST8:
 4015 00ff 00000000 		.4byte	.LVL20
 4016 0103 04000000 		.4byte	.LVL21
 4017 0107 0100     		.2byte	0x1
 4018 0109 50       		.byte	0x50
 4019 010a 04000000 		.4byte	.LVL21
 4020 010e 14000000 		.4byte	.LFE25
 4021 0112 0400     		.2byte	0x4
 4022 0114 F3       		.byte	0xf3
 4023 0115 01       		.uleb128 0x1
 4024 0116 50       		.byte	0x50
 4025 0117 9F       		.byte	0x9f
 4026 0118 00000000 		.4byte	0
 4027 011c 00000000 		.4byte	0
 4028              	.LLST9:
 4029 0120 00000000 		.4byte	.LVL22
 4030 0124 04000000 		.4byte	.LVL23
 4031 0128 0100     		.2byte	0x1
 4032 012a 50       		.byte	0x50
 4033 012b 04000000 		.4byte	.LVL23
 4034 012f 14000000 		.4byte	.LFE26
 4035 0133 0400     		.2byte	0x4
 4036 0135 F3       		.byte	0xf3
 4037 0136 01       		.uleb128 0x1
 4038 0137 50       		.byte	0x50
 4039 0138 9F       		.byte	0x9f
 4040 0139 00000000 		.4byte	0
 4041 013d 00000000 		.4byte	0
 4042              	.LLST10:
 4043 0141 00000000 		.4byte	.LVL25
 4044 0145 0C000000 		.4byte	.LVL27
 4045 0149 0100     		.2byte	0x1
 4046 014b 50       		.byte	0x50
 4047 014c 0C000000 		.4byte	.LVL27
 4048 0150 1E000000 		.4byte	.LFE16
 4049 0154 0400     		.2byte	0x4
 4050 0156 F3       		.byte	0xf3
 4051 0157 01       		.uleb128 0x1
 4052 0158 50       		.byte	0x50
 4053 0159 9F       		.byte	0x9f
 4054 015a 00000000 		.4byte	0
 4055 015e 00000000 		.4byte	0
 4056              	.LLST11:
 4057 0162 00000000 		.4byte	.LVL25
 4058 0166 0F000000 		.4byte	.LVL28-1
 4059 016a 0100     		.2byte	0x1
 4060 016c 51       		.byte	0x51
 4061 016d 0F000000 		.4byte	.LVL28-1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 108


 4062 0171 1C000000 		.4byte	.LVL30
 4063 0175 0100     		.2byte	0x1
 4064 0177 55       		.byte	0x55
 4065 0178 1C000000 		.4byte	.LVL30
 4066 017c 1E000000 		.4byte	.LFE16
 4067 0180 0400     		.2byte	0x4
 4068 0182 F3       		.byte	0xf3
 4069 0183 01       		.uleb128 0x1
 4070 0184 51       		.byte	0x51
 4071 0185 9F       		.byte	0x9f
 4072 0186 00000000 		.4byte	0
 4073 018a 00000000 		.4byte	0
 4074              	.LLST12:
 4075 018e 00000000 		.4byte	.LVL31
 4076 0192 0A000000 		.4byte	.LVL33
 4077 0196 0100     		.2byte	0x1
 4078 0198 50       		.byte	0x50
 4079 0199 0A000000 		.4byte	.LVL33
 4080 019d 1A000000 		.4byte	.LFE17
 4081 01a1 0400     		.2byte	0x4
 4082 01a3 F3       		.byte	0xf3
 4083 01a4 01       		.uleb128 0x1
 4084 01a5 50       		.byte	0x50
 4085 01a6 9F       		.byte	0x9f
 4086 01a7 00000000 		.4byte	0
 4087 01ab 00000000 		.4byte	0
 4088              	.LLST13:
 4089 01af 00000000 		.4byte	.LVL35
 4090 01b3 0C000000 		.4byte	.LVL37
 4091 01b7 0100     		.2byte	0x1
 4092 01b9 50       		.byte	0x50
 4093 01ba 0C000000 		.4byte	.LVL37
 4094 01be 20000000 		.4byte	.LFE18
 4095 01c2 0400     		.2byte	0x4
 4096 01c4 F3       		.byte	0xf3
 4097 01c5 01       		.uleb128 0x1
 4098 01c6 50       		.byte	0x50
 4099 01c7 9F       		.byte	0x9f
 4100 01c8 00000000 		.4byte	0
 4101 01cc 00000000 		.4byte	0
 4102              	.LLST14:
 4103 01d0 00000000 		.4byte	.LVL35
 4104 01d4 0F000000 		.4byte	.LVL38-1
 4105 01d8 0100     		.2byte	0x1
 4106 01da 51       		.byte	0x51
 4107 01db 0F000000 		.4byte	.LVL38-1
 4108 01df 1A000000 		.4byte	.LVL40
 4109 01e3 0100     		.2byte	0x1
 4110 01e5 55       		.byte	0x55
 4111 01e6 1A000000 		.4byte	.LVL40
 4112 01ea 20000000 		.4byte	.LFE18
 4113 01ee 0400     		.2byte	0x4
 4114 01f0 F3       		.byte	0xf3
 4115 01f1 01       		.uleb128 0x1
 4116 01f2 51       		.byte	0x51
 4117 01f3 9F       		.byte	0x9f
 4118 01f4 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 109


 4119 01f8 00000000 		.4byte	0
 4120              	.LLST15:
 4121 01fc 00000000 		.4byte	.LVL41
 4122 0200 0A000000 		.4byte	.LVL43
 4123 0204 0100     		.2byte	0x1
 4124 0206 50       		.byte	0x50
 4125 0207 0A000000 		.4byte	.LVL43
 4126 020b 1C000000 		.4byte	.LFE19
 4127 020f 0400     		.2byte	0x4
 4128 0211 F3       		.byte	0xf3
 4129 0212 01       		.uleb128 0x1
 4130 0213 50       		.byte	0x50
 4131 0214 9F       		.byte	0x9f
 4132 0215 00000000 		.4byte	0
 4133 0219 00000000 		.4byte	0
 4134              	.LLST16:
 4135 021d 00000000 		.4byte	.LVL45
 4136 0221 0C000000 		.4byte	.LVL46
 4137 0225 0100     		.2byte	0x1
 4138 0227 50       		.byte	0x50
 4139 0228 0C000000 		.4byte	.LVL46
 4140 022c 48000000 		.4byte	.LFE20
 4141 0230 0400     		.2byte	0x4
 4142 0232 F3       		.byte	0xf3
 4143 0233 01       		.uleb128 0x1
 4144 0234 50       		.byte	0x50
 4145 0235 9F       		.byte	0x9f
 4146 0236 00000000 		.4byte	0
 4147 023a 00000000 		.4byte	0
 4148              	.LLST17:
 4149 023e 00000000 		.4byte	.LVL45
 4150 0242 0F000000 		.4byte	.LVL47-1
 4151 0246 0100     		.2byte	0x1
 4152 0248 51       		.byte	0x51
 4153 0249 0F000000 		.4byte	.LVL47-1
 4154 024d 48000000 		.4byte	.LFE20
 4155 0251 0400     		.2byte	0x4
 4156 0253 F3       		.byte	0xf3
 4157 0254 01       		.uleb128 0x1
 4158 0255 51       		.byte	0x51
 4159 0256 9F       		.byte	0x9f
 4160 0257 00000000 		.4byte	0
 4161 025b 00000000 		.4byte	0
 4162              	.LLST18:
 4163 025f 26000000 		.4byte	.LVL50
 4164 0263 41000000 		.4byte	.LVL55-1
 4165 0267 0100     		.2byte	0x1
 4166 0269 50       		.byte	0x50
 4167 026a 00000000 		.4byte	0
 4168 026e 00000000 		.4byte	0
 4169              	.LLST19:
 4170 0272 22000000 		.4byte	.LVL49
 4171 0276 3A000000 		.4byte	.LVL53
 4172 027a 0100     		.2byte	0x1
 4173 027c 55       		.byte	0x55
 4174 027d 00000000 		.4byte	0
 4175 0281 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 110


 4176              	.LLST20:
 4177 0285 30000000 		.4byte	.LVL51
 4178 0289 3C000000 		.4byte	.LVL54
 4179 028d 0100     		.2byte	0x1
 4180 028f 53       		.byte	0x53
 4181 0290 3C000000 		.4byte	.LVL54
 4182 0294 42000000 		.4byte	.LVL56
 4183 0298 0100     		.2byte	0x1
 4184 029a 55       		.byte	0x55
 4185 029b 00000000 		.4byte	0
 4186 029f 00000000 		.4byte	0
 4187              	.LLST21:
 4188 02a3 00000000 		.4byte	.LVL57
 4189 02a7 0A000000 		.4byte	.LVL58
 4190 02ab 0100     		.2byte	0x1
 4191 02ad 50       		.byte	0x50
 4192 02ae 0A000000 		.4byte	.LVL58
 4193 02b2 2C000000 		.4byte	.LFE21
 4194 02b6 0400     		.2byte	0x4
 4195 02b8 F3       		.byte	0xf3
 4196 02b9 01       		.uleb128 0x1
 4197 02ba 50       		.byte	0x50
 4198 02bb 9F       		.byte	0x9f
 4199 02bc 00000000 		.4byte	0
 4200 02c0 00000000 		.4byte	0
 4201              	.LLST22:
 4202 02c4 22000000 		.4byte	.LVL60
 4203 02c8 24000000 		.4byte	.LVL61
 4204 02cc 0100     		.2byte	0x1
 4205 02ce 50       		.byte	0x50
 4206 02cf 00000000 		.4byte	0
 4207 02d3 00000000 		.4byte	0
 4208              	.LLST23:
 4209 02d7 00000000 		.4byte	.LVL62
 4210 02db 0C000000 		.4byte	.LVL63
 4211 02df 0100     		.2byte	0x1
 4212 02e1 50       		.byte	0x50
 4213 02e2 0C000000 		.4byte	.LVL63
 4214 02e6 24000000 		.4byte	.LVL67
 4215 02ea 0100     		.2byte	0x1
 4216 02ec 54       		.byte	0x54
 4217 02ed 00000000 		.4byte	0
 4218 02f1 00000000 		.4byte	0
 4219              	.LLST24:
 4220 02f5 12000000 		.4byte	.LVL71
 4221 02f9 1C000000 		.4byte	.LVL72
 4222 02fd 0200     		.2byte	0x2
 4223 02ff 30       		.byte	0x30
 4224 0300 9F       		.byte	0x9f
 4225 0301 1C000000 		.4byte	.LVL72
 4226 0305 34000000 		.4byte	.LVL77
 4227 0309 0100     		.2byte	0x1
 4228 030b 53       		.byte	0x53
 4229 030c 00000000 		.4byte	0
 4230 0310 00000000 		.4byte	0
 4231              	.LLST25:
 4232 0314 04000000 		.4byte	.LVL68
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 111


 4233 0318 28000000 		.4byte	.LVL73
 4234 031c 0200     		.2byte	0x2
 4235 031e 33       		.byte	0x33
 4236 031f 9F       		.byte	0x9f
 4237 0320 28000000 		.4byte	.LVL73
 4238 0324 2A000000 		.4byte	.LVL74
 4239 0328 0100     		.2byte	0x1
 4240 032a 51       		.byte	0x51
 4241 032b 2A000000 		.4byte	.LVL74
 4242 032f 32000000 		.4byte	.LVL76
 4243 0333 0200     		.2byte	0x2
 4244 0335 33       		.byte	0x33
 4245 0336 9F       		.byte	0x9f
 4246 0337 32000000 		.4byte	.LVL76
 4247 033b 54000000 		.4byte	.LVL80
 4248 033f 0100     		.2byte	0x1
 4249 0341 51       		.byte	0x51
 4250 0342 00000000 		.4byte	0
 4251 0346 00000000 		.4byte	0
 4252              	.LLST26:
 4253 034a 12000000 		.4byte	.LVL71
 4254 034e 3A000000 		.4byte	.LVL78
 4255 0352 0100     		.2byte	0x1
 4256 0354 50       		.byte	0x50
 4257 0355 3A000000 		.4byte	.LVL78
 4258 0359 96000000 		.4byte	.LVL87
 4259 035d 0100     		.2byte	0x1
 4260 035f 57       		.byte	0x57
 4261 0360 00000000 		.4byte	0
 4262 0364 00000000 		.4byte	0
 4263              	.LLST27:
 4264 0368 50000000 		.4byte	.LVL79
 4265 036c 70000000 		.4byte	.LVL83
 4266 0370 0100     		.2byte	0x1
 4267 0372 53       		.byte	0x53
 4268 0373 70000000 		.4byte	.LVL83
 4269 0377 72000000 		.4byte	.LVL84
 4270 037b 0200     		.2byte	0x2
 4271 037d 72       		.byte	0x72
 4272 037e 00       		.sleb128 0
 4273 037f 00000000 		.4byte	0
 4274 0383 00000000 		.4byte	0
 4275              	.LLST28:
 4276 0387 00000000 		.4byte	.LVL88
 4277 038b 09000000 		.4byte	.LVL90-1
 4278 038f 0100     		.2byte	0x1
 4279 0391 50       		.byte	0x50
 4280 0392 09000000 		.4byte	.LVL90-1
 4281 0396 2C000000 		.4byte	.LVL97
 4282 039a 0100     		.2byte	0x1
 4283 039c 55       		.byte	0x55
 4284 039d 2C000000 		.4byte	.LVL97
 4285 03a1 5E000000 		.4byte	.LVL101
 4286 03a5 0300     		.2byte	0x3
 4287 03a7 75       		.byte	0x75
 4288 03a8 03       		.sleb128 3
 4289 03a9 9F       		.byte	0x9f
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 112


 4290 03aa 5E000000 		.4byte	.LVL101
 4291 03ae 80000000 		.4byte	.LFE8
 4292 03b2 0400     		.2byte	0x4
 4293 03b4 F3       		.byte	0xf3
 4294 03b5 01       		.uleb128 0x1
 4295 03b6 50       		.byte	0x50
 4296 03b7 9F       		.byte	0x9f
 4297 03b8 00000000 		.4byte	0
 4298 03bc 00000000 		.4byte	0
 4299              	.LLST29:
 4300 03c0 06000000 		.4byte	.LVL89
 4301 03c4 14000000 		.4byte	.LVL93
 4302 03c8 0200     		.2byte	0x2
 4303 03ca 30       		.byte	0x30
 4304 03cb 9F       		.byte	0x9f
 4305 03cc 14000000 		.4byte	.LVL93
 4306 03d0 1C000000 		.4byte	.LVL95
 4307 03d4 0200     		.2byte	0x2
 4308 03d6 31       		.byte	0x31
 4309 03d7 9F       		.byte	0x9f
 4310 03d8 1C000000 		.4byte	.LVL95
 4311 03dc 1E000000 		.4byte	.LVL96
 4312 03e0 0200     		.2byte	0x2
 4313 03e2 30       		.byte	0x30
 4314 03e3 9F       		.byte	0x9f
 4315 03e4 1E000000 		.4byte	.LVL96
 4316 03e8 55000000 		.4byte	.LVL98-1
 4317 03ec 0100     		.2byte	0x1
 4318 03ee 51       		.byte	0x51
 4319 03ef 00000000 		.4byte	0
 4320 03f3 00000000 		.4byte	0
 4321              	.LLST30:
 4322 03f7 0C000000 		.4byte	.LVL91
 4323 03fb 0F000000 		.4byte	.LVL92-1
 4324 03ff 0100     		.2byte	0x1
 4325 0401 50       		.byte	0x50
 4326 0402 0F000000 		.4byte	.LVL92-1
 4327 0406 5E000000 		.4byte	.LVL100
 4328 040a 0100     		.2byte	0x1
 4329 040c 54       		.byte	0x54
 4330 040d 00000000 		.4byte	0
 4331 0411 00000000 		.4byte	0
 4332              	.LLST31:
 4333 0415 00000000 		.4byte	.LVL102
 4334 0419 08000000 		.4byte	.LVL103
 4335 041d 0100     		.2byte	0x1
 4336 041f 50       		.byte	0x50
 4337 0420 08000000 		.4byte	.LVL103
 4338 0424 14000000 		.4byte	.LFE30
 4339 0428 0400     		.2byte	0x4
 4340 042a F3       		.byte	0xf3
 4341 042b 01       		.uleb128 0x1
 4342 042c 50       		.byte	0x50
 4343 042d 9F       		.byte	0x9f
 4344 042e 00000000 		.4byte	0
 4345 0432 00000000 		.4byte	0
 4346              	.LLST32:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 113


 4347 0436 00000000 		.4byte	.LVL105
 4348 043a 16000000 		.4byte	.LVL106
 4349 043e 0100     		.2byte	0x1
 4350 0440 50       		.byte	0x50
 4351 0441 16000000 		.4byte	.LVL106
 4352 0445 40000000 		.4byte	.LFE9
 4353 0449 0400     		.2byte	0x4
 4354 044b F3       		.byte	0xf3
 4355 044c 01       		.uleb128 0x1
 4356 044d 50       		.byte	0x50
 4357 044e 9F       		.byte	0x9f
 4358 044f 00000000 		.4byte	0
 4359 0453 00000000 		.4byte	0
 4360              	.LLST33:
 4361 0457 00000000 		.4byte	.LVL109
 4362 045b 1A000000 		.4byte	.LVL110
 4363 045f 0100     		.2byte	0x1
 4364 0461 50       		.byte	0x50
 4365 0462 1A000000 		.4byte	.LVL110
 4366 0466 4C000000 		.4byte	.LFE31
 4367 046a 0400     		.2byte	0x4
 4368 046c F3       		.byte	0xf3
 4369 046d 01       		.uleb128 0x1
 4370 046e 50       		.byte	0x50
 4371 046f 9F       		.byte	0x9f
 4372 0470 00000000 		.4byte	0
 4373 0474 00000000 		.4byte	0
 4374              	.LLST34:
 4375 0478 00000000 		.4byte	.LVL114
 4376 047c 02000000 		.4byte	.LVL115
 4377 0480 0100     		.2byte	0x1
 4378 0482 50       		.byte	0x50
 4379 0483 02000000 		.4byte	.LVL115
 4380 0487 10000000 		.4byte	.LFE38
 4381 048b 0400     		.2byte	0x4
 4382 048d F3       		.byte	0xf3
 4383 048e 01       		.uleb128 0x1
 4384 048f 50       		.byte	0x50
 4385 0490 9F       		.byte	0x9f
 4386 0491 00000000 		.4byte	0
 4387 0495 00000000 		.4byte	0
 4388              	.LLST35:
 4389 0499 0C000000 		.4byte	.LVL118
 4390 049d 1A000000 		.4byte	.LVL121
 4391 04a1 0100     		.2byte	0x1
 4392 04a3 54       		.byte	0x54
 4393 04a4 1E000000 		.4byte	.LVL122
 4394 04a8 22000000 		.4byte	.LVL123
 4395 04ac 0100     		.2byte	0x1
 4396 04ae 54       		.byte	0x54
 4397 04af 00000000 		.4byte	0
 4398 04b3 00000000 		.4byte	0
 4399              	.LLST36:
 4400 04b7 02000000 		.4byte	.LVL124
 4401 04bb 0A000000 		.4byte	.LVL125
 4402 04bf 0200     		.2byte	0x2
 4403 04c1 30       		.byte	0x30
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 114


 4404 04c2 9F       		.byte	0x9f
 4405 04c3 0A000000 		.4byte	.LVL125
 4406 04c7 1B000000 		.4byte	.LVL127-1
 4407 04cb 0100     		.2byte	0x1
 4408 04cd 53       		.byte	0x53
 4409 04ce 00000000 		.4byte	0
 4410 04d2 00000000 		.4byte	0
 4411              	.LLST37:
 4412 04d6 00000000 		.4byte	.LVL135
 4413 04da 06000000 		.4byte	.LVL136
 4414 04de 0100     		.2byte	0x1
 4415 04e0 50       		.byte	0x50
 4416 04e1 06000000 		.4byte	.LVL136
 4417 04e5 10000000 		.4byte	.LFE44
 4418 04e9 0400     		.2byte	0x4
 4419 04eb F3       		.byte	0xf3
 4420 04ec 01       		.uleb128 0x1
 4421 04ed 50       		.byte	0x50
 4422 04ee 9F       		.byte	0x9f
 4423 04ef 00000000 		.4byte	0
 4424 04f3 00000000 		.4byte	0
 4425              	.LLST38:
 4426 04f7 00000000 		.4byte	.LVL137
 4427 04fb 02000000 		.4byte	.LVL138
 4428 04ff 0100     		.2byte	0x1
 4429 0501 50       		.byte	0x50
 4430 0502 02000000 		.4byte	.LVL138
 4431 0506 0C000000 		.4byte	.LFE45
 4432 050a 0400     		.2byte	0x4
 4433 050c F3       		.byte	0xf3
 4434 050d 01       		.uleb128 0x1
 4435 050e 50       		.byte	0x50
 4436 050f 9F       		.byte	0x9f
 4437 0510 00000000 		.4byte	0
 4438 0514 00000000 		.4byte	0
 4439              		.section	.debug_aranges,"",%progbits
 4440 0000 8C010000 		.4byte	0x18c
 4441 0004 0200     		.2byte	0x2
 4442 0006 00000000 		.4byte	.Ldebug_info0
 4443 000a 04       		.byte	0x4
 4444 000b 00       		.byte	0
 4445 000c 0000     		.2byte	0
 4446 000e 0000     		.2byte	0
 4447 0010 00000000 		.4byte	.LFB5
 4448 0014 14000000 		.4byte	.LFE5-.LFB5
 4449 0018 00000000 		.4byte	.LFB1
 4450 001c 14000000 		.4byte	.LFE1-.LFB1
 4451 0020 00000000 		.4byte	.LFB4
 4452 0024 14000000 		.4byte	.LFE4-.LFB4
 4453 0028 00000000 		.4byte	.LFB2
 4454 002c 18000000 		.4byte	.LFE2-.LFB2
 4455 0030 00000000 		.4byte	.LFB6
 4456 0034 24000000 		.4byte	.LFE6-.LFB6
 4457 0038 00000000 		.4byte	.LFB7
 4458 003c 28000000 		.4byte	.LFE7-.LFB7
 4459 0040 00000000 		.4byte	.LFB10
 4460 0044 20000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 115


 4461 0048 00000000 		.4byte	.LFB11
 4462 004c 10000000 		.4byte	.LFE11-.LFB11
 4463 0050 00000000 		.4byte	.LFB12
 4464 0054 0C000000 		.4byte	.LFE12-.LFB12
 4465 0058 00000000 		.4byte	.LFB13
 4466 005c 14000000 		.4byte	.LFE13-.LFB13
 4467 0060 00000000 		.4byte	.LFB14
 4468 0064 10000000 		.4byte	.LFE14-.LFB14
 4469 0068 00000000 		.4byte	.LFB15
 4470 006c 0C000000 		.4byte	.LFE15-.LFB15
 4471 0070 00000000 		.4byte	.LFB22
 4472 0074 14000000 		.4byte	.LFE22-.LFB22
 4473 0078 00000000 		.4byte	.LFB23
 4474 007c 18000000 		.4byte	.LFE23-.LFB23
 4475 0080 00000000 		.4byte	.LFB24
 4476 0084 14000000 		.4byte	.LFE24-.LFB24
 4477 0088 00000000 		.4byte	.LFB25
 4478 008c 14000000 		.4byte	.LFE25-.LFB25
 4479 0090 00000000 		.4byte	.LFB26
 4480 0094 14000000 		.4byte	.LFE26-.LFB26
 4481 0098 00000000 		.4byte	.LFB27
 4482 009c 04000000 		.4byte	.LFE27-.LFB27
 4483 00a0 00000000 		.4byte	.LFB16
 4484 00a4 1E000000 		.4byte	.LFE16-.LFB16
 4485 00a8 00000000 		.4byte	.LFB17
 4486 00ac 1A000000 		.4byte	.LFE17-.LFB17
 4487 00b0 00000000 		.4byte	.LFB18
 4488 00b4 20000000 		.4byte	.LFE18-.LFB18
 4489 00b8 00000000 		.4byte	.LFB19
 4490 00bc 1C000000 		.4byte	.LFE19-.LFB19
 4491 00c0 00000000 		.4byte	.LFB20
 4492 00c4 48000000 		.4byte	.LFE20-.LFB20
 4493 00c8 00000000 		.4byte	.LFB21
 4494 00cc 2C000000 		.4byte	.LFE21-.LFB21
 4495 00d0 00000000 		.4byte	.LFB28
 4496 00d4 18000000 		.4byte	.LFE28-.LFB28
 4497 00d8 00000000 		.4byte	.LFB29
 4498 00dc 30000000 		.4byte	.LFE29-.LFB29
 4499 00e0 00000000 		.4byte	.LFB3
 4500 00e4 BC000000 		.4byte	.LFE3-.LFB3
 4501 00e8 00000000 		.4byte	.LFB8
 4502 00ec 80000000 		.4byte	.LFE8-.LFB8
 4503 00f0 00000000 		.4byte	.LFB30
 4504 00f4 14000000 		.4byte	.LFE30-.LFB30
 4505 00f8 00000000 		.4byte	.LFB9
 4506 00fc 40000000 		.4byte	.LFE9-.LFB9
 4507 0100 00000000 		.4byte	.LFB31
 4508 0104 4C000000 		.4byte	.LFE31-.LFB31
 4509 0108 00000000 		.4byte	.LFB35
 4510 010c 10000000 		.4byte	.LFE35-.LFB35
 4511 0110 00000000 		.4byte	.LFB36
 4512 0114 10000000 		.4byte	.LFE36-.LFB36
 4513 0118 00000000 		.4byte	.LFB34
 4514 011c 18000000 		.4byte	.LFE34-.LFB34
 4515 0120 00000000 		.4byte	.LFB37
 4516 0124 10000000 		.4byte	.LFE37-.LFB37
 4517 0128 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 116


 4518 012c 10000000 		.4byte	.LFE38-.LFB38
 4519 0130 00000000 		.4byte	.LFB39
 4520 0134 10000000 		.4byte	.LFE39-.LFB39
 4521 0138 00000000 		.4byte	.LFB40
 4522 013c 10000000 		.4byte	.LFE40-.LFB40
 4523 0140 00000000 		.4byte	.LFB41
 4524 0144 20000000 		.4byte	.LFE41-.LFB41
 4525 0148 00000000 		.4byte	.LFB42
 4526 014c 10000000 		.4byte	.LFE42-.LFB42
 4527 0150 00000000 		.4byte	.LFB46
 4528 0154 28000000 		.4byte	.LFE46-.LFB46
 4529 0158 00000000 		.4byte	.LFB43
 4530 015c 0C000000 		.4byte	.LFE43-.LFB43
 4531 0160 00000000 		.4byte	.LFB33
 4532 0164 4C000000 		.4byte	.LFE33-.LFB33
 4533 0168 00000000 		.4byte	.LFB32
 4534 016c 20000000 		.4byte	.LFE32-.LFB32
 4535 0170 00000000 		.4byte	.LFB44
 4536 0174 10000000 		.4byte	.LFE44-.LFB44
 4537 0178 00000000 		.4byte	.LFB45
 4538 017c 0C000000 		.4byte	.LFE45-.LFB45
 4539 0180 00000000 		.4byte	.LFB47
 4540 0184 70000000 		.4byte	.LFE47-.LFB47
 4541 0188 00000000 		.4byte	0
 4542 018c 00000000 		.4byte	0
 4543              		.section	.debug_ranges,"",%progbits
 4544              	.Ldebug_ranges0:
 4545 0000 00000000 		.4byte	.LFB5
 4546 0004 14000000 		.4byte	.LFE5
 4547 0008 00000000 		.4byte	.LFB1
 4548 000c 14000000 		.4byte	.LFE1
 4549 0010 00000000 		.4byte	.LFB4
 4550 0014 14000000 		.4byte	.LFE4
 4551 0018 00000000 		.4byte	.LFB2
 4552 001c 18000000 		.4byte	.LFE2
 4553 0020 00000000 		.4byte	.LFB6
 4554 0024 24000000 		.4byte	.LFE6
 4555 0028 00000000 		.4byte	.LFB7
 4556 002c 28000000 		.4byte	.LFE7
 4557 0030 00000000 		.4byte	.LFB10
 4558 0034 20000000 		.4byte	.LFE10
 4559 0038 00000000 		.4byte	.LFB11
 4560 003c 10000000 		.4byte	.LFE11
 4561 0040 00000000 		.4byte	.LFB12
 4562 0044 0C000000 		.4byte	.LFE12
 4563 0048 00000000 		.4byte	.LFB13
 4564 004c 14000000 		.4byte	.LFE13
 4565 0050 00000000 		.4byte	.LFB14
 4566 0054 10000000 		.4byte	.LFE14
 4567 0058 00000000 		.4byte	.LFB15
 4568 005c 0C000000 		.4byte	.LFE15
 4569 0060 00000000 		.4byte	.LFB22
 4570 0064 14000000 		.4byte	.LFE22
 4571 0068 00000000 		.4byte	.LFB23
 4572 006c 18000000 		.4byte	.LFE23
 4573 0070 00000000 		.4byte	.LFB24
 4574 0074 14000000 		.4byte	.LFE24
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 117


 4575 0078 00000000 		.4byte	.LFB25
 4576 007c 14000000 		.4byte	.LFE25
 4577 0080 00000000 		.4byte	.LFB26
 4578 0084 14000000 		.4byte	.LFE26
 4579 0088 00000000 		.4byte	.LFB27
 4580 008c 04000000 		.4byte	.LFE27
 4581 0090 00000000 		.4byte	.LFB16
 4582 0094 1E000000 		.4byte	.LFE16
 4583 0098 00000000 		.4byte	.LFB17
 4584 009c 1A000000 		.4byte	.LFE17
 4585 00a0 00000000 		.4byte	.LFB18
 4586 00a4 20000000 		.4byte	.LFE18
 4587 00a8 00000000 		.4byte	.LFB19
 4588 00ac 1C000000 		.4byte	.LFE19
 4589 00b0 00000000 		.4byte	.LFB20
 4590 00b4 48000000 		.4byte	.LFE20
 4591 00b8 00000000 		.4byte	.LFB21
 4592 00bc 2C000000 		.4byte	.LFE21
 4593 00c0 00000000 		.4byte	.LFB28
 4594 00c4 18000000 		.4byte	.LFE28
 4595 00c8 00000000 		.4byte	.LFB29
 4596 00cc 30000000 		.4byte	.LFE29
 4597 00d0 00000000 		.4byte	.LFB3
 4598 00d4 BC000000 		.4byte	.LFE3
 4599 00d8 00000000 		.4byte	.LFB8
 4600 00dc 80000000 		.4byte	.LFE8
 4601 00e0 00000000 		.4byte	.LFB30
 4602 00e4 14000000 		.4byte	.LFE30
 4603 00e8 00000000 		.4byte	.LFB9
 4604 00ec 40000000 		.4byte	.LFE9
 4605 00f0 00000000 		.4byte	.LFB31
 4606 00f4 4C000000 		.4byte	.LFE31
 4607 00f8 00000000 		.4byte	.LFB35
 4608 00fc 10000000 		.4byte	.LFE35
 4609 0100 00000000 		.4byte	.LFB36
 4610 0104 10000000 		.4byte	.LFE36
 4611 0108 00000000 		.4byte	.LFB34
 4612 010c 18000000 		.4byte	.LFE34
 4613 0110 00000000 		.4byte	.LFB37
 4614 0114 10000000 		.4byte	.LFE37
 4615 0118 00000000 		.4byte	.LFB38
 4616 011c 10000000 		.4byte	.LFE38
 4617 0120 00000000 		.4byte	.LFB39
 4618 0124 10000000 		.4byte	.LFE39
 4619 0128 00000000 		.4byte	.LFB40
 4620 012c 10000000 		.4byte	.LFE40
 4621 0130 00000000 		.4byte	.LFB41
 4622 0134 20000000 		.4byte	.LFE41
 4623 0138 00000000 		.4byte	.LFB42
 4624 013c 10000000 		.4byte	.LFE42
 4625 0140 00000000 		.4byte	.LFB46
 4626 0144 28000000 		.4byte	.LFE46
 4627 0148 00000000 		.4byte	.LFB43
 4628 014c 0C000000 		.4byte	.LFE43
 4629 0150 00000000 		.4byte	.LFB33
 4630 0154 4C000000 		.4byte	.LFE33
 4631 0158 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 118


 4632 015c 20000000 		.4byte	.LFE32
 4633 0160 00000000 		.4byte	.LFB44
 4634 0164 10000000 		.4byte	.LFE44
 4635 0168 00000000 		.4byte	.LFB45
 4636 016c 0C000000 		.4byte	.LFE45
 4637 0170 00000000 		.4byte	.LFB47
 4638 0174 70000000 		.4byte	.LFE47
 4639 0178 00000000 		.4byte	0
 4640 017c 00000000 		.4byte	0
 4641              		.section	.debug_line,"",%progbits
 4642              	.Ldebug_line0:
 4643 0000 95040000 		.section	.debug_str,"MS",%progbits,1
 4643      02006900 
 4643      00000201 
 4643      FB0E0D00 
 4643      01010101 
 4644              	.LASF47:
 4645 0000 72616D56 		.ascii	"ramVectorTable\000"
 4645      6563746F 
 4645      72546162 
 4645      6C6500
 4646              	.LASF10:
 4647 000f 75696E74 		.ascii	"uint16\000"
 4647      313600
 4648              	.LASF34:
 4649 0016 696E7453 		.ascii	"intState\000"
 4649      74617465 
 4649      00
 4650              	.LASF23:
 4651 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4651      73436C6B 
 4651      57726974 
 4651      65486663 
 4651      6C6B4469 
 4652              	.LASF46:
 4653 0038 6F6C6449 		.ascii	"oldIsr\000"
 4653      737200
 4654              	.LASF33:
 4655 003f 43794469 		.ascii	"CyDisableInts\000"
 4655      7361626C 
 4655      65496E74 
 4655      7300
 4656              	.LASF103:
 4657 004d 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4657      4320342E 
 4657      382E3420 
 4657      32303134 
 4657      30353236 
 4658 0080 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4658      20726576 
 4658      6973696F 
 4658      6E203231 
 4658      31333538 
 4659 00b3 67202D66 		.ascii	"g -ffunction-sections\000"
 4659      66756E63 
 4659      74696F6E 
 4659      2D736563 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 119


 4659      74696F6E 
 4660              	.LASF7:
 4661 00c9 6C6F6E67 		.ascii	"long long unsigned int\000"
 4661      206C6F6E 
 4661      6720756E 
 4661      7369676E 
 4661      65642069 
 4662              	.LASF64:
 4663 00e0 70617261 		.ascii	"parameters\000"
 4663      6D657465 
 4663      727300
 4664              	.LASF35:
 4665 00eb 4379456E 		.ascii	"CyEnableInts\000"
 4665      61626C65 
 4665      496E7473 
 4665      00
 4666              	.LASF102:
 4667 00f8 43795379 		.ascii	"CySysClkWcoEnabled\000"
 4667      73436C6B 
 4667      57636F45 
 4667      6E61626C 
 4667      656400
 4668              	.LASF56:
 4669 010b 4379536F 		.ascii	"CySoftwareReset\000"
 4669      66747761 
 4669      72655265 
 4669      73657400 
 4670              	.LASF73:
 4671 011b 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4671      73546963 
 4671      6B456E61 
 4671      626C6549 
 4671      6E746572 
 4672              	.LASF39:
 4673 0134 4379496E 		.ascii	"CyIntGetState\000"
 4673      74476574 
 4673      53746174 
 4673      6500
 4674              	.LASF6:
 4675 0142 6C6F6E67 		.ascii	"long long int\000"
 4675      206C6F6E 
 4675      6720696E 
 4675      7400
 4676              	.LASF0:
 4677 0150 7369676E 		.ascii	"signed char\000"
 4677      65642063 
 4677      68617200 
 4678              	.LASF60:
 4679 015c 66726571 		.ascii	"freq\000"
 4679      00
 4680              	.LASF71:
 4681 0161 43794465 		.ascii	"CyDelayFreq\000"
 4681      6C617946 
 4681      72657100 
 4682              	.LASF27:
 4683 016d 696E7465 		.ascii	"interruptState\000"
 4683      72727570 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 120


 4683      74537461 
 4683      746500
 4684              	.LASF78:
 4685 017c 43795379 		.ascii	"CySysTickGetReload\000"
 4685      73546963 
 4685      6B476574 
 4685      52656C6F 
 4685      616400
 4686              	.LASF106:
 4687 018f 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 4687      73436C6B 
 4687      496D6F47 
 4687      65745763 
 4687      6F4C6F63 
 4688              	.LASF66:
 4689 01a5 77636F4C 		.ascii	"wcoLock\000"
 4689      6F636B00 
 4690              	.LASF4:
 4691 01ad 6C6F6E67 		.ascii	"long int\000"
 4691      20696E74 
 4691      00
 4692              	.LASF40:
 4693 01b6 4379496E 		.ascii	"CyIntDisable\000"
 4693      74446973 
 4693      61626C65 
 4693      00
 4694              	.LASF65:
 4695 01c3 72656756 		.ascii	"regValues\000"
 4695      616C7565 
 4695      7300
 4696              	.LASF9:
 4697 01cd 75696E74 		.ascii	"uint8\000"
 4697      3800
 4698              	.LASF95:
 4699 01d3 63796465 		.ascii	"cydelayFreqKhz\000"
 4699      6C617946 
 4699      7265714B 
 4699      687A00
 4700              	.LASF67:
 4701 01e2 43794465 		.ascii	"CyDelayUs\000"
 4701      6C617955 
 4701      7300
 4702              	.LASF13:
 4703 01ec 646F7562 		.ascii	"double\000"
 4703      6C6500
 4704              	.LASF53:
 4705 01f3 73686966 		.ascii	"shift\000"
 4705      7400
 4706              	.LASF29:
 4707 01f9 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4707      734C7664 
 4707      436C6561 
 4707      72496E74 
 4707      65727275 
 4708              	.LASF11:
 4709 0210 75696E74 		.ascii	"uint32\000"
 4709      333200
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 121


 4710              	.LASF38:
 4711 0217 6E756D62 		.ascii	"number\000"
 4711      657200
 4712              	.LASF36:
 4713 021e 6D61736B 		.ascii	"mask\000"
 4713      00
 4714              	.LASF69:
 4715 0223 43795379 		.ascii	"CySysLvdEnable\000"
 4715      734C7664 
 4715      456E6162 
 4715      6C6500
 4716              	.LASF59:
 4717 0232 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 4717      73436C6B 
 4717      496D6F45 
 4717      6E61626C 
 4717      6557636F 
 4718              	.LASF55:
 4719 024b 4379496E 		.ascii	"CyIntGetPriority\000"
 4719      74476574 
 4719      5072696F 
 4719      72697479 
 4719      00
 4720              	.LASF97:
 4721 025c 63796465 		.ascii	"cydelay32kMs\000"
 4721      6C617933 
 4721      326B4D73 
 4721      00
 4722              	.LASF84:
 4723 0269 43795379 		.ascii	"CySysTickInit\000"
 4723      73546963 
 4723      6B496E69 
 4723      7400
 4724              	.LASF54:
 4725 0277 76616C75 		.ascii	"value\000"
 4725      6500
 4726              	.LASF81:
 4727 027d 636C6F63 		.ascii	"clockSource\000"
 4727      6B536F75 
 4727      72636500 
 4728              	.LASF90:
 4729 0289 43794765 		.ascii	"CyGetUniqueId\000"
 4729      74556E69 
 4729      71756549 
 4729      6400
 4730              	.LASF82:
 4731 0297 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4731      73546963 
 4731      6B476574 
 4731      436F756E 
 4731      74466C61 
 4732              	.LASF8:
 4733 02ad 756E7369 		.ascii	"unsigned int\000"
 4733      676E6564 
 4733      20696E74 
 4733      00
 4734              	.LASF83:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 122


 4735 02ba 43795379 		.ascii	"CySysTickClear\000"
 4735      73546963 
 4735      6B436C65 
 4735      617200
 4736              	.LASF5:
 4737 02c9 6C6F6E67 		.ascii	"long unsigned int\000"
 4737      20756E73 
 4737      69676E65 
 4737      6420696E 
 4737      7400
 4738              	.LASF77:
 4739 02db 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4739      734C7664 
 4739      47657449 
 4739      6E746572 
 4739      72757074 
 4740              	.LASF22:
 4741 02f6 43795379 		.ascii	"CySysClkImoStop\000"
 4741      73436C6B 
 4741      496D6F53 
 4741      746F7000 
 4742              	.LASF101:
 4743 0306 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4743      74657243 
 4743      72697469 
 4743      63616C53 
 4743      65637469 
 4744              	.LASF41:
 4745 031d 4379496E 		.ascii	"CyIntSetPending\000"
 4745      74536574 
 4745      50656E64 
 4745      696E6700 
 4746              	.LASF89:
 4747 032d 43795379 		.ascii	"CySysTickGetCallback\000"
 4747      73546963 
 4747      6B476574 
 4747      43616C6C 
 4747      6261636B 
 4748              	.LASF32:
 4749 0342 43795379 		.ascii	"CySysGetResetReason\000"
 4749      73476574 
 4749      52657365 
 4749      74526561 
 4749      736F6E00 
 4750              	.LASF3:
 4751 0356 73686F72 		.ascii	"short unsigned int\000"
 4751      7420756E 
 4751      7369676E 
 4751      65642069 
 4751      6E7400
 4752              	.LASF61:
 4753 0369 72656754 		.ascii	"regTmp\000"
 4753      6D7000
 4754              	.LASF80:
 4755 0370 43795379 		.ascii	"CySysTickSetClockSource\000"
 4755      73546963 
 4755      6B536574 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 123


 4755      436C6F63 
 4755      6B536F75 
 4756              	.LASF49:
 4757 0388 4379496E 		.ascii	"CyIntSetVector\000"
 4757      74536574 
 4757      56656374 
 4757      6F7200
 4758              	.LASF104:
 4759 0397 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4759      6E657261 
 4759      7465645F 
 4759      536F7572 
 4759      63655C50 
 4760              	.LASF52:
 4761 03b8 7072696F 		.ascii	"priority\000"
 4761      72697479 
 4761      00
 4762              	.LASF63:
 4763 03c1 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4763      73436C6B 
 4763      57726974 
 4763      65496D6F 
 4763      46726571 
 4764              	.LASF44:
 4765 03d6 4379496E 		.ascii	"CyIntSetSysVector\000"
 4765      74536574 
 4765      53797356 
 4765      6563746F 
 4765      7200
 4766              	.LASF21:
 4767 03e8 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 4767      73436C6B 
 4767      496D6F44 
 4767      69736162 
 4767      6C655763 
 4768              	.LASF16:
 4769 0402 72656733 		.ascii	"reg32\000"
 4769      3200
 4770              	.LASF85:
 4771 0408 43795379 		.ascii	"CySysTickStart\000"
 4771      73546963 
 4771      6B537461 
 4771      727400
 4772              	.LASF18:
 4773 0417 73697A65 		.ascii	"sizetype\000"
 4773      74797065 
 4773      00
 4774              	.LASF93:
 4775 0420 43795379 		.ascii	"CySysTickInitVar\000"
 4775      73546963 
 4775      6B496E69 
 4775      74566172 
 4775      00
 4776              	.LASF42:
 4777 0431 4379496E 		.ascii	"CyIntClearPending\000"
 4777      74436C65 
 4777      61725065 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 124


 4777      6E64696E 
 4777      6700
 4778              	.LASF45:
 4779 0443 61646472 		.ascii	"address\000"
 4779      65737300 
 4780              	.LASF88:
 4781 044b 72657456 		.ascii	"retVal\000"
 4781      616C00
 4782              	.LASF87:
 4783 0452 66756E63 		.ascii	"function\000"
 4783      74696F6E 
 4783      00
 4784              	.LASF98:
 4785 045b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4785      6F467265 
 4785      714D687A 
 4785      32526567 
 4785      00
 4786              	.LASF79:
 4787 046c 43795379 		.ascii	"CySysTickGetValue\000"
 4787      73546963 
 4787      6B476574 
 4787      56616C75 
 4787      6500
 4788              	.LASF94:
 4789 047e 63796465 		.ascii	"cydelayFreqHz\000"
 4789      6C617946 
 4789      72657148 
 4789      7A00
 4790              	.LASF51:
 4791 048c 4379496E 		.ascii	"CyIntSetPriority\000"
 4791      74536574 
 4791      5072696F 
 4791      72697479 
 4791      00
 4792              	.LASF12:
 4793 049d 666C6F61 		.ascii	"float\000"
 4793      7400
 4794              	.LASF99:
 4795 04a3 43794578 		.ascii	"CyExitCriticalSection\000"
 4795      69744372 
 4795      69746963 
 4795      616C5365 
 4795      6374696F 
 4796              	.LASF19:
 4797 04b9 63795379 		.ascii	"cySysTickCallback\000"
 4797      73546963 
 4797      6B43616C 
 4797      6C626163 
 4797      6B00
 4798              	.LASF50:
 4799 04cb 4379496E 		.ascii	"CyIntGetVector\000"
 4799      74476574 
 4799      56656374 
 4799      6F7200
 4800              	.LASF58:
 4801 04da 6D696C6C 		.ascii	"milliseconds\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 125


 4801      69736563 
 4801      6F6E6473 
 4801      00
 4802              	.LASF100:
 4803 04e7 43794465 		.ascii	"CyDelayCycles\000"
 4803      6C617943 
 4803      79636C65 
 4803      7300
 4804              	.LASF15:
 4805 04f5 72656738 		.ascii	"reg8\000"
 4805      00
 4806              	.LASF70:
 4807 04fa 74687265 		.ascii	"threshold\000"
 4807      73686F6C 
 4807      6400
 4808              	.LASF43:
 4809 0504 43794861 		.ascii	"CyHalt\000"
 4809      6C7400
 4810              	.LASF1:
 4811 050b 756E7369 		.ascii	"unsigned char\000"
 4811      676E6564 
 4811      20636861 
 4811      7200
 4812              	.LASF2:
 4813 0519 73686F72 		.ascii	"short int\000"
 4813      7420696E 
 4813      7400
 4814              	.LASF37:
 4815 0523 4379496E 		.ascii	"CyIntEnable\000"
 4815      74456E61 
 4815      626C6500 
 4816              	.LASF48:
 4817 052f 4379496E 		.ascii	"CyIntGetSysVector\000"
 4817      74476574 
 4817      53797356 
 4817      6563746F 
 4817      7200
 4818              	.LASF25:
 4819 0541 636C6B53 		.ascii	"clkSelect\000"
 4819      656C6563 
 4819      7400
 4820              	.LASF30:
 4821 054b 72656173 		.ascii	"reason\000"
 4821      6F6E00
 4822              	.LASF14:
 4823 0552 63686172 		.ascii	"char\000"
 4823      00
 4824              	.LASF17:
 4825 0557 63796973 		.ascii	"cyisraddress\000"
 4825      72616464 
 4825      72657373 
 4825      00
 4826              	.LASF105:
 4827 0564 433A5C55 		.ascii	"C:\\Users\\11401393\\Desktop\\bachelorproef\\Softwa"
 4827      73657273 
 4827      5C313134 
 4827      30313339 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 126


 4827      335C4465 
 4828 0592 72655073 		.ascii	"rePsocPiano\\SoftwarePianoPsoc.cydsn\000"
 4828      6F635069 
 4828      616E6F5C 
 4828      536F6674 
 4828      77617265 
 4829              	.LASF24:
 4830 05b6 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4830      73436C6B 
 4830      57726974 
 4830      65537973 
 4830      636C6B44 
 4831              	.LASF86:
 4832 05cd 43795379 		.ascii	"CySysTickSetCallback\000"
 4832      73546963 
 4832      6B536574 
 4832      43616C6C 
 4832      6261636B 
 4833              	.LASF92:
 4834 05e2 43795379 		.ascii	"CySysTickCallbacks\000"
 4834      73546963 
 4834      6B43616C 
 4834      6C626163 
 4834      6B7300
 4835              	.LASF91:
 4836 05f5 756E6971 		.ascii	"uniqueId\000"
 4836      75654964 
 4836      00
 4837              	.LASF74:
 4838 05fe 43795379 		.ascii	"CySysTickEnable\000"
 4838      73546963 
 4838      6B456E61 
 4838      626C6500 
 4839              	.LASF62:
 4840 060e 666C6173 		.ascii	"flashCtlReg\000"
 4840      6843746C 
 4840      52656700 
 4841              	.LASF57:
 4842 061a 43794465 		.ascii	"CyDelay\000"
 4842      6C617900 
 4843              	.LASF75:
 4844 0622 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4844      73546963 
 4844      6B446973 
 4844      61626C65 
 4844      496E7465 
 4845              	.LASF28:
 4846 063c 43795379 		.ascii	"CySysLvdDisable\000"
 4846      734C7664 
 4846      44697361 
 4846      626C6500 
 4847              	.LASF96:
 4848 064c 63796465 		.ascii	"cydelayFreqMhz\000"
 4848      6C617946 
 4848      7265714D 
 4848      687A00
 4849              	.LASF31:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\cctINdqa.s 			page 127


 4850 065b 73746174 		.ascii	"status\000"
 4850      757300
 4851              	.LASF72:
 4852 0662 43795379 		.ascii	"CySysTickStop\000"
 4852      73546963 
 4852      6B53746F 
 4852      7000
 4853              	.LASF26:
 4854 0670 64697669 		.ascii	"divider\000"
 4854      64657200 
 4855              	.LASF20:
 4856 0678 43795379 		.ascii	"CySysClkImoStart\000"
 4856      73436C6B 
 4856      496D6F53 
 4856      74617274 
 4856      00
 4857              	.LASF108:
 4858 0689 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 4858      73466C61 
 4858      73685365 
 4858      74576169 
 4858      74437963 
 4859              	.LASF68:
 4860 06a1 6D696372 		.ascii	"microseconds\000"
 4860      6F736563 
 4860      6F6E6473 
 4860      00
 4861              	.LASF76:
 4862 06ae 43795379 		.ascii	"CySysTickSetReload\000"
 4862      73546963 
 4862      6B536574 
 4862      52656C6F 
 4862      616400
 4863              	.LASF107:
 4864 06c1 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4864      73546963 
 4864      6B536572 
 4864      76696365 
 4864      43616C6C 
 4865              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

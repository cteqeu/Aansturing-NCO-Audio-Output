ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"EZI2C_EZI2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.EZI2C_EZI2C_STRETCH_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	EZI2C_EZI2C_STRETCH_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	EZI2C_EZI2C_STRETCH_ISR, %function
  23              	EZI2C_EZI2C_STRETCH_ISR:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c"
   1:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * File Name: EZI2C_EZI2C_INT.c
   3:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   5:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   9:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
  11:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  18:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_PVT.h"
  19:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_EZI2C_PVT.h"
  20:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  21:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #if(EZI2C_EZI2C_SCL_STRETCH_ENABLE_CONST)
  22:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     /*******************************************************************************
  23:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Function Name: EZI2C_EZI2C_STRETCH_ISR
  24:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     ********************************************************************************
  25:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  26:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Summary:
  27:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode. The clock stretching is
  28:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  used during operation.
  29:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  30:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Parameters:
  31:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  None
  32:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 2


  33:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Return:
  34:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  None
  35:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  36:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *******************************************************************************/
  37:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     CY_ISR_PROTO(EZI2C_EZI2C_STRETCH_ISR)
  38:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  28 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  29              		.cfi_def_cfa_offset 20
  30              		.cfi_offset 4, -20
  31              		.cfi_offset 5, -16
  32              		.cfi_offset 6, -12
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 4746     		mov	r7, r8
  36 0004 80B4     		push	{r7}
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 8, -24
  39:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 locBufSize;
  40:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIndex;
  41:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locStatus;
  42:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  43:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 endTransfer;
  44:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 fifoIndex;
  45:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locByte;
  46:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  47:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrCause;
  48:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrSlave;
  49:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  50:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
  51:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  52:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static volatile uint8 * EZI2C_dataBuffer; /* Pointer to data buffer              */
  53:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_bufSizeBuf;           /* Size of buffer in bytes             */
  54:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_protectBuf;           /* Start index of write protected area */
  55:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  56:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint8 activeAddress;
  57:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 ackResponse;
  58:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  59:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         ackResponse = EZI2C_EZI2C_ACK_RECEIVED_ADDRESS;
  60:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
  61:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  62:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER)
  63:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(NULL != EZI2C_customIntrHandler)
  39              		.loc 1 63 0
  40 0006 AE4B     		ldr	r3, .L41
  41 0008 1B68     		ldr	r3, [r3]
  42 000a 002B     		cmp	r3, #0
  43 000c 00D0     		beq	.L2
  64:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  65:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_customIntrHandler();
  44              		.loc 1 65 0
  45 000e 9847     		blx	r3
  46              	.LVL0:
  47              	.L2:
  66:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
  67:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #else
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 3


  68:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         CY_EZI2C_CUSTOM_INTR_HANDLER();
  69:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER) */
  70:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  71:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Make local copy of global variable */
  72:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIndex = EZI2C_EZI2C_GET_INDEX(activeAddress);
  48              		.loc 1 72 0
  49 0010 AC4B     		ldr	r3, .L41+4
  50 0012 1C88     		ldrh	r4, [r3]
  51              	.LVL1:
  73:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  74:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Get interrupt sources */
  75:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrSlave = EZI2C_GetSlaveInterruptSource();
  52              		.loc 1 75 0
  53 0014 AC4B     		ldr	r3, .L41+8
  54 0016 1D68     		ldr	r5, [r3]
  55              	.LVL2:
  76:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrCause = EZI2C_GetInterruptCause();
  56              		.loc 1 76 0
  57 0018 AC4B     		ldr	r3, .L41+12
  58 001a 1E68     		ldr	r6, [r3]
  59              	.LVL3:
  77:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  78:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  79:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  80:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  81:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         */
  82:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(0u != (locIntrSlave & (EZI2C_INTR_SLAVE_I2C_ARB_LOST |
  60              		.loc 1 82 0
  61 001c 0223     		mov	r3, #2
  62 001e FF33     		add	r3, r3, #255
  63 0020 1D42     		tst	r5, r3
  64 0022 35D0     		beq	.L3
  83:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                   EZI2C_INTR_SLAVE_I2C_BUS_ERROR)))
  84:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  85:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG &= (uint32) ~EZI2C_CTRL_ENABLED; /* Disable SCB block */
  65              		.loc 1 85 0
  66 0024 AA4B     		ldr	r3, .L41+16
  67 0026 1A68     		ldr	r2, [r3]
  68 0028 5200     		lsl	r2, r2, #1
  69 002a 5208     		lsr	r2, r2, #1
  70 002c 1A60     		str	r2, [r3]
  86:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  87:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
  88:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus))
  89:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
  90:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
  91:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus &= (uint8) ~EZI2C_EZI2C_STATUS_BUSY;
  71              		.loc 1 91 0
  72 002e A94B     		ldr	r3, .L41+20
  73 0030 1A78     		ldrb	r2, [r3]
  74 0032 2021     		mov	r1, #32
  75 0034 8A43     		bic	r2, r1
  76 0036 1A70     		strb	r2, [r3]
  92:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus |= (uint8)  EZI2C_EZI2C_STATUS_ERR;
  77              		.loc 1 92 0
  78 0038 1978     		ldrb	r1, [r3]
  79 003a 1022     		mov	r2, #16
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 4


  80 003c 0A43     		orr	r2, r1
  81 003e 1A70     		strb	r2, [r3]
  93:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  94:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  95:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u == (EZI2C_GetTxInterruptMode() & EZI2C_INTR_TX_EMPTY))
  82              		.loc 1 95 0
  83 0040 A54B     		ldr	r3, .L41+24
  84 0042 1B68     		ldr	r3, [r3]
  85 0044 D906     		lsl	r1, r3, #27
  86 0046 0BD4     		bmi	.L4
  96:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
  97:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Write complete */
  98:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_indexBuf1 != EZI2C_offsetBuf1)
  87              		.loc 1 98 0
  88 0048 A44B     		ldr	r3, .L41+28
  89 004a 1A78     		ldrb	r2, [r3]
  90 004c 9D4B     		ldr	r3, .L41+4
  91 004e 1B88     		ldrh	r3, [r3]
  92 0050 9A42     		cmp	r2, r3
  93 0052 0AD0     		beq	.L5
  99:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 100:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
  94              		.loc 1 100 0
  95 0054 9F4B     		ldr	r3, .L41+20
  96 0056 1978     		ldrb	r1, [r3]
  97 0058 0822     		mov	r2, #8
  98 005a 0A43     		orr	r2, r1
  99 005c 1A70     		strb	r2, [r3]
 100 005e 04E0     		b	.L5
 101              	.L4:
 101:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 102:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 103:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 104:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 105:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Read complete */
 106:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_NACK;
 102              		.loc 1 106 0
 103 0060 9C4B     		ldr	r3, .L41+20
 104 0062 1978     		ldrb	r1, [r3]
 105 0064 0222     		mov	r2, #2
 106 0066 0A43     		orr	r2, r1
 107 0068 1A70     		strb	r2, [r3]
 108              	.L5:
 107:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 108:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 109:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 110:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_DISABLE_SLAVE_AUTO_DATA;
 109              		.loc 1 110 0 discriminator 1
 110 006a 9D4B     		ldr	r3, .L41+32
 111 006c 1968     		ldr	r1, [r3]
 112 006e 9D4A     		ldr	r2, .L41+36
 113 0070 0A40     		and	r2, r1
 114 0072 1A60     		str	r2, [r3]
 111:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 112:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 113:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 115              		.loc 1 113 0 discriminator 1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 5


 116 0074 0023     		mov	r3, #0
 117 0076 9C4A     		ldr	r2, .L41+40
 118 0078 1360     		str	r3, [r2]
 114:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 119              		.loc 1 114 0 discriminator 1
 120 007a 974A     		ldr	r2, .L41+24
 121 007c 1360     		str	r3, [r2]
 115:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 116:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
 117:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 118:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_ALL);
 119:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 120:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
 121:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 122:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 122              		.loc 1 122 0 discriminator 1
 123 007e 9B4A     		ldr	r2, .L41+44
 124 0080 1370     		strb	r3, [r2]
 123:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 124:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG |= (uint32) EZI2C_CTRL_ENABLED;  /* Enable SCB block */
 125              		.loc 1 124 0 discriminator 1
 126 0082 934B     		ldr	r3, .L41+16
 127 0084 1968     		ldr	r1, [r3]
 128 0086 8022     		mov	r2, #128
 129 0088 1206     		lsl	r2, r2, #24
 130 008a 0A43     		orr	r2, r1
 131 008c 1A60     		str	r2, [r3]
 132 008e 11E1     		b	.L6
 133              	.L3:
 125:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 126:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         else
 127:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
 128:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 129:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 130:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_I2C_EC))
 134              		.loc 1 130 0
 135 0090 F206     		lsl	r2, r6, #27
 136 0092 02D5     		bpl	.L7
 131:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 132:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 133:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_SetI2CExtClkInterruptMode(EZI2C_NO_INTR_SOURCES);
 137              		.loc 1 133 0
 138 0094 0022     		mov	r2, #0
 139 0096 964B     		ldr	r3, .L41+48
 140 0098 1A60     		str	r2, [r3]
 141              	.L7:
 134:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 135:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 136:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & (EZI2C_INTR_CAUSE_RX | EZI2C_INTR_CAUSE_SLAVE)))
 142              		.loc 1 136 0
 143 009a 0A23     		mov	r3, #10
 144 009c 3342     		tst	r3, r6
 145 009e 00D1     		bne	.LCB122
 146 00a0 97E0     		b	.L8	@long jump
 147              	.LCB122:
 137:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 138:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 6


 139:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 140:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if (0u != (EZI2C_GetRxInterruptSourceMasked() & EZI2C_INTR_RX_NOT_EMPTY))
 148              		.loc 1 140 0
 149 00a2 944B     		ldr	r3, .L41+52
 150 00a4 1B68     		ldr	r3, [r3]
 151 00a6 5F07     		lsl	r7, r3, #29
 152 00a8 58D5     		bpl	.L9
 141:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 142:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 143:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 144:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 145:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 146:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 147:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if (0u == (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 148:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 149:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 150:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_RX_FIFO_RD_REG;
 153              		.loc 1 150 0
 154 00aa 934B     		ldr	r3, .L41+56
 155 00ac 1A68     		ldr	r2, [r3]
 156              	.LVL4:
 151:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 152:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         switch(EZI2C_fsmState)
 157              		.loc 1 152 0
 158 00ae 8F4B     		ldr	r3, .L41+44
 159 00b0 1B78     		ldrb	r3, [r3]
 160 00b2 002B     		cmp	r3, #0
 161 00b4 17D0     		beq	.L11
 162 00b6 012B     		cmp	r3, #1
 163 00b8 49D1     		bne	.L39
 153:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 154:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_BYTE_WRITE:
 155:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(0u != locBufSize)
 164              		.loc 1 155 0
 165 00ba 904B     		ldr	r3, .L41+60
 166 00bc 1B88     		ldrh	r3, [r3]
 167 00be 002B     		cmp	r3, #0
 168 00c0 0DD0     		beq	.L13
 156:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 157:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 158:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
 169              		.loc 1 158 0
 170 00c2 0121     		mov	r1, #1
 171 00c4 8E4B     		ldr	r3, .L41+64
 172 00c6 1960     		str	r1, [r3]
 159:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 160:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_dataBuffer1[locIndex] = (uint8) locByte;
 173              		.loc 1 160 0
 174 00c8 8E4B     		ldr	r3, .L41+68
 175 00ca 1B68     		ldr	r3, [r3]
 176 00cc 1B19     		add	r3, r3, r4
 177 00ce D2B2     		uxtb	r2, r2
 178              	.LVL5:
 179 00d0 1A70     		strb	r2, [r3]
 161:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex++;
 180              		.loc 1 161 0
 181 00d2 0134     		add	r4, r4, #1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 7


 182              	.LVL6:
 162:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize--;
 183              		.loc 1 162 0
 184 00d4 894B     		ldr	r3, .L41+60
 185 00d6 1A88     		ldrh	r2, [r3]
 186 00d8 013A     		sub	r2, r2, #1
 187 00da 1A80     		strh	r2, [r3]
 188 00dc 3AE0     		b	.L14
 189              	.LVL7:
 190              	.L13:
 163:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 164:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 165:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 166:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 167:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 191              		.loc 1 167 0
 192 00de 0222     		mov	r2, #2
 193              	.LVL8:
 194 00e0 874B     		ldr	r3, .L41+64
 195 00e2 1A60     		str	r2, [r3]
 196 00e4 36E0     		b	.L14
 197              	.LVL9:
 198              	.L11:
 168:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 169:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 170:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 171:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SUB_ADDRESS_SIZE16_CONST)
 172:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_HI8:
 173:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 174:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_I2C_SLAVE_GENERATE_ACK;
 175:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 176:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Store offset most significant byre */
 177:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 178:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 179:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_fsmState = EZI2C_EZI2C_FSM_OFFSET_LO8;
 180:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 181:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 182:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SUB_ADDRESS_SIZE16_CONST) */
 183:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 184:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_LO8:
 185:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 186:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if (EZI2C_SUB_ADDRESS_SIZE16)
 187:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 188:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 189:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 190:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 191:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif
 192:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 193:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Check offset against buffer size */
 194:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(locByte < (uint32) EZI2C_bufSizeBuf1)
 199              		.loc 1 194 0
 200 00e6 884B     		ldr	r3, .L41+72
 201 00e8 1B88     		ldrh	r3, [r3]
 202 00ea 9342     		cmp	r3, r2
 203 00ec 2BD9     		bls	.L15
 195:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 196:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 8


 204              		.loc 1 196 0
 205 00ee 0121     		mov	r1, #1
 206 00f0 834B     		ldr	r3, .L41+64
 207 00f2 1960     		str	r1, [r3]
 208              	.LVL10:
 197:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 198:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 199:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex = locByte;
 200:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 201:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 202:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < EZI2C_protectBuf1) ?
 209              		.loc 1 202 0
 210 00f4 854B     		ldr	r3, .L41+76
 211 00f6 1B88     		ldrh	r3, [r3]
 212 00f8 9342     		cmp	r3, r2
 213 00fa 02D9     		bls	.L34
 214              		.loc 1 202 0 is_stmt 0 discriminator 1
 215 00fc 9B1A     		sub	r3, r3, r2
 216 00fe 9BB2     		uxth	r3, r3
 217 0100 00E0     		b	.L16
 218              	.L34:
 219              		.loc 1 202 0
 220 0102 0023     		mov	r3, #0
 221              	.L16:
 222              		.loc 1 202 0 discriminator 3
 223 0104 7D49     		ldr	r1, .L41+60
 224 0106 0B80     		strh	r3, [r1]
 203:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                        (EZI2C_protectBuf1 - locByte) : (0u));
 204:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 205:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if(EZI2C_CY_SCBIP_V0)
 206:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 207:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 if(locBufSize < EZI2C_EZI2C_FIFO_SIZE)
 208:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 209:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 210:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 211:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 212:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 213:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else if(locBufSize == EZI2C_EZI2C_FIFO_SIZE)
 214:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 215:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 216:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 217:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 218:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else
 219:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 220:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is fu
 221:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 222:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 223:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 224:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #else
 225:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 226:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 227:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 228:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 229:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 230:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     */
 231:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 232:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 9


 233:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #else
 234:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 235:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     if (locBufSize < EZI2C_EZI2C_FIFO_SIZE)
 225              		.loc 1 235 0 is_stmt 1 discriminator 3
 226 0108 072B     		cmp	r3, #7
 227 010a 03D8     		bhi	.L17
 236:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 237:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 238:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 228              		.loc 1 238 0
 229 010c 0121     		mov	r1, #1
 230 010e 774B     		ldr	r3, .L41+44
 231 0110 1970     		strb	r1, [r3]
 232 0112 14E0     		b	.L18
 233              	.L17:
 239:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 240:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 241:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else if (locBufSize == EZI2C_EZI2C_FIFO_SIZE)
 234              		.loc 1 241 0
 235 0114 082B     		cmp	r3, #8
 236 0116 09D1     		bne	.L19
 242:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 243:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full 
 237              		.loc 1 243 0
 238 0118 714B     		ldr	r3, .L41+32
 239 011a 1868     		ldr	r0, [r3]
 240 011c A021     		mov	r1, #160
 241 011e 0902     		lsl	r1, r1, #8
 242 0120 0143     		orr	r1, r0
 243 0122 1960     		str	r1, [r3]
 244:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 244              		.loc 1 244 0
 245 0124 0021     		mov	r1, #0
 246 0126 704B     		ldr	r3, .L41+40
 247 0128 1960     		str	r1, [r3]
 248 012a 08E0     		b	.L18
 249              	.L19:
 245:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 246:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else
 247:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 248:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO i
 250              		.loc 1 248 0
 251 012c 6C4B     		ldr	r3, .L41+32
 252 012e 1868     		ldr	r0, [r3]
 253 0130 8021     		mov	r1, #128
 254 0132 8901     		lsl	r1, r1, #6
 255 0134 0143     		orr	r1, r0
 256 0136 1960     		str	r1, [r3]
 249:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 257              		.loc 1 249 0
 258 0138 0821     		mov	r1, #8
 259 013a 6B4B     		ldr	r3, .L41+40
 260 013c 1960     		str	r1, [r3]
 261              	.L18:
 250:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 251:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 252:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #endif
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 10


 253:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 254:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif /* (EZI2C_CY_SCBIP_V0) */
 255:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 256:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 257:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_EZI2C_SET_OFFSET(activeAddress, locIndex);
 262              		.loc 1 257 0 discriminator 2
 263 013e 674B     		ldr	r3, .L41+28
 264 0140 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex = locByte;
 265              		.loc 1 199 0 discriminator 2
 266 0142 141C     		mov	r4, r2
 267 0144 06E0     		b	.L14
 268              	.LVL11:
 269              	.L15:
 258:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 259:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 260:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 261:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 262:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 270              		.loc 1 262 0
 271 0146 0222     		mov	r2, #2
 272              	.LVL12:
 273 0148 6D4B     		ldr	r3, .L41+64
 274 014a 1A60     		str	r2, [r3]
 275 014c 02E0     		b	.L14
 276              	.LVL13:
 277              	.L39:
 263:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 264:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 265:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 266:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         default:
 267:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 278              		.loc 1 267 0 discriminator 1
 279 014e 0020     		mov	r0, #0
 280 0150 FFF7FEFF 		bl	CyHalt
 281              	.LVL14:
 282              	.L14:
 268:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 269:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 270:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 271:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 283              		.loc 1 271 0
 284 0154 0422     		mov	r2, #4
 285 0156 6E4B     		ldr	r3, .L41+80
 286 0158 1A60     		str	r2, [r3]
 287 015a 3AE0     		b	.L8
 288              	.L9:
 272:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 273:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 274:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 275:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 276:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else if (0u != (EZI2C_I2C_CTRL_REG & EZI2C_I2C_CTRL_S_READY_DATA_ACK))
 289              		.loc 1 276 0
 290 015c 604B     		ldr	r3, .L41+32
 291 015e 1B68     		ldr	r3, [r3]
 292 0160 9904     		lsl	r1, r3, #18
 293 0162 36D5     		bpl	.L8
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 11


 277:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 278:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 279:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 280:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 281:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 282:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 294              		.loc 1 282 0
 295 0164 B207     		lsl	r2, r6, #30
 296 0166 0FD5     		bpl	.L20
 283:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 284:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 285:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 297              		.loc 1 285 0
 298 0168 6A4B     		ldr	r3, .L41+84
 299 016a 1B68     		ldr	r3, [r3]
 300 016c 1F22     		mov	r2, #31
 301 016e 1340     		and	r3, r2
 302              	.LVL15:
 286:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 287:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 288:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 289:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Update with current address match */
 290:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(EZI2C_CHECK_INTR_SLAVE_MASKED(EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 291:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 292:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 293:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 294:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 295:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 296:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 297:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 298:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 */
 299:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex -= ((0u != EZI2C_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 300:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 301:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 302:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #endif
 303:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 304:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_SLAVE_AUTO_DATA;
 303              		.loc 1 304 0
 304 0170 5B4A     		ldr	r2, .L41+32
 305 0172 1068     		ldr	r0, [r2]
 306 0174 5B49     		ldr	r1, .L41+36
 307 0176 0140     		and	r1, r0
 308 0178 1160     		str	r1, [r2]
 309              	.LVL16:
 305:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 310              		.loc 1 305 0
 311 017a 0127     		mov	r7, #1
 312 017c BC46     		mov	ip, r7
 313 017e 15E0     		b	.L21
 314              	.LVL17:
 315              	.L35:
 306:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 307:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 308:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 309:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 310:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 311:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 12


 312:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_EZI2C_FIFO_SIZE;
 313:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 314:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_EZI2C_FIFO_SIZE)
 315:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 316:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 317:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 318:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_COMPLETE_TRANSFER;
 319:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 320:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 321:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 322:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Continue  transaction */
 323:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = EZI2C_EZI2C_FIFO_SIZE;
 316              		.loc 1 323 0
 317 0180 0823     		mov	r3, #8
 324:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 318              		.loc 1 324 0
 319 0182 0121     		mov	r1, #1
 320 0184 8C46     		mov	ip, r1
 321 0186 11E0     		b	.L21
 322              	.L20:
 312:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_EZI2C_FIFO_SIZE;
 323              		.loc 1 312 0
 324 0188 5C4A     		ldr	r2, .L41+60
 325 018a 1388     		ldrh	r3, [r2]
 326 018c 083B     		sub	r3, r3, #8
 327 018e 9BB2     		uxth	r3, r3
 328 0190 1380     		strh	r3, [r2]
 314:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_EZI2C_FIFO_SIZE)
 329              		.loc 1 314 0
 330 0192 082B     		cmp	r3, #8
 331 0194 F4D8     		bhi	.L35
 332              	.LVL18:
 318:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_COMPLETE_TRANSFER;
 333              		.loc 1 318 0
 334 0196 0022     		mov	r2, #0
 335 0198 9446     		mov	ip, r2
 336 019a 07E0     		b	.L21
 337              	.LVL19:
 338              	.L23:
 325:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 326:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 327:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 328:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 329:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 330:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store data in buffer */
 331:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_dataBuffer1[locIndex] = (uint8) EZI2C_RX_FIFO_RD_REG;
 339              		.loc 1 331 0 discriminator 2
 340 019c 3968     		ldr	r1, [r7]
 341 019e 0A19     		add	r2, r1, r4
 342 01a0 0168     		ldr	r1, [r0]
 343 01a2 C9B2     		uxtb	r1, r1
 344 01a4 1170     		strb	r1, [r2]
 332:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 345              		.loc 1 332 0 discriminator 2
 346 01a6 0134     		add	r4, r4, #1
 347              	.LVL20:
 328:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 13


 348              		.loc 1 328 0 discriminator 2
 349 01a8 013B     		sub	r3, r3, #1
 350              	.LVL21:
 351 01aa 01E0     		b	.L40
 352              	.LVL22:
 353              	.L21:
 331:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_dataBuffer1[locIndex] = (uint8) EZI2C_RX_FIFO_RD_REG;
 354              		.loc 1 331 0 discriminator 1
 355 01ac 554F     		ldr	r7, .L41+68
 356 01ae 5248     		ldr	r0, .L41+56
 357              	.L40:
 358              	.LVL23:
 328:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 359              		.loc 1 328 0 discriminator 1
 360 01b0 002B     		cmp	r3, #0
 361 01b2 F3D1     		bne	.L23
 333:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 334:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 335:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 336:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_COMPLETE_TRANSFER == endTransfer)
 362              		.loc 1 336 0
 363 01b4 6246     		mov	r2, ip
 364 01b6 002A     		cmp	r2, #0
 365 01b8 08D1     		bne	.L24
 337:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 338:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_SLAVE_AUTO_DATA_NACK;
 366              		.loc 1 338 0
 367 01ba 494B     		ldr	r3, .L41+32
 368              	.LVL24:
 369 01bc 1968     		ldr	r1, [r3]
 370 01be 8022     		mov	r2, #128
 371 01c0 1202     		lsl	r2, r2, #8
 372 01c2 0A43     		orr	r2, r1
 373 01c4 1A60     		str	r2, [r3]
 339:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 340:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 341:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 374              		.loc 1 341 0
 375 01c6 0022     		mov	r2, #0
 376 01c8 474B     		ldr	r3, .L41+40
 377 01ca 1A60     		str	r2, [r3]
 378              	.L24:
 342:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 343:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 344:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_FULL |
 379              		.loc 1 344 0
 380 01cc 0C22     		mov	r2, #12
 381 01ce 504B     		ldr	r3, .L41+80
 382 01d0 1A60     		str	r2, [r3]
 383              	.LVL25:
 384              	.L8:
 345:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                             EZI2C_INTR_RX_NOT_EMPTY);
 346:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 347:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 348:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 349:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 350:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 14


 351:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 352:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 353:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 354:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 355:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 385              		.loc 1 355 0
 386 01d2 B307     		lsl	r3, r6, #30
 387 01d4 4AD5     		bpl	.L25
 356:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 357:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 358:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 359:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #if(!EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 360:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP))
 388              		.loc 1 360 0
 389 01d6 EF06     		lsl	r7, r5, #27
 390 01d8 15D5     		bpl	.L26
 361:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #else
 362:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 363:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if((0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP)) &&
 364:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                    (0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus)))
 365:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #endif
 366:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 367:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 368:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 391              		.loc 1 368 0
 392 01da 0023     		mov	r3, #0
 393 01dc 424A     		ldr	r2, .L41+40
 394 01de 1360     		str	r3, [r2]
 369:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 395              		.loc 1 369 0
 396 01e0 3D4A     		ldr	r2, .L41+24
 397 01e2 1360     		str	r3, [r2]
 398              	.LVL26:
 370:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 371:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Set read completion mask */
 372:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus = EZI2C_INTR_SLAVE_I2C_NACK;
 373:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 374:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 375:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(locIndex != EZI2C_EZI2C_GET_OFFSET(activeAddress))
 399              		.loc 1 375 0
 400 01e4 3D4B     		ldr	r3, .L41+28
 401 01e6 1B78     		ldrb	r3, [r3]
 402 01e8 A342     		cmp	r3, r4
 403 01ea 01D1     		bne	.L36
 372:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus = EZI2C_INTR_SLAVE_I2C_NACK;
 404              		.loc 1 372 0
 405 01ec 0222     		mov	r2, #2
 406 01ee 00E0     		b	.L27
 407              	.L36:
 376:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 377:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locStatus |= EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
 408              		.loc 1 377 0
 409 01f0 0A22     		mov	r2, #10
 410              	.L27:
 411              	.LVL27:
 378:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 379:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 15


 380:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete read or write transaction */
 381:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 412              		.loc 1 381 0
 413 01f2 2A40     		and	r2, r5
 414              	.LVL28:
 382:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 383:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus |= (uint32)  EZI2C_curStatus;
 415              		.loc 1 383 0
 416 01f4 374B     		ldr	r3, .L41+20
 417 01f6 1978     		ldrb	r1, [r3]
 418 01f8 0A43     		orr	r2, r1
 419              	.LVL29:
 384:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= (uint32) ~EZI2C_EZI2C_STATUS_BUSY;
 385:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus = (uint8) locStatus;
 420              		.loc 1 385 0
 421 01fa 2021     		mov	r1, #32
 422 01fc 8A43     		bic	r2, r1
 423              	.LVL30:
 424 01fe 1A70     		strb	r2, [r3]
 386:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 387:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 425              		.loc 1 387 0
 426 0200 0022     		mov	r2, #0
 427 0202 3A4B     		ldr	r3, .L41+44
 428 0204 1A70     		strb	r2, [r3]
 429              	.L26:
 388:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 389:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 390:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 391:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 392:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 393:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 394:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 395:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 396:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 397:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 398:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 399:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 400:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 401:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 */
 402:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 430              		.loc 1 402 0
 431 0206 6906     		lsl	r1, r5, #25
 432 0208 2ED5     		bpl	.L28
 403:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 404:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 405:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 406:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 407:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_GET_I2C_7BIT_ADDRESS(EZI2C_RX_FIFO_RD_REG);
 408:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 409:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 410:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 411:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check received address against device addresses */
 412:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_addrBuf1 == locByte)
 413:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 414:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 415:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 16


 416:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 417:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 418:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 419:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 420:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 421:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else if(EZI2C_addrBuf2 == locByte)
 422:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 423:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 424:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer2;
 425:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf2;
 426:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf2;
 427:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 428:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS2;
 429:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 430:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 431:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 432:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Address does not match */
 433:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             ackResponse = EZI2C_EZI2C_NACK_RECEIVED_ADDRESS;
 434:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 435:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 436:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 437:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 438:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 439:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 440:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 441:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 442:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 443:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 444:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 445:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(!EZI2C_CY_SCBIP_V0)
 446:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 447:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 448:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 449:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 450:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 451:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_NACK;
 452:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 453:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 454:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 455:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 456:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 457:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SCB_MODE_UNCONFIG_CONST_CFG)
 458:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(!EZI2C_SECONDARY_ADDRESS_ENABLE)
 459:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 460:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 461:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 462:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 463:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 464:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 465:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 466:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 467:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SCB_MODE_UNCONFIG_CONST_CFG) */
 468:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 469:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 470:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_EZI2C_STATUS_BUSY;
 433              		.loc 1 470 0
 434 020a 324B     		ldr	r3, .L41+20
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 17


 435 020c 1978     		ldrb	r1, [r3]
 436 020e 2022     		mov	r2, #32
 437 0210 0A43     		orr	r2, r1
 438 0212 1A70     		strb	r2, [r3]
 471:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 472:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 473:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex = EZI2C_EZI2C_GET_OFFSET(activeAddress);
 439              		.loc 1 473 0
 440 0214 314B     		ldr	r3, .L41+28
 441 0216 1B78     		ldrb	r3, [r3]
 442 0218 1C1C     		mov	r4, r3
 443              	.LVL31:
 474:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 475:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check transaction direction */
 476:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_CHECK_I2C_STATUS(EZI2C_I2C_STATUS_S_READ))
 444              		.loc 1 476 0
 445 021a 3F4A     		ldr	r2, .L41+88
 446 021c 1268     		ldr	r2, [r2]
 447 021e D706     		lsl	r7, r2, #27
 448 0220 12D5     		bpl	.L29
 477:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 478:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 479:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = EZI2C_bufSizeBuf1 - (uint16) locIndex;
 449              		.loc 1 479 0
 450 0222 394A     		ldr	r2, .L41+72
 451 0224 1288     		ldrh	r2, [r2]
 452 0226 D31A     		sub	r3, r2, r3
 453              	.LVL32:
 454 0228 344A     		ldr	r2, .L41+60
 455 022a 1380     		strh	r3, [r2]
 480:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 481:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 482:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_CLEAR_TX_FIFO;
 456              		.loc 1 482 0
 457 022c 3B4B     		ldr	r3, .L41+92
 458 022e 1968     		ldr	r1, [r3]
 459 0230 8022     		mov	r2, #128
 460 0232 5202     		lsl	r2, r2, #9
 461 0234 0A43     		orr	r2, r1
 462 0236 1A60     		str	r2, [r3]
 463 0238 1968     		ldr	r1, [r3]
 464 023a 394A     		ldr	r2, .L41+96
 465 023c 0A40     		and	r2, r1
 466 023e 1A60     		str	r2, [r3]
 483:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetTxInterruptMode(EZI2C_INTR_TX_EMPTY);
 467              		.loc 1 483 0
 468 0240 1022     		mov	r2, #16
 469 0242 254B     		ldr	r3, .L41+24
 470 0244 1A60     		str	r2, [r3]
 471 0246 02E0     		b	.L30
 472              	.LVL33:
 473              	.L29:
 484:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 485:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 486:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 487:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 488:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_NOT_EMPTY);
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 18


 474              		.loc 1 488 0
 475 0248 0422     		mov	r2, #4
 476 024a 274B     		ldr	r3, .L41+40
 477              	.LVL34:
 478 024c 1A60     		str	r2, [r3]
 479              	.L30:
 489:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 490:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 491:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 492:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 480              		.loc 1 492 0
 481 024e 0123     		mov	r3, #1
 482 0250 344A     		ldr	r2, .L41+100
 483 0252 1360     		str	r3, [r2]
 493:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 484              		.loc 1 493 0
 485 0254 3449     		ldr	r1, .L41+104
 486 0256 1C4A     		ldr	r2, .L41+8
 487 0258 1160     		str	r1, [r2]
 494:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 495:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if (!EZI2C_CY_SCBIP_V0)
 496:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 497:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 488              		.loc 1 497 0
 489 025a 344A     		ldr	r2, .L41+108
 490 025c 1068     		ldr	r0, [r2]
 491 025e 1021     		mov	r1, #16
 492 0260 0143     		orr	r1, r0
 493 0262 1160     		str	r1, [r2]
 498:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 499:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 500:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* ACK the address byte */
 501:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_ACK;
 494              		.loc 1 501 0
 495 0264 264A     		ldr	r2, .L41+64
 496 0266 1360     		str	r3, [r2]
 497              	.L28:
 502:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 503:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 504:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 505:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 506:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearSlaveInterruptSource(locIntrSlave);
 498              		.loc 1 506 0
 499 0268 174B     		ldr	r3, .L41+8
 500 026a 1D60     		str	r5, [r3]
 501              	.L25:
 507:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 508:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 509:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 510:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 511:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 512:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             */
 513:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (EZI2C_GetInterruptCause() & EZI2C_INTR_CAUSE_TX))
 502              		.loc 1 513 0
 503 026c 174B     		ldr	r3, .L41+12
 504 026e 1B68     		ldr	r3, [r3]
 505 0270 5907     		lsl	r1, r3, #29
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 19


 506 0272 1FD5     		bpl	.L6
 514:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 515:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 516:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 do
 517:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 518:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 519:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != locBufSize)
 507              		.loc 1 519 0
 508 0274 214E     		ldr	r6, .L41+60
 509              	.LVL35:
 520:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 521:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = (uint32) EZI2C_dataBuffer1[locIndex];
 510              		.loc 1 521 0
 511 0276 234A     		ldr	r2, .L41+68
 512 0278 9446     		mov	ip, r2
 513 027a 2D4D     		ldr	r5, .L41+112
 514              	.LVL36:
 522:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 523:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize--;
 515              		.loc 1 523 0
 516 027c 301C     		mov	r0, r6
 524:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 525:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 526:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 527:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = EZI2C_EZI2C_OVFL_RETURN;
 517              		.loc 1 527 0
 518 027e FF23     		mov	r3, #255
 519 0280 9846     		mov	r8, r3
 528:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 529:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 530:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 while(EZI2C_EZI2C_FIFO_SIZE != EZI2C_GET_TX_FIFO_ENTRIES);
 520              		.loc 1 530 0
 521 0282 2C49     		ldr	r1, .L41+116
 522 0284 1F22     		mov	r2, #31
 523              	.L37:
 519:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != locBufSize)
 524              		.loc 1 519 0
 525 0286 3388     		ldrh	r3, [r6]
 526 0288 002B     		cmp	r3, #0
 527 028a 0AD0     		beq	.L31
 521:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = (uint32) EZI2C_dataBuffer1[locIndex];
 528              		.loc 1 521 0
 529 028c 6746     		mov	r7, ip
 530 028e 3F68     		ldr	r7, [r7]
 531 0290 3B19     		add	r3, r7, r4
 532 0292 1B78     		ldrb	r3, [r3]
 533 0294 DBB2     		uxtb	r3, r3
 534 0296 2B60     		str	r3, [r5]
 522:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 535              		.loc 1 522 0
 536 0298 0134     		add	r4, r4, #1
 537              	.LVL37:
 523:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize--;
 538              		.loc 1 523 0
 539 029a 0388     		ldrh	r3, [r0]
 540 029c 013B     		sub	r3, r3, #1
 541 029e 0380     		strh	r3, [r0]
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 20


 542 02a0 01E0     		b	.L32
 543              	.L31:
 527:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = EZI2C_EZI2C_OVFL_RETURN;
 544              		.loc 1 527 0
 545 02a2 4346     		mov	r3, r8
 546 02a4 2B60     		str	r3, [r5]
 547              	.L32:
 548              		.loc 1 530 0
 549 02a6 0B68     		ldr	r3, [r1]
 550 02a8 1340     		and	r3, r2
 551 02aa 082B     		cmp	r3, #8
 552 02ac EBD1     		bne	.L37
 531:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 532:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearTxInterruptSource(EZI2C_INTR_TX_EMPTY);
 553              		.loc 1 532 0
 554 02ae 1022     		mov	r2, #16
 555 02b0 214B     		ldr	r3, .L41+120
 556 02b2 1A60     		str	r2, [r3]
 557              	.L6:
 533:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 534:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 535:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 536:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Store local index copy into global variable */
 537:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 558              		.loc 1 537 0
 559 02b4 034B     		ldr	r3, .L41+4
 560 02b6 1C80     		strh	r4, [r3]
 538:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     }
 561              		.loc 1 538 0
 562              		@ sp needed
 563              	.LVL38:
 564 02b8 04BC     		pop	{r2}
 565 02ba 9046     		mov	r8, r2
 566 02bc F0BD     		pop	{r4, r5, r6, r7, pc}
 567              	.L42:
 568 02be C046     		.align	2
 569              	.L41:
 570 02c0 00000000 		.word	EZI2C_customIntrHandler
 571 02c4 00000000 		.word	EZI2C_indexBuf1
 572 02c8 400F2440 		.word	1076105024
 573 02cc 000E2440 		.word	1076104704
 574 02d0 00002440 		.word	1076101120
 575 02d4 00000000 		.word	EZI2C_curStatus
 576 02d8 880F2440 		.word	1076105096
 577 02dc 00000000 		.word	EZI2C_offsetBuf1
 578 02e0 60002440 		.word	1076101216
 579 02e4 FF5FFFFF 		.word	-40961
 580 02e8 C80F2440 		.word	1076105160
 581 02ec 00000000 		.word	EZI2C_fsmState
 582 02f0 880E2440 		.word	1076104840
 583 02f4 CC0F2440 		.word	1076105164
 584 02f8 40032440 		.word	1076101952
 585 02fc 00000000 		.word	.LANCHOR0
 586 0300 6C002440 		.word	1076101228
 587 0304 00000000 		.word	EZI2C_dataBuffer1
 588 0308 00000000 		.word	EZI2C_bufSizeBuf1
 589 030c 00000000 		.word	EZI2C_protectBuf1
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 21


 590 0310 C00F2440 		.word	1076105152
 591 0314 08032440 		.word	1076101896
 592 0318 64002440 		.word	1076101220
 593 031c 04022440 		.word	1076101636
 594 0320 FFFFFEFF 		.word	-65537
 595 0324 800E2440 		.word	1076104832
 596 0328 FF0F0000 		.word	4095
 597 032c 480F2440 		.word	1076105032
 598 0330 40022440 		.word	1076101696
 599 0334 08022440 		.word	1076101640
 600 0338 800F2440 		.word	1076105088
 601              		.cfi_endproc
 602              	.LFE1:
 603              		.size	EZI2C_EZI2C_STRETCH_ISR, .-EZI2C_EZI2C_STRETCH_ISR
 604              		.bss
 605              		.align	1
 606              		.set	.LANCHOR0,. + 0
 607              		.type	locBufSize.4788, %object
 608              		.size	locBufSize.4788, 2
 609              	locBufSize.4788:
 610 0000 0000     		.space	2
 611              		.text
 612              	.Letext0:
 613              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 614              		.file 3 ".\\Generated_Source\\PSoC4\\EZI2C_PVT.h"
 615              		.file 4 ".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_PVT.h"
 616              		.file 5 "Generated_Source\\PSoC4/CyLib.h"
 617              		.section	.debug_info,"",%progbits
 618              	.Ldebug_info0:
 619 0000 D8010000 		.4byte	0x1d8
 620 0004 0400     		.2byte	0x4
 621 0006 00000000 		.4byte	.Ldebug_abbrev0
 622 000a 04       		.byte	0x4
 623 000b 01       		.uleb128 0x1
 624 000c 32010000 		.4byte	.LASF34
 625 0010 01       		.byte	0x1
 626 0011 D9010000 		.4byte	.LASF35
 627 0015 1B020000 		.4byte	.LASF36
 628 0019 00000000 		.4byte	.Ldebug_ranges0+0
 629 001d 00000000 		.4byte	0
 630 0021 00000000 		.4byte	.Ldebug_line0
 631 0025 02       		.uleb128 0x2
 632 0026 01       		.byte	0x1
 633 0027 06       		.byte	0x6
 634 0028 B5020000 		.4byte	.LASF0
 635 002c 02       		.uleb128 0x2
 636 002d 01       		.byte	0x1
 637 002e 08       		.byte	0x8
 638 002f 7A000000 		.4byte	.LASF1
 639 0033 02       		.uleb128 0x2
 640 0034 02       		.byte	0x2
 641 0035 05       		.byte	0x5
 642 0036 84020000 		.4byte	.LASF2
 643 003a 02       		.uleb128 0x2
 644 003b 02       		.byte	0x2
 645 003c 07       		.byte	0x7
 646 003d 37000000 		.4byte	.LASF3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 22


 647 0041 02       		.uleb128 0x2
 648 0042 04       		.byte	0x4
 649 0043 05       		.byte	0x5
 650 0044 AC020000 		.4byte	.LASF4
 651 0048 02       		.uleb128 0x2
 652 0049 04       		.byte	0x4
 653 004a 07       		.byte	0x7
 654 004b 92000000 		.4byte	.LASF5
 655 004f 02       		.uleb128 0x2
 656 0050 08       		.byte	0x8
 657 0051 05       		.byte	0x5
 658 0052 CB010000 		.4byte	.LASF6
 659 0056 02       		.uleb128 0x2
 660 0057 08       		.byte	0x8
 661 0058 07       		.byte	0x7
 662 0059 1B010000 		.4byte	.LASF7
 663 005d 03       		.uleb128 0x3
 664 005e 04       		.byte	0x4
 665 005f 05       		.byte	0x5
 666 0060 696E7400 		.ascii	"int\000"
 667 0064 02       		.uleb128 0x2
 668 0065 04       		.byte	0x4
 669 0066 07       		.byte	0x7
 670 0067 F9000000 		.4byte	.LASF8
 671 006b 04       		.uleb128 0x4
 672 006c A4000000 		.4byte	.LASF9
 673 0070 02       		.byte	0x2
 674 0071 B3       		.byte	0xb3
 675 0072 2C000000 		.4byte	0x2c
 676 0076 04       		.uleb128 0x4
 677 0077 D9000000 		.4byte	.LASF10
 678 007b 02       		.byte	0x2
 679 007c B4       		.byte	0xb4
 680 007d 3A000000 		.4byte	0x3a
 681 0081 04       		.uleb128 0x4
 682 0082 E0000000 		.4byte	.LASF11
 683 0086 02       		.byte	0x2
 684 0087 B5       		.byte	0xb5
 685 0088 48000000 		.4byte	0x48
 686 008c 02       		.uleb128 0x2
 687 008d 04       		.byte	0x4
 688 008e 04       		.byte	0x4
 689 008f 6B000000 		.4byte	.LASF12
 690 0093 02       		.uleb128 0x2
 691 0094 08       		.byte	0x8
 692 0095 04       		.byte	0x4
 693 0096 D2000000 		.4byte	.LASF13
 694 009a 02       		.uleb128 0x2
 695 009b 01       		.byte	0x1
 696 009c 08       		.byte	0x8
 697 009d 04020000 		.4byte	.LASF14
 698 00a1 05       		.uleb128 0x5
 699 00a2 6B000000 		.4byte	0x6b
 700 00a6 06       		.uleb128 0x6
 701 00a7 00000000 		.4byte	.LASF15
 702 00ab 02       		.byte	0x2
 703 00ac 5F01     		.2byte	0x15f
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 23


 704 00ae B2000000 		.4byte	0xb2
 705 00b2 05       		.uleb128 0x5
 706 00b3 81000000 		.4byte	0x81
 707 00b7 06       		.uleb128 0x6
 708 00b8 AE010000 		.4byte	.LASF16
 709 00bc 02       		.byte	0x2
 710 00bd 6F01     		.2byte	0x16f
 711 00bf C3000000 		.4byte	0xc3
 712 00c3 07       		.uleb128 0x7
 713 00c4 04       		.byte	0x4
 714 00c5 C9000000 		.4byte	0xc9
 715 00c9 08       		.uleb128 0x8
 716 00ca 02       		.uleb128 0x2
 717 00cb 04       		.byte	0x4
 718 00cc 07       		.byte	0x7
 719 00cd C2010000 		.4byte	.LASF17
 720 00d1 09       		.uleb128 0x9
 721 00d2 C1020000 		.4byte	.LASF37
 722 00d6 01       		.byte	0x1
 723 00d7 25       		.byte	0x25
 724 00d8 00000000 		.4byte	.LFB1
 725 00dc 3C030000 		.4byte	.LFE1-.LFB1
 726 00e0 01       		.uleb128 0x1
 727 00e1 9C       		.byte	0x9c
 728 00e2 70010000 		.4byte	0x170
 729 00e6 0A       		.uleb128 0xa
 730 00e7 06010000 		.4byte	.LASF18
 731 00eb 01       		.byte	0x1
 732 00ec 27       		.byte	0x27
 733 00ed 76000000 		.4byte	0x76
 734 00f1 05       		.uleb128 0x5
 735 00f2 03       		.byte	0x3
 736 00f3 00000000 		.4byte	locBufSize.4788
 737 00f7 0B       		.uleb128 0xb
 738 00f8 71000000 		.4byte	.LASF19
 739 00fc 01       		.byte	0x1
 740 00fd 28       		.byte	0x28
 741 00fe 81000000 		.4byte	0x81
 742 0102 00000000 		.4byte	.LLST0
 743 0106 0B       		.uleb128 0xb
 744 0107 88000000 		.4byte	.LASF20
 745 010b 01       		.byte	0x1
 746 010c 29       		.byte	0x29
 747 010d 81000000 		.4byte	0x81
 748 0111 60000000 		.4byte	.LLST1
 749 0115 0B       		.uleb128 0xb
 750 0116 57000000 		.4byte	.LASF21
 751 011a 01       		.byte	0x1
 752 011b 2B       		.byte	0x2b
 753 011c 81000000 		.4byte	0x81
 754 0120 8F000000 		.4byte	.LLST2
 755 0124 0B       		.uleb128 0xb
 756 0125 11010000 		.4byte	.LASF22
 757 0129 01       		.byte	0x1
 758 012a 2C       		.byte	0x2c
 759 012b 81000000 		.4byte	0x81
 760 012f C5000000 		.4byte	.LLST3
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 24


 761 0133 0B       		.uleb128 0xb
 762 0134 63000000 		.4byte	.LASF23
 763 0138 01       		.byte	0x1
 764 0139 2D       		.byte	0x2d
 765 013a 81000000 		.4byte	0x81
 766 013e EE000000 		.4byte	.LLST4
 767 0142 0B       		.uleb128 0xb
 768 0143 9F020000 		.4byte	.LASF24
 769 0147 01       		.byte	0x1
 770 0148 2F       		.byte	0x2f
 771 0149 81000000 		.4byte	0x81
 772 014d 22010000 		.4byte	.LLST5
 773 0151 0B       		.uleb128 0xb
 774 0152 4A000000 		.4byte	.LASF25
 775 0156 01       		.byte	0x1
 776 0157 30       		.byte	0x30
 777 0158 81000000 		.4byte	0x81
 778 015c 35010000 		.4byte	.LLST6
 779 0160 0C       		.uleb128 0xc
 780 0161 54010000 		.4byte	.LVL14
 781 0165 CE010000 		.4byte	0x1ce
 782 0169 0D       		.uleb128 0xd
 783 016a 01       		.uleb128 0x1
 784 016b 50       		.byte	0x50
 785 016c 01       		.uleb128 0x1
 786 016d 30       		.byte	0x30
 787 016e 00       		.byte	0
 788 016f 00       		.byte	0
 789 0170 0E       		.uleb128 0xe
 790 0171 AA000000 		.4byte	.LASF26
 791 0175 03       		.byte	0x3
 792 0176 3A       		.byte	0x3a
 793 0177 B7000000 		.4byte	0xb7
 794 017b 0E       		.uleb128 0xe
 795 017c 06000000 		.4byte	.LASF27
 796 0180 04       		.byte	0x4
 797 0181 1D       		.byte	0x1d
 798 0182 A1000000 		.4byte	0xa1
 799 0186 0E       		.uleb128 0xe
 800 0187 28000000 		.4byte	.LASF28
 801 018b 04       		.byte	0x4
 802 018c 1E       		.byte	0x1e
 803 018d 6B000000 		.4byte	0x6b
 804 0191 0E       		.uleb128 0xe
 805 0192 09020000 		.4byte	.LASF29
 806 0196 04       		.byte	0x4
 807 0197 21       		.byte	0x21
 808 0198 9C010000 		.4byte	0x19c
 809 019c 07       		.uleb128 0x7
 810 019d 04       		.byte	0x4
 811 019e A1000000 		.4byte	0xa1
 812 01a2 0E       		.uleb128 0xe
 813 01a3 16000000 		.4byte	.LASF30
 814 01a7 04       		.byte	0x4
 815 01a8 22       		.byte	0x22
 816 01a9 76000000 		.4byte	0x76
 817 01ad 0E       		.uleb128 0xe
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 25


 818 01ae E7000000 		.4byte	.LASF31
 819 01b2 04       		.byte	0x4
 820 01b3 23       		.byte	0x23
 821 01b4 76000000 		.4byte	0x76
 822 01b8 0E       		.uleb128 0xe
 823 01b9 8E020000 		.4byte	.LASF32
 824 01bd 04       		.byte	0x4
 825 01be 24       		.byte	0x24
 826 01bf 6B000000 		.4byte	0x6b
 827 01c3 0E       		.uleb128 0xe
 828 01c4 C2000000 		.4byte	.LASF33
 829 01c8 04       		.byte	0x4
 830 01c9 25       		.byte	0x25
 831 01ca 76000000 		.4byte	0x76
 832 01ce 0F       		.uleb128 0xf
 833 01cf BB010000 		.4byte	.LASF38
 834 01d3 05       		.byte	0x5
 835 01d4 60       		.byte	0x60
 836 01d5 10       		.uleb128 0x10
 837 01d6 6B000000 		.4byte	0x6b
 838 01da 00       		.byte	0
 839 01db 00       		.byte	0
 840              		.section	.debug_abbrev,"",%progbits
 841              	.Ldebug_abbrev0:
 842 0000 01       		.uleb128 0x1
 843 0001 11       		.uleb128 0x11
 844 0002 01       		.byte	0x1
 845 0003 25       		.uleb128 0x25
 846 0004 0E       		.uleb128 0xe
 847 0005 13       		.uleb128 0x13
 848 0006 0B       		.uleb128 0xb
 849 0007 03       		.uleb128 0x3
 850 0008 0E       		.uleb128 0xe
 851 0009 1B       		.uleb128 0x1b
 852 000a 0E       		.uleb128 0xe
 853 000b 55       		.uleb128 0x55
 854 000c 17       		.uleb128 0x17
 855 000d 11       		.uleb128 0x11
 856 000e 01       		.uleb128 0x1
 857 000f 10       		.uleb128 0x10
 858 0010 17       		.uleb128 0x17
 859 0011 00       		.byte	0
 860 0012 00       		.byte	0
 861 0013 02       		.uleb128 0x2
 862 0014 24       		.uleb128 0x24
 863 0015 00       		.byte	0
 864 0016 0B       		.uleb128 0xb
 865 0017 0B       		.uleb128 0xb
 866 0018 3E       		.uleb128 0x3e
 867 0019 0B       		.uleb128 0xb
 868 001a 03       		.uleb128 0x3
 869 001b 0E       		.uleb128 0xe
 870 001c 00       		.byte	0
 871 001d 00       		.byte	0
 872 001e 03       		.uleb128 0x3
 873 001f 24       		.uleb128 0x24
 874 0020 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 26


 875 0021 0B       		.uleb128 0xb
 876 0022 0B       		.uleb128 0xb
 877 0023 3E       		.uleb128 0x3e
 878 0024 0B       		.uleb128 0xb
 879 0025 03       		.uleb128 0x3
 880 0026 08       		.uleb128 0x8
 881 0027 00       		.byte	0
 882 0028 00       		.byte	0
 883 0029 04       		.uleb128 0x4
 884 002a 16       		.uleb128 0x16
 885 002b 00       		.byte	0
 886 002c 03       		.uleb128 0x3
 887 002d 0E       		.uleb128 0xe
 888 002e 3A       		.uleb128 0x3a
 889 002f 0B       		.uleb128 0xb
 890 0030 3B       		.uleb128 0x3b
 891 0031 0B       		.uleb128 0xb
 892 0032 49       		.uleb128 0x49
 893 0033 13       		.uleb128 0x13
 894 0034 00       		.byte	0
 895 0035 00       		.byte	0
 896 0036 05       		.uleb128 0x5
 897 0037 35       		.uleb128 0x35
 898 0038 00       		.byte	0
 899 0039 49       		.uleb128 0x49
 900 003a 13       		.uleb128 0x13
 901 003b 00       		.byte	0
 902 003c 00       		.byte	0
 903 003d 06       		.uleb128 0x6
 904 003e 16       		.uleb128 0x16
 905 003f 00       		.byte	0
 906 0040 03       		.uleb128 0x3
 907 0041 0E       		.uleb128 0xe
 908 0042 3A       		.uleb128 0x3a
 909 0043 0B       		.uleb128 0xb
 910 0044 3B       		.uleb128 0x3b
 911 0045 05       		.uleb128 0x5
 912 0046 49       		.uleb128 0x49
 913 0047 13       		.uleb128 0x13
 914 0048 00       		.byte	0
 915 0049 00       		.byte	0
 916 004a 07       		.uleb128 0x7
 917 004b 0F       		.uleb128 0xf
 918 004c 00       		.byte	0
 919 004d 0B       		.uleb128 0xb
 920 004e 0B       		.uleb128 0xb
 921 004f 49       		.uleb128 0x49
 922 0050 13       		.uleb128 0x13
 923 0051 00       		.byte	0
 924 0052 00       		.byte	0
 925 0053 08       		.uleb128 0x8
 926 0054 15       		.uleb128 0x15
 927 0055 00       		.byte	0
 928 0056 27       		.uleb128 0x27
 929 0057 19       		.uleb128 0x19
 930 0058 00       		.byte	0
 931 0059 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 27


 932 005a 09       		.uleb128 0x9
 933 005b 2E       		.uleb128 0x2e
 934 005c 01       		.byte	0x1
 935 005d 3F       		.uleb128 0x3f
 936 005e 19       		.uleb128 0x19
 937 005f 03       		.uleb128 0x3
 938 0060 0E       		.uleb128 0xe
 939 0061 3A       		.uleb128 0x3a
 940 0062 0B       		.uleb128 0xb
 941 0063 3B       		.uleb128 0x3b
 942 0064 0B       		.uleb128 0xb
 943 0065 27       		.uleb128 0x27
 944 0066 19       		.uleb128 0x19
 945 0067 11       		.uleb128 0x11
 946 0068 01       		.uleb128 0x1
 947 0069 12       		.uleb128 0x12
 948 006a 06       		.uleb128 0x6
 949 006b 40       		.uleb128 0x40
 950 006c 18       		.uleb128 0x18
 951 006d 9642     		.uleb128 0x2116
 952 006f 19       		.uleb128 0x19
 953 0070 01       		.uleb128 0x1
 954 0071 13       		.uleb128 0x13
 955 0072 00       		.byte	0
 956 0073 00       		.byte	0
 957 0074 0A       		.uleb128 0xa
 958 0075 34       		.uleb128 0x34
 959 0076 00       		.byte	0
 960 0077 03       		.uleb128 0x3
 961 0078 0E       		.uleb128 0xe
 962 0079 3A       		.uleb128 0x3a
 963 007a 0B       		.uleb128 0xb
 964 007b 3B       		.uleb128 0x3b
 965 007c 0B       		.uleb128 0xb
 966 007d 49       		.uleb128 0x49
 967 007e 13       		.uleb128 0x13
 968 007f 02       		.uleb128 0x2
 969 0080 18       		.uleb128 0x18
 970 0081 00       		.byte	0
 971 0082 00       		.byte	0
 972 0083 0B       		.uleb128 0xb
 973 0084 34       		.uleb128 0x34
 974 0085 00       		.byte	0
 975 0086 03       		.uleb128 0x3
 976 0087 0E       		.uleb128 0xe
 977 0088 3A       		.uleb128 0x3a
 978 0089 0B       		.uleb128 0xb
 979 008a 3B       		.uleb128 0x3b
 980 008b 0B       		.uleb128 0xb
 981 008c 49       		.uleb128 0x49
 982 008d 13       		.uleb128 0x13
 983 008e 02       		.uleb128 0x2
 984 008f 17       		.uleb128 0x17
 985 0090 00       		.byte	0
 986 0091 00       		.byte	0
 987 0092 0C       		.uleb128 0xc
 988 0093 898201   		.uleb128 0x4109
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 28


 989 0096 01       		.byte	0x1
 990 0097 11       		.uleb128 0x11
 991 0098 01       		.uleb128 0x1
 992 0099 31       		.uleb128 0x31
 993 009a 13       		.uleb128 0x13
 994 009b 00       		.byte	0
 995 009c 00       		.byte	0
 996 009d 0D       		.uleb128 0xd
 997 009e 8A8201   		.uleb128 0x410a
 998 00a1 00       		.byte	0
 999 00a2 02       		.uleb128 0x2
 1000 00a3 18       		.uleb128 0x18
 1001 00a4 9142     		.uleb128 0x2111
 1002 00a6 18       		.uleb128 0x18
 1003 00a7 00       		.byte	0
 1004 00a8 00       		.byte	0
 1005 00a9 0E       		.uleb128 0xe
 1006 00aa 34       		.uleb128 0x34
 1007 00ab 00       		.byte	0
 1008 00ac 03       		.uleb128 0x3
 1009 00ad 0E       		.uleb128 0xe
 1010 00ae 3A       		.uleb128 0x3a
 1011 00af 0B       		.uleb128 0xb
 1012 00b0 3B       		.uleb128 0x3b
 1013 00b1 0B       		.uleb128 0xb
 1014 00b2 49       		.uleb128 0x49
 1015 00b3 13       		.uleb128 0x13
 1016 00b4 3F       		.uleb128 0x3f
 1017 00b5 19       		.uleb128 0x19
 1018 00b6 3C       		.uleb128 0x3c
 1019 00b7 19       		.uleb128 0x19
 1020 00b8 00       		.byte	0
 1021 00b9 00       		.byte	0
 1022 00ba 0F       		.uleb128 0xf
 1023 00bb 2E       		.uleb128 0x2e
 1024 00bc 01       		.byte	0x1
 1025 00bd 3F       		.uleb128 0x3f
 1026 00be 19       		.uleb128 0x19
 1027 00bf 03       		.uleb128 0x3
 1028 00c0 0E       		.uleb128 0xe
 1029 00c1 3A       		.uleb128 0x3a
 1030 00c2 0B       		.uleb128 0xb
 1031 00c3 3B       		.uleb128 0x3b
 1032 00c4 0B       		.uleb128 0xb
 1033 00c5 27       		.uleb128 0x27
 1034 00c6 19       		.uleb128 0x19
 1035 00c7 3C       		.uleb128 0x3c
 1036 00c8 19       		.uleb128 0x19
 1037 00c9 00       		.byte	0
 1038 00ca 00       		.byte	0
 1039 00cb 10       		.uleb128 0x10
 1040 00cc 05       		.uleb128 0x5
 1041 00cd 00       		.byte	0
 1042 00ce 49       		.uleb128 0x49
 1043 00cf 13       		.uleb128 0x13
 1044 00d0 00       		.byte	0
 1045 00d1 00       		.byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 29


 1046 00d2 00       		.byte	0
 1047              		.section	.debug_loc,"",%progbits
 1048              	.Ldebug_loc0:
 1049              	.LLST0:
 1050 0000 14000000 		.4byte	.LVL1
 1051 0004 AE000000 		.4byte	.LVL4
 1052 0008 0100     		.2byte	0x1
 1053 000a 54       		.byte	0x54
 1054 000b D4000000 		.4byte	.LVL6
 1055 000f DE000000 		.4byte	.LVL7
 1056 0013 0100     		.2byte	0x1
 1057 0015 54       		.byte	0x54
 1058 0016 F4000000 		.4byte	.LVL10
 1059 001a 46010000 		.4byte	.LVL11
 1060 001e 0100     		.2byte	0x1
 1061 0020 52       		.byte	0x52
 1062 0021 54010000 		.4byte	.LVL14
 1063 0025 1A020000 		.4byte	.LVL31
 1064 0029 0100     		.2byte	0x1
 1065 002b 54       		.byte	0x54
 1066 002c 1A020000 		.4byte	.LVL31
 1067 0030 28020000 		.4byte	.LVL32
 1068 0034 0100     		.2byte	0x1
 1069 0036 53       		.byte	0x53
 1070 0037 28020000 		.4byte	.LVL32
 1071 003b 48020000 		.4byte	.LVL33
 1072 003f 0100     		.2byte	0x1
 1073 0041 54       		.byte	0x54
 1074 0042 48020000 		.4byte	.LVL33
 1075 0046 4C020000 		.4byte	.LVL34
 1076 004a 0100     		.2byte	0x1
 1077 004c 53       		.byte	0x53
 1078 004d 4C020000 		.4byte	.LVL34
 1079 0051 B8020000 		.4byte	.LVL38
 1080 0055 0100     		.2byte	0x1
 1081 0057 54       		.byte	0x54
 1082 0058 00000000 		.4byte	0
 1083 005c 00000000 		.4byte	0
 1084              	.LLST1:
 1085 0060 E4010000 		.4byte	.LVL26
 1086 0064 F2010000 		.4byte	.LVL27
 1087 0068 0200     		.2byte	0x2
 1088 006a 32       		.byte	0x32
 1089 006b 9F       		.byte	0x9f
 1090 006c F2010000 		.4byte	.LVL27
 1091 0070 FA010000 		.4byte	.LVL29
 1092 0074 0100     		.2byte	0x1
 1093 0076 52       		.byte	0x52
 1094 0077 FA010000 		.4byte	.LVL29
 1095 007b FE010000 		.4byte	.LVL30
 1096 007f 0600     		.2byte	0x6
 1097 0081 72       		.byte	0x72
 1098 0082 00       		.sleb128 0
 1099 0083 09       		.byte	0x9
 1100 0084 DF       		.byte	0xdf
 1101 0085 1A       		.byte	0x1a
 1102 0086 9F       		.byte	0x9f
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 30


 1103 0087 00000000 		.4byte	0
 1104 008b 00000000 		.4byte	0
 1105              	.LLST2:
 1106 008f 7A010000 		.4byte	.LVL16
 1107 0093 80010000 		.4byte	.LVL17
 1108 0097 0200     		.2byte	0x2
 1109 0099 31       		.byte	0x31
 1110 009a 9F       		.byte	0x9f
 1111 009b 96010000 		.4byte	.LVL18
 1112 009f 9C010000 		.4byte	.LVL19
 1113 00a3 0200     		.2byte	0x2
 1114 00a5 30       		.byte	0x30
 1115 00a6 9F       		.byte	0x9f
 1116 00a7 9C010000 		.4byte	.LVL19
 1117 00ab AC010000 		.4byte	.LVL22
 1118 00af 0100     		.2byte	0x1
 1119 00b1 5C       		.byte	0x5c
 1120 00b2 B0010000 		.4byte	.LVL23
 1121 00b6 D2010000 		.4byte	.LVL25
 1122 00ba 0100     		.2byte	0x1
 1123 00bc 5C       		.byte	0x5c
 1124 00bd 00000000 		.4byte	0
 1125 00c1 00000000 		.4byte	0
 1126              	.LLST3:
 1127 00c5 70010000 		.4byte	.LVL15
 1128 00c9 80010000 		.4byte	.LVL17
 1129 00cd 0100     		.2byte	0x1
 1130 00cf 53       		.byte	0x53
 1131 00d0 96010000 		.4byte	.LVL18
 1132 00d4 AC010000 		.4byte	.LVL22
 1133 00d8 0100     		.2byte	0x1
 1134 00da 53       		.byte	0x53
 1135 00db B0010000 		.4byte	.LVL23
 1136 00df BC010000 		.4byte	.LVL24
 1137 00e3 0100     		.2byte	0x1
 1138 00e5 53       		.byte	0x53
 1139 00e6 00000000 		.4byte	0
 1140 00ea 00000000 		.4byte	0
 1141              	.LLST4:
 1142 00ee AE000000 		.4byte	.LVL4
 1143 00f2 D0000000 		.4byte	.LVL5
 1144 00f6 0100     		.2byte	0x1
 1145 00f8 52       		.byte	0x52
 1146 00f9 DE000000 		.4byte	.LVL7
 1147 00fd E0000000 		.4byte	.LVL8
 1148 0101 0100     		.2byte	0x1
 1149 0103 52       		.byte	0x52
 1150 0104 E6000000 		.4byte	.LVL9
 1151 0108 48010000 		.4byte	.LVL12
 1152 010c 0100     		.2byte	0x1
 1153 010e 52       		.byte	0x52
 1154 010f 4E010000 		.4byte	.LVL13
 1155 0113 53010000 		.4byte	.LVL14-1
 1156 0117 0100     		.2byte	0x1
 1157 0119 52       		.byte	0x52
 1158 011a 00000000 		.4byte	0
 1159 011e 00000000 		.4byte	0
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 31


 1160              	.LLST5:
 1161 0122 1C000000 		.4byte	.LVL3
 1162 0126 76020000 		.4byte	.LVL35
 1163 012a 0100     		.2byte	0x1
 1164 012c 56       		.byte	0x56
 1165 012d 00000000 		.4byte	0
 1166 0131 00000000 		.4byte	0
 1167              	.LLST6:
 1168 0135 18000000 		.4byte	.LVL2
 1169 0139 7C020000 		.4byte	.LVL36
 1170 013d 0100     		.2byte	0x1
 1171 013f 55       		.byte	0x55
 1172 0140 00000000 		.4byte	0
 1173 0144 00000000 		.4byte	0
 1174              		.section	.debug_aranges,"",%progbits
 1175 0000 1C000000 		.4byte	0x1c
 1176 0004 0200     		.2byte	0x2
 1177 0006 00000000 		.4byte	.Ldebug_info0
 1178 000a 04       		.byte	0x4
 1179 000b 00       		.byte	0
 1180 000c 0000     		.2byte	0
 1181 000e 0000     		.2byte	0
 1182 0010 00000000 		.4byte	.LFB1
 1183 0014 3C030000 		.4byte	.LFE1-.LFB1
 1184 0018 00000000 		.4byte	0
 1185 001c 00000000 		.4byte	0
 1186              		.section	.debug_ranges,"",%progbits
 1187              	.Ldebug_ranges0:
 1188 0000 00000000 		.4byte	.LFB1
 1189 0004 3C030000 		.4byte	.LFE1
 1190 0008 00000000 		.4byte	0
 1191 000c 00000000 		.4byte	0
 1192              		.section	.debug_line,"",%progbits
 1193              	.Ldebug_line0:
 1194 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1194      02009400 
 1194      00000201 
 1194      FB0E0D00 
 1194      01010101 
 1195              	.LASF15:
 1196 0000 72656733 		.ascii	"reg32\000"
 1196      3200
 1197              	.LASF27:
 1198 0006 455A4932 		.ascii	"EZI2C_curStatus\000"
 1198      435F6375 
 1198      72537461 
 1198      74757300 
 1199              	.LASF30:
 1200 0016 455A4932 		.ascii	"EZI2C_bufSizeBuf1\000"
 1200      435F6275 
 1200      6653697A 
 1200      65427566 
 1200      3100
 1201              	.LASF28:
 1202 0028 455A4932 		.ascii	"EZI2C_fsmState\000"
 1202      435F6673 
 1202      6D537461 
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 32


 1202      746500
 1203              	.LASF3:
 1204 0037 73686F72 		.ascii	"short unsigned int\000"
 1204      7420756E 
 1204      7369676E 
 1204      65642069 
 1204      6E7400
 1205              	.LASF25:
 1206 004a 6C6F6349 		.ascii	"locIntrSlave\000"
 1206      6E747253 
 1206      6C617665 
 1206      00
 1207              	.LASF21:
 1208 0057 656E6454 		.ascii	"endTransfer\000"
 1208      72616E73 
 1208      66657200 
 1209              	.LASF23:
 1210 0063 6C6F6342 		.ascii	"locByte\000"
 1210      79746500 
 1211              	.LASF12:
 1212 006b 666C6F61 		.ascii	"float\000"
 1212      7400
 1213              	.LASF19:
 1214 0071 6C6F6349 		.ascii	"locIndex\000"
 1214      6E646578 
 1214      00
 1215              	.LASF1:
 1216 007a 756E7369 		.ascii	"unsigned char\000"
 1216      676E6564 
 1216      20636861 
 1216      7200
 1217              	.LASF20:
 1218 0088 6C6F6353 		.ascii	"locStatus\000"
 1218      74617475 
 1218      7300
 1219              	.LASF5:
 1220 0092 6C6F6E67 		.ascii	"long unsigned int\000"
 1220      20756E73 
 1220      69676E65 
 1220      6420696E 
 1220      7400
 1221              	.LASF9:
 1222 00a4 75696E74 		.ascii	"uint8\000"
 1222      3800
 1223              	.LASF26:
 1224 00aa 455A4932 		.ascii	"EZI2C_customIntrHandler\000"
 1224      435F6375 
 1224      73746F6D 
 1224      496E7472 
 1224      48616E64 
 1225              	.LASF33:
 1226 00c2 455A4932 		.ascii	"EZI2C_indexBuf1\000"
 1226      435F696E 
 1226      64657842 
 1226      75663100 
 1227              	.LASF13:
 1228 00d2 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 33


 1228      6C6500
 1229              	.LASF10:
 1230 00d9 75696E74 		.ascii	"uint16\000"
 1230      313600
 1231              	.LASF11:
 1232 00e0 75696E74 		.ascii	"uint32\000"
 1232      333200
 1233              	.LASF31:
 1234 00e7 455A4932 		.ascii	"EZI2C_protectBuf1\000"
 1234      435F7072 
 1234      6F746563 
 1234      74427566 
 1234      3100
 1235              	.LASF8:
 1236 00f9 756E7369 		.ascii	"unsigned int\000"
 1236      676E6564 
 1236      20696E74 
 1236      00
 1237              	.LASF18:
 1238 0106 6C6F6342 		.ascii	"locBufSize\000"
 1238      75665369 
 1238      7A6500
 1239              	.LASF22:
 1240 0111 6669666F 		.ascii	"fifoIndex\000"
 1240      496E6465 
 1240      7800
 1241              	.LASF7:
 1242 011b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1242      206C6F6E 
 1242      6720756E 
 1242      7369676E 
 1242      65642069 
 1243              	.LASF34:
 1244 0132 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1244      4320342E 
 1244      382E3420 
 1244      32303134 
 1244      30353236 
 1245 0165 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1245      20726576 
 1245      6973696F 
 1245      6E203231 
 1245      31333538 
 1246 0198 67202D66 		.ascii	"g -ffunction-sections\000"
 1246      66756E63 
 1246      74696F6E 
 1246      2D736563 
 1246      74696F6E 
 1247              	.LASF16:
 1248 01ae 63796973 		.ascii	"cyisraddress\000"
 1248      72616464 
 1248      72657373 
 1248      00
 1249              	.LASF38:
 1250 01bb 43794861 		.ascii	"CyHalt\000"
 1250      6C7400
 1251              	.LASF17:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 34


 1252 01c2 73697A65 		.ascii	"sizetype\000"
 1252      74797065 
 1252      00
 1253              	.LASF6:
 1254 01cb 6C6F6E67 		.ascii	"long long int\000"
 1254      206C6F6E 
 1254      6720696E 
 1254      7400
 1255              	.LASF35:
 1256 01d9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c\000"
 1256      6E657261 
 1256      7465645F 
 1256      536F7572 
 1256      63655C50 
 1257              	.LASF14:
 1258 0204 63686172 		.ascii	"char\000"
 1258      00
 1259              	.LASF29:
 1260 0209 455A4932 		.ascii	"EZI2C_dataBuffer1\000"
 1260      435F6461 
 1260      74614275 
 1260      66666572 
 1260      3100
 1261              	.LASF36:
 1262 021b 433A5C55 		.ascii	"C:\\Users\\11401393\\Documents\\PSoC Creator\\CE976"
 1262      73657273 
 1262      5C313134 
 1262      30313339 
 1262      335C446F 
 1263 0249 33342050 		.ascii	"34 PSoC 4 Breathing LED\\CE97634 PSoC 4 Breathing L"
 1263      536F4320 
 1263      34204272 
 1263      65617468 
 1263      696E6720 
 1264 027b 45442E63 		.ascii	"ED.cydsn\000"
 1264      7964736E 
 1264      00
 1265              	.LASF2:
 1266 0284 73686F72 		.ascii	"short int\000"
 1266      7420696E 
 1266      7400
 1267              	.LASF32:
 1268 028e 455A4932 		.ascii	"EZI2C_offsetBuf1\000"
 1268      435F6F66 
 1268      66736574 
 1268      42756631 
 1268      00
 1269              	.LASF24:
 1270 029f 6C6F6349 		.ascii	"locIntrCause\000"
 1270      6E747243 
 1270      61757365 
 1270      00
 1271              	.LASF4:
 1272 02ac 6C6F6E67 		.ascii	"long int\000"
 1272      20696E74 
 1272      00
 1273              	.LASF0:
ARM GAS  C:\Users\11401393\AppData\Local\Temp\ccJ4aiaJ.s 			page 35


 1274 02b5 7369676E 		.ascii	"signed char\000"
 1274      65642063 
 1274      68617200 
 1275              	.LASF37:
 1276 02c1 455A4932 		.ascii	"EZI2C_EZI2C_STRETCH_ISR\000"
 1276      435F455A 
 1276      4932435F 
 1276      53545245 
 1276      5443485F 
 1277              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
